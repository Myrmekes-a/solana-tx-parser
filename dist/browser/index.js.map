{"version":3,"file":"index.js","sources":["../../node_modules/base64-js/index.js","../../node_modules/@solana/spl-token/lib/esm/instructions/types.mjs","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/@solana/buffer-layout/lib/Layout.js","../../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../../node_modules/bigint-buffer/dist/browser.js","../../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../../node_modules/@solana/spl-token/lib/esm/constants.mjs","../../node_modules/@solana/spl-token/lib/esm/errors.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/transfer.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/approve.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/revoke.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/mintTo.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/burn.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.mjs","../../node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.mjs","../../../src/helpers.ts","../../../src/parsers.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n//# sourceMappingURL=constants.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const initializeMintInstructionData = struct([\n    u8('instruction'),\n    u8('decimals'),\n    publicKey('mintAuthority'),\n    u8('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/**\n * Construct an InitializeMint instruction\n *\n * @param mint            Token mint account\n * @param decimals        Number of decimals in token account amounts\n * @param mintAuthority   Minting authority\n * @param freezeAuthority Optional authority that can freeze token accounts\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMintInstruction(mint, decimals, mintAuthority, freezeAuthority, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeMintInstructionData.span);\n    initializeMintInstructionData.encode({\n        instruction: TokenInstruction.InitializeMint,\n        decimals,\n        mintAuthority,\n        freezeAuthorityOption: freezeAuthority ? 1 : 0,\n        freezeAuthority: freezeAuthority || new PublicKey(0),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeMintInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMintInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, rent }, data, } = decodeInitializeMintInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeMint)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint || !rent)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeMintInstructionUnchecked({ programId, keys: [mint, rent], data, }) {\n    const { instruction, decimals, mintAuthority, freezeAuthorityOption, freezeAuthority } = initializeMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            rent,\n        },\n        data: {\n            instruction,\n            decimals,\n            mintAuthority,\n            freezeAuthority: freezeAuthorityOption ? freezeAuthority : null,\n        },\n    };\n}\n//# sourceMappingURL=initializeMint.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const initializeAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct an InitializeAccount instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     Owner of the new account\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeAccountInstruction(account, mint, owner, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccountInstructionData.span);\n    initializeAccountInstructionData.encode({ instruction: TokenInstruction.InitializeAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, rent }, data, } = decodeInitializeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner || !rent)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeAccountInstructionUnchecked({ programId, keys: [account, mint, owner, rent], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            rent,\n        },\n        data: initializeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const initializeMultisigInstructionData = struct([\n    u8('instruction'),\n    u8('m'),\n]);\n/**\n * Construct an InitializeMultisig instruction\n *\n * @param account   Multisig account\n * @param signers   Full set of signers\n * @param m         Number of required signatures\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMultisigInstruction(account, signers, m, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    for (const signer of signers) {\n        keys.push({ pubkey: signer, isSigner: false, isWritable: false });\n    }\n    const data = Buffer.alloc(initializeMultisigInstructionData.span);\n    initializeMultisigInstructionData.encode({\n        instruction: TokenInstruction.InitializeMultisig,\n        m,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMultisig instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeMultisigInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMultisigInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, rent, signers }, data, } = decodeInitializeMultisigInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeMultisig)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !rent || !signers.length)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            rent,\n            signers,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMultisig instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeMultisigInstructionUnchecked({ programId, keys: [account, rent, ...signers], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            rent,\n            signers,\n        },\n        data: initializeMultisigInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeMultisig.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const transferInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct a Transfer instruction\n *\n * @param source       Source account\n * @param destination  Destination account\n * @param owner        Owner of the source account\n * @param amount       Number of tokens to transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createTransferInstruction(source, destination, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(transferInstructionData.span);\n    transferInstructionData.encode({\n        instruction: TokenInstruction.Transfer,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Transfer instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeTransferInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { source, destination, owner, multiSigners }, data, } = decodeTransferInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Transfer)\n        throw new TokenInvalidInstructionTypeError();\n    if (!source || !destination || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            source,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Transfer instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeTransferInstructionUnchecked({ programId, keys: [source, destination, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            source,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data: transferInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=transfer.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const revokeInstructionData = struct([u8('instruction')]);\n/**\n * Construct a Revoke instruction\n *\n * @param account      Address of the token account\n * @param owner        Owner of the account\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRevokeInstruction(account, owner, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([{ pubkey: account, isSigner: false, isWritable: true }], owner, multiSigners);\n    const data = Buffer.alloc(revokeInstructionData.span);\n    revokeInstructionData.encode({ instruction: TokenInstruction.Revoke }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Revoke instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeRevokeInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== revokeInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, owner, multiSigners }, data, } = decodeRevokeInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Revoke)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Revoke instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeRevokeInstructionUnchecked({ programId, keys: [account, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            owner,\n            multiSigners,\n        },\n        data: revokeInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=revoke.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** Authority types defined by the program */\nexport var AuthorityType;\n(function (AuthorityType) {\n    AuthorityType[AuthorityType[\"MintTokens\"] = 0] = \"MintTokens\";\n    AuthorityType[AuthorityType[\"FreezeAccount\"] = 1] = \"FreezeAccount\";\n    AuthorityType[AuthorityType[\"AccountOwner\"] = 2] = \"AccountOwner\";\n    AuthorityType[AuthorityType[\"CloseAccount\"] = 3] = \"CloseAccount\";\n})(AuthorityType || (AuthorityType = {}));\n/** TODO: docs */\nexport const setAuthorityInstructionData = struct([\n    u8('instruction'),\n    u8('authorityType'),\n    u8('newAuthorityOption'),\n    publicKey('newAuthority'),\n]);\n/**\n * Construct a SetAuthority instruction\n *\n * @param account          Address of the token account\n * @param currentAuthority Current authority of the specified type\n * @param authorityType    Type of authority to set\n * @param newAuthority     New authority of the account\n * @param multiSigners     Signing accounts if `currentAuthority` is a multisig\n * @param programId        SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createSetAuthorityInstruction(account, currentAuthority, authorityType, newAuthority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([{ pubkey: account, isSigner: false, isWritable: true }], currentAuthority, multiSigners);\n    const data = Buffer.alloc(setAuthorityInstructionData.span);\n    setAuthorityInstructionData.encode({\n        instruction: TokenInstruction.SetAuthority,\n        authorityType,\n        newAuthorityOption: newAuthority ? 1 : 0,\n        newAuthority: newAuthority || new PublicKey(0),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a SetAuthority instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeSetAuthorityInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== setAuthorityInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, currentAuthority, multiSigners }, data, } = decodeSetAuthorityInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.SetAuthority)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !currentAuthority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            currentAuthority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a SetAuthority instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeSetAuthorityInstructionUnchecked({ programId, keys: [account, currentAuthority, ...multiSigners], data, }) {\n    const { instruction, authorityType, newAuthorityOption, newAuthority } = setAuthorityInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            account,\n            currentAuthority,\n            multiSigners,\n        },\n        data: {\n            instruction,\n            authorityType,\n            newAuthority: newAuthorityOption ? newAuthority : null,\n        },\n    };\n}\n//# sourceMappingURL=setAuthority.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const mintToInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct a MintTo instruction\n *\n * @param mint         Public key of the mint\n * @param destination  Address of the token account to mint to\n * @param authority    The mint authority\n * @param amount       Amount to mint\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createMintToInstruction(mint, destination, authority, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(mintToInstructionData.span);\n    mintToInstructionData.encode({\n        instruction: TokenInstruction.MintTo,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a MintTo instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeMintToInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, multiSigners }, data, } = decodeMintToInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.MintTo)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a MintTo instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeMintToInstructionUnchecked({ programId, keys: [mint, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: mintToInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=mintTo.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const burnInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct a Burn instruction\n *\n * @param account      Account to burn tokens from\n * @param mint         Mint for the account\n * @param owner        Owner of the account\n * @param amount       Number of tokens to burn\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createBurnInstruction(account, mint, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(burnInstructionData.span);\n    burnInstructionData.encode({\n        instruction: TokenInstruction.Burn,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Burn instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeBurnInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== burnInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, multiSigners }, data, } = decodeBurnInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Burn)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Burn instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeBurnInstructionUnchecked({ programId, keys: [account, mint, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data: burnInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=burn.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const closeAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct a CloseAccount instruction\n *\n * @param account      Account to close\n * @param destination  Account to receive the remaining balance of the closed account\n * @param authority    Account close authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createCloseAccountInstruction(account, destination, authority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(closeAccountInstructionData.span);\n    closeAccountInstructionData.encode({ instruction: TokenInstruction.CloseAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a CloseAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeCloseAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== closeAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, destination, authority, multiSigners }, data, } = decodeCloseAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.CloseAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !destination || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a CloseAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeCloseAccountInstructionUnchecked({ programId, keys: [account, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: closeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=closeAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const freezeAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct a FreezeAccount instruction\n *\n * @param account      Account to freeze\n * @param mint         Mint account\n * @param authority    Mint freeze authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createFreezeAccountInstruction(account, mint, authority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(freezeAccountInstructionData.span);\n    freezeAccountInstructionData.encode({ instruction: TokenInstruction.FreezeAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a FreezeAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeFreezeAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== freezeAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, authority, multiSigners }, data, } = decodeFreezeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.FreezeAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a FreezeAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeFreezeAccountInstructionUnchecked({ programId, keys: [account, mint, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data: freezeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=freezeAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const thawAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct a ThawAccount instruction\n *\n * @param account      Account to thaw\n * @param mint         Mint account\n * @param authority    Mint freeze authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createThawAccountInstruction(account, mint, authority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(thawAccountInstructionData.span);\n    thawAccountInstructionData.encode({ instruction: TokenInstruction.ThawAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a ThawAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeThawAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== thawAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, authority, multiSigners }, data, } = decodeThawAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.ThawAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a ThawAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeThawAccountInstructionUnchecked({ programId, keys: [account, mint, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data: thawAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=thawAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const transferCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct a TransferChecked instruction\n *\n * @param source       Source account\n * @param mint         Mint account\n * @param destination  Destination account\n * @param owner        Owner of the source account\n * @param amount       Number of tokens to transfer\n * @param decimals     Number of decimals in transfer amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createTransferCheckedInstruction(source, mint, destination, owner, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(transferCheckedInstructionData.span);\n    transferCheckedInstructionData.encode({\n        instruction: TokenInstruction.TransferChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a TransferChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeTransferCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { source, mint, destination, owner, multiSigners }, data, } = decodeTransferCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!source || !mint || !destination || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a TransferChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeTransferCheckedInstructionUnchecked({ programId, keys: [source, mint, destination, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data: transferCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=transferChecked.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const approveCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct an ApproveChecked instruction\n *\n * @param account      Account to set the delegate for\n * @param mint         Mint account\n * @param delegate     Account authorized to transfer of tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param decimals     Number of decimals in approve amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveCheckedInstruction(account, mint, delegate, owner, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveCheckedInstructionData.span);\n    approveCheckedInstructionData.encode({\n        instruction: TokenInstruction.ApproveChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an ApproveChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, delegate, owner, multiSigners }, data, } = decodeApproveCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.ApproveChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an ApproveChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveCheckedInstructionUnchecked({ programId, keys: [account, mint, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approveChecked.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const mintToCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct a MintToChecked instruction\n *\n * @param mint         Public key of the mint\n * @param destination  Address of the token account to mint to\n * @param authority    The mint authority\n * @param amount       Amount to mint\n * @param decimals     Number of decimals in amount to mint\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createMintToCheckedInstruction(mint, destination, authority, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(mintToCheckedInstructionData.span);\n    mintToCheckedInstructionData.encode({\n        instruction: TokenInstruction.MintToChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a MintToChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeMintToCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, multiSigners }, data, } = decodeMintToCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.MintToChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a MintToChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeMintToCheckedInstructionUnchecked({ programId, keys: [mint, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: mintToCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=mintToChecked.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from './../errors.mjs';\nimport { addSigners } from './internal.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\nexport const burnCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct a BurnChecked instruction\n *\n * @param mint         Mint for the account\n * @param account      Account to burn tokens from\n * @param owner        Owner of the account\n * @param amount       Number of tokens to burn\n * @param decimals     Number of decimals in burn amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createBurnCheckedInstruction(account, mint, owner, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(burnCheckedInstructionData.span);\n    burnCheckedInstructionData.encode({\n        instruction: TokenInstruction.BurnChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a BurnChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeBurnCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== burnCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, multiSigners }, data, } = decodeBurnCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.BurnChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a BurnChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeBurnCheckedInstructionUnchecked({ programId, keys: [account, mint, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data: burnCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=burnChecked.js.map",null,null],"names":["base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","TokenInstruction","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","Layout_1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u32","u24","u16","u8","greedy","Constant","UTF8","Blob","Boolean","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","bits","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","create","assign","fromArray","values","bindConstructorLayout","Class","layout","hasOwnProperty","layout_","boundConstructor_","encode","decode","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","count","idx","elo","reduce","v","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","word","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","ns64","s48be","f64be","seq","utf8","encodeDecode","browser","toBigIntLE_1","toBigIntLE","reversed","reverse","hex","toBigIntBE","toBufferLE_1","toBufferLE","width","padStart","toBufferBE","u64","bigIntLayout","bigInt","publicKey","publicKeyLayout","PublicKey","toBuffer","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","TokenError","TokenInvalidInstructionProgramError","TokenInvalidInstructionKeysError","TokenInvalidInstructionDataError","TokenInvalidInstructionTypeError","initializeMintInstructionData","decodeInitializeMintInstructionUnchecked","programId","keys","mint","rent","instruction","decimals","mintAuthority","freezeAuthorityOption","freezeAuthority","initializeAccountInstructionData","decodeInitializeAccountInstruction","account","owner","decodeInitializeAccountInstructionUnchecked","InitializeAccount","initializeMultisigInstructionData","decodeInitializeMultisigInstruction","signers","decodeInitializeMultisigInstructionUnchecked","InitializeMultisig","transferInstructionData","decodeTransferInstruction","source","destination","multiSigners","decodeTransferInstructionUnchecked","Transfer","approveInstructionData","decodeApproveInstruction","delegate","decodeApproveInstructionUnchecked","Approve","revokeInstructionData","decodeRevokeInstruction","decodeRevokeInstructionUnchecked","Revoke","AuthorityType","setAuthorityInstructionData","decodeSetAuthorityInstruction","currentAuthority","authorityType","newAuthorityOption","newAuthority","decodeSetAuthorityInstructionUnchecked","SetAuthority","mintToInstructionData","decodeMintToInstruction","authority","decodeMintToInstructionUnchecked","MintTo","burnInstructionData","decodeBurnInstruction","decodeBurnInstructionUnchecked","Burn","closeAccountInstructionData","decodeCloseAccountInstruction","decodeCloseAccountInstructionUnchecked","CloseAccount","freezeAccountInstructionData","decodeFreezeAccountInstruction","decodeFreezeAccountInstructionUnchecked","FreezeAccount","thawAccountInstructionData","decodeThawAccountInstruction","decodeThawAccountInstructionUnchecked","ThawAccount","transferCheckedInstructionData","decodeTransferCheckedInstruction","decodeTransferCheckedInstructionUnchecked","TransferChecked","approveCheckedInstructionData","decodeApproveCheckedInstruction","decodeApproveCheckedInstructionUnchecked","ApproveChecked","mintToCheckedInstructionData","decodeMintToCheckedInstruction","decodeMintToCheckedInstructionUnchecked","MintToChecked","burnCheckedInstructionData","decodeBurnCheckedInstruction","decodeBurnCheckedInstructionUnchecked","BurnChecked","hexToBuffer","rawHex","startsWith","parseTransactionAccounts","accounts","accountKeys","readonlySignedAccountsCount","header","numReadonlySignedAccounts","readonlyUnsignedAccountsCount","numReadonlyUnsignedAccounts","requiredSignaturesAccountsCount","numRequiredSignatures","totalAccounts","map","isSigner","isWritable","pubkey","compiledInstructionToInstruction","compiledInstruction","parsedAccounts","TransactionInstruction","utils","bs58","programIdIndex","accountIdx","parsedAccountsToMeta","accountMeta","meta","pk","encoded","find","item","parsedInstructionToInstruction","parsedInstruction","flattenTransactionResponse","transaction","result","Transaction","accountsMeta","orderedCII","_a","innerInstructions","sort","index","totalCalls","_b","accumulator","cii","instructions","lastPushedIx","callIndex","CII","add","CIIEntry","newLogContext","depth","id","instructionIndex","logMessages","dataLogs","rawLogs","parseLogs","logs","parserRe","currentInstruction","currentDepth","callStack","callIds","match","exec","groups","logTruncated","invokeResult","programInvoke","invokeProgramId","level","programSuccessResult","lastProgram","pop","lastCallIndex","successResultProgramId","programFailedResult","failedResultProgramId","failedResultErr","programCompleteFailedResult","failedCompleteError","programLog","logMessage","programData","programConsumed","programReturn","returnProgramId","returnMessage","decodeSystemInstruction","SystemInstruction","decodeInstructionType","decoded","decodeNonceAdvance","noncePubkey","authorizedPubkey","args","decodeAllocate","accountPubkey","space","BN","decodeAllocateWithSeed","basePubkey","seed","base","decodeAssign","decodeAssignWithSeed","decodeNonceAuthorize","authorized","newAuthorizedPubkey","decodeCreateAccount","fromPubkey","newAccountPubkey","lamports","decodeCreateWithSeed","decodeNonceInitialize","decodeTransfer","toPubkey","decodeTransferWithSeed","decodeNonceWithdraw","SystemProgram","unknown","decodeTokenInstruction","spl.TokenInstruction","InitializeMint","decodedIx","spl.decodeInitializeMintInstruction","spl.decodeInitializeAccountInstruction","spl.decodeInitializeMultisigInstruction","multisig","spl.decodeTransferInstruction","amount","spl.decodeApproveInstruction","spl.decodeRevokeInstruction","spl.decodeSetAuthorityInstruction","spl.decodeMintToInstruction","spl.decodeBurnInstruction","spl.decodeCloseAccountInstruction","spl.decodeFreezeAccountInstruction","spl.decodeThawAccountInstruction","spl.decodeTransferCheckedInstruction","spl.decodeApproveCheckedInstruction","spl.decodeMintToCheckedInstruction","spl.decodeBurnCheckedInstruction","InitializeAccount2","SyncNative","InitializeAccount3","InitializeMultisig2","InitializeMint2","spl.decodeInitializeMintInstructionUnchecked","spl.TOKEN_PROGRAM_ID","decodeAssociatedTokenInstruction","spl.ASSOCIATED_TOKEN_PROGRAM_ID","flattenIdlAccounts","prefix","accName","newPrefix","flat","SolanaParser","programInfos","parsers","standartParsers","toBase58","programInfo","buildIdlParser","idl","Map","parserInfo","has","instructionParsers","addParser","parser","addParserFromIdl","parsedIx","BorshInstructionCoder","ix","instr","buildUnknownParsedInstruction","flatIdlAccounts","removeParser","delete","argData","parseInstruction","parseTransactionData","txMessage","parseTransactionParsedData","txParsedMessage","metaLike","signer","async","connection","txId","flatten","getTransaction","commitment","parseTransactionDump","txDump","compileMessage"],"mappings":"oNAWA,gBATAA,WAuCA,SAAqBC,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CAL,YAiDA,SAAsBC,GACpB,IAAIK,EAcAC,EAbAL,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBM,EAAM,IAAIC,EAVhB,SAAsBR,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBK,CAAYT,EAAKG,EAAUC,IAEzCM,EAAU,EAGVC,EAAMP,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKG,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EACxBD,EACGO,EAAUZ,EAAIa,WAAWP,KAAO,GAChCM,EAAUZ,EAAIa,WAAWP,EAAI,KAAO,GACpCM,EAAUZ,EAAIa,WAAWP,EAAI,KAAO,EACrCM,EAAUZ,EAAIa,WAAWP,EAAI,IAC/BC,EAAIG,KAAcL,GAAO,GAAM,IAC/BE,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,EAGK,IAApBD,IACFC,EACGO,EAAUZ,EAAIa,WAAWP,KAAO,EAChCM,EAAUZ,EAAIa,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAmB,IAANL,GAGK,IAApBD,IACFC,EACGO,EAAUZ,EAAIa,WAAWP,KAAO,GAChCM,EAAUZ,EAAIa,WAAWP,EAAI,KAAO,EACpCM,EAAUZ,EAAIa,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,GAGnB,OAAOE,CACT,EA5FAR,cAkHA,SAAwBe,GAQtB,IAPA,IAAIT,EACAM,EAAMG,EAAMC,OACZC,EAAaL,EAAM,EACnBM,EAAQ,GACRC,EAAiB,MAGZZ,EAAI,EAAGa,EAAOR,EAAMK,EAAYV,EAAIa,EAAMb,GAAKY,EACtDD,EAAMG,KAAKC,EAAYP,EAAOR,EAAIA,EAAIY,EAAkBC,EAAOA,EAAQb,EAAIY,IAI1D,IAAfF,GACFX,EAAMS,EAAMH,EAAM,GAClBM,EAAMG,KACJE,EAAOjB,GAAO,GACdiB,EAAQjB,GAAO,EAAK,IACpB,OAEsB,IAAfW,IACTX,GAAOS,EAAMH,EAAM,IAAM,GAAKG,EAAMH,EAAM,GAC1CM,EAAMG,KACJE,EAAOjB,GAAO,IACdiB,EAAQjB,GAAO,EAAK,IACpBiB,EAAQjB,GAAO,EAAK,IACpB,MAIJ,OAAOY,EAAMM,KAAK,GACpB,GA/IID,EAAS,GACTV,EAAY,GACZJ,EAA4B,oBAAfgB,WAA6BA,WAAaC,MAEvDC,EAAO,mEACFpB,EAAI,EAAGK,EAAMe,EAAKX,OAAQT,EAAIK,IAAOL,EAC5CgB,EAAOhB,GAAKoB,EAAKpB,GACjBM,EAAUc,EAAKb,WAAWP,IAAMA,EAQlC,SAASJ,EAASF,GAChB,IAAIW,EAAMX,EAAIe,OAEd,GAAIJ,EAAM,EAAI,EACZ,MAAM,IAAIgB,MAAM,kDAKlB,IAAIxB,EAAWH,EAAI4B,QAAQ,KAO3B,OANkB,IAAdzB,IAAiBA,EAAWQ,GAMzB,CAACR,EAJcA,IAAaQ,EAC/B,EACA,EAAKR,EAAW,EAGtB,CAmEA,SAASkB,EAAaP,EAAOe,EAAOC,GAGlC,IAFA,IAAIzB,EARoB0B,EASpBC,EAAS,GACJ1B,EAAIuB,EAAOvB,EAAIwB,EAAKxB,GAAK,EAChCD,GACIS,EAAMR,IAAM,GAAM,WAClBQ,EAAMR,EAAI,IAAM,EAAK,QACP,IAAfQ,EAAMR,EAAI,IACb0B,EAAOZ,KAdFE,GADiBS,EAeM1B,IAdT,GAAK,IACxBiB,EAAOS,GAAO,GAAK,IACnBT,EAAOS,GAAO,EAAI,IAClBT,EAAa,GAANS,IAaT,OAAOC,EAAOT,KAAK,GACrB,CAlGAX,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,OClBpBoB;yFCACC,EAAAC,KAAG,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTxC,EAAIgC,EAAQE,EAAS,EAAK,EAC1BO,EAAIT,GAAQ,EAAI,EAChBU,EAAIZ,EAAOC,EAAS/B,GAOxB,IALAA,GAAKyC,EAELN,EAAIO,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAS,IAAJA,EAAWL,EAAOC,EAAS/B,GAAIA,GAAKyC,EAAGD,GAAS,GAKvE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAS,IAAJA,EAAWN,EAAOC,EAAS/B,GAAIA,GAAKyC,EAAGD,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIO,IAAsBC,KAAdF,GAAK,EAAI,GAE5BN,GAAQS,KAAKC,IAAI,EAAGb,GACpBE,GAAQI,CACT,CACD,OAAQG,GAAK,EAAI,GAAKN,EAAIS,KAAKC,IAAI,EAAGX,EAAIF,EAC5C,EAEAL,EAAAmB,MAAgB,SAAUjB,EAAQkB,EAAOjB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EAAGa,EACNZ,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBY,EAAe,KAATjB,EAAcY,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1D9C,EAAIgC,EAAO,EAAKE,EAAS,EACzBO,EAAIT,EAAO,GAAK,EAChBU,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,KAC5BR,EAAIgB,MAAMJ,GAAS,EAAI,EACvBb,EAAIG,IAEJH,EAAIU,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIX,IAAM,IAClCA,IACAc,GAAK,IAGLD,GADEb,EAAII,GAAS,EACNW,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIP,IAEpBU,GAAK,IACfd,IACAc,GAAK,GAGHd,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMY,EAAQC,EAAK,GAAKJ,KAAKC,IAAI,EAAGb,GACpCE,GAAQI,IAERH,EAAIY,EAAQH,KAAKC,IAAI,EAAGP,EAAQ,GAAKM,KAAKC,IAAI,EAAGb,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAAS/B,GAAS,IAAJoC,EAAUpC,GAAKyC,EAAGL,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAAS/B,GAAS,IAAJmC,EAAUnC,GAAKyC,EAAGN,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAAS/B,EAAIyC,IAAU,IAAJC,CAC5B;;;;;;;YC1EA,MAAMc,EAASC,EACT7B,EAAU8B,EACVC,EACe,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENC,EAAAC,OAAiBA,EACjBD,EAAAE,WAyTA,SAAqBtD,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOqD,EAAOE,OAAOvD,EACtB,EA7TDoD,EAAAI,kBAA4B,GAE5B,MAAMC,EAAe,WAwDrB,SAASC,EAAc1D,GACrB,GAAIA,EAASyD,EACX,MAAM,IAAIE,WAAW,cAAgB3D,EAAS,kCAGhD,MAAM4D,EAAM,IAAInD,WAAWT,GAE3B,OADA6D,OAAOC,eAAeF,EAAKP,EAAOU,WAC3BH,CACR,CAYD,SAASP,EAAQW,EAAKC,EAAkBjE,GAEtC,GAAmB,iBAARgE,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,EACpB,CACD,OAAOI,EAAKJ,EAAKC,EAAkBjE,EACpC,CAID,SAASoE,EAAM7B,EAAO0B,EAAkBjE,GACtC,GAAqB,iBAAVuC,EACT,OAqHJ,SAAqB8B,EAAQC,GACH,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKjB,EAAOkB,WAAWD,GACrB,MAAM,IAAIJ,UAAU,qBAAuBI,GAG7C,MAAMtE,EAAwC,EAA/BwE,EAAWH,EAAQC,GAClC,IAAIV,EAAMF,EAAa1D,GAEvB,MAAMyE,EAASb,EAAItB,MAAM+B,EAAQC,GAE7BG,IAAWzE,IAIb4D,EAAMA,EAAIc,MAAM,EAAGD,IAGrB,OAAOb,CACR,CA3IUe,CAAWpC,EAAO0B,GAG3B,GAAIW,YAAYC,OAAOtC,GACrB,OAkJJ,SAAwBuC,GACtB,GAAIC,EAAWD,EAAWrE,YAAa,CACrC,MAAMuE,EAAO,IAAIvE,WAAWqE,GAC5B,OAAOG,EAAgBD,EAAK3D,OAAQ2D,EAAKE,WAAYF,EAAKR,WAC3D,CACD,OAAOW,EAAcL,EACtB,CAxJUM,CAAc7C,GAGvB,GAAa,MAATA,EACF,MAAM,IAAI2B,UACR,yHACiD3B,GAIrD,GAAIwC,EAAWxC,EAAOqC,cACjBrC,GAASwC,EAAWxC,EAAMlB,OAAQuD,aACrC,OAAOK,EAAgB1C,EAAO0B,EAAkBjE,GAGlD,GAAiC,oBAAtBqF,oBACNN,EAAWxC,EAAO8C,oBAClB9C,GAASwC,EAAWxC,EAAMlB,OAAQgE,oBACrC,OAAOJ,EAAgB1C,EAAO0B,EAAkBjE,GAGlD,GAAqB,iBAAVuC,EACT,MAAM,IAAI2B,UACR,yEAIJ,MAAMoB,EAAU/C,EAAM+C,SAAW/C,EAAM+C,UACvC,GAAe,MAAXA,GAAmBA,IAAY/C,EACjC,OAAOc,EAAOe,KAAKkB,EAASrB,EAAkBjE,GAGhD,MAAMuF,EAkJR,SAAqBC,GACnB,GAAInC,EAAOoC,SAASD,GAAM,CACxB,MAAM5F,EAA4B,EAAtB8F,EAAQF,EAAIxF,QAClB4D,EAAMF,EAAa9D,GAEzB,OAAmB,IAAfgE,EAAI5D,QAIRwF,EAAIR,KAAKpB,EAAK,EAAG,EAAGhE,GAHXgE,CAKV,CAED,QAAmB+B,IAAfH,EAAIxF,OACN,MAA0B,iBAAfwF,EAAIxF,QAAuB4F,EAAYJ,EAAIxF,QAC7C0D,EAAa,GAEfyB,EAAcK,GAGvB,GAAiB,WAAbA,EAAIK,MAAqBnF,MAAMoF,QAAQN,EAAIO,MAC7C,OAAOZ,EAAcK,EAAIO,KAE5B,CAzKWC,CAAWzD,GACrB,GAAIgD,EAAG,OAAOA,EAEd,GAAsB,oBAAXpC,QAAgD,MAAtBA,OAAO8C,aACH,mBAA9B1D,EAAMY,OAAO8C,aACtB,OAAO5C,EAAOe,KAAK7B,EAAMY,OAAO8C,aAAa,UAAWhC,EAAkBjE,GAG5E,MAAM,IAAIkE,UACR,yHACiD3B,EAEpD,CAmBD,SAAS2D,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIjC,UAAU,0CACf,GAAIiC,EAAO,EAChB,MAAM,IAAIxC,WAAW,cAAgBwC,EAAO,iCAE/C,CA0BD,SAAShC,EAAagC,GAEpB,OADAD,EAAWC,GACJzC,EAAayC,EAAO,EAAI,EAAoB,EAAhBT,EAAQS,GAC5C,CAuCD,SAAShB,EAAeiB,GACtB,MAAMpG,EAASoG,EAAMpG,OAAS,EAAI,EAA4B,EAAxB0F,EAAQU,EAAMpG,QAC9C4D,EAAMF,EAAa1D,GACzB,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAQT,GAAK,EAC/BqE,EAAIrE,GAAgB,IAAX6G,EAAM7G,GAEjB,OAAOqE,CACR,CAUD,SAASqB,EAAiBmB,EAAOlB,EAAYlF,GAC3C,GAAIkF,EAAa,GAAKkB,EAAM5B,WAAaU,EACvC,MAAM,IAAIvB,WAAW,wCAGvB,GAAIyC,EAAM5B,WAAaU,GAAclF,GAAU,GAC7C,MAAM,IAAI2D,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiB+B,IAAfT,QAAuCS,IAAX3F,EACxB,IAAIS,WAAW2F,QACDT,IAAX3F,EACH,IAAIS,WAAW2F,EAAOlB,GAEtB,IAAIzE,WAAW2F,EAAOlB,EAAYlF,GAI1C6D,OAAOC,eAAeF,EAAKP,EAAOU,WAE3BH,CACR,CA2BD,SAAS8B,EAAS1F,GAGhB,GAAIA,GAAUyD,EACZ,MAAM,IAAIE,WAAW,0DACaF,EAAa4C,SAAS,IAAM,UAEhE,OAAgB,EAATrG,CACR,CAsGD,SAASwE,EAAYH,EAAQC,GAC3B,GAAIjB,EAAOoC,SAASpB,GAClB,OAAOA,EAAOrE,OAEhB,GAAI4E,YAAYC,OAAOR,IAAWU,EAAWV,EAAQO,aACnD,OAAOP,EAAOG,WAEhB,GAAsB,iBAAXH,EACT,MAAM,IAAIH,UACR,kGAC0BG,GAI9B,MAAMzE,EAAMyE,EAAOrE,OACbsG,EAAaC,UAAUvG,OAAS,IAAsB,IAAjBuG,UAAU,GACrD,IAAKD,GAAqB,IAAR1G,EAAW,OAAO,EAGpC,IAAI4G,GAAc,EAClB,OACE,OAAQlC,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO1E,EACT,IAAK,OACL,IAAK,QACH,OAAO6G,EAAYpC,GAAQrE,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANJ,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO8G,EAAcrC,GAAQrE,OAC/B,QACE,GAAIwG,EACF,OAAOF,GAAa,EAAIG,EAAYpC,GAAQrE,OAE9CsE,GAAY,GAAKA,GAAUqC,cAC3BH,GAAc,EAGrB,CAGD,SAASI,EAActC,EAAUxD,EAAOC,GACtC,IAAIyF,GAAc,EAclB,SALcb,IAAV7E,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQ+F,KAAK7G,OACf,MAAO,GAOT,SAJY2F,IAAR5E,GAAqBA,EAAM8F,KAAK7G,UAClCe,EAAM8F,KAAK7G,QAGTe,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKwD,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOwC,EAASD,KAAM/F,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOgG,EAAUF,KAAM/F,EAAOC,GAEhC,IAAK,QACH,OAAOiG,EAAWH,KAAM/F,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOkG,EAAYJ,KAAM/F,EAAOC,GAElC,IAAK,SACH,OAAOmG,EAAYL,KAAM/F,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOoG,EAAaN,KAAM/F,EAAOC,GAEnC,QACE,GAAIyF,EAAa,MAAM,IAAItC,UAAU,qBAAuBI,GAC5DA,GAAYA,EAAW,IAAIqC,cAC3BH,GAAc,EAGrB,CAUD,SAASY,EAAM7B,EAAG8B,EAAG1F,GACnB,MAAMpC,EAAIgG,EAAE8B,GACZ9B,EAAE8B,GAAK9B,EAAE5D,GACT4D,EAAE5D,GAAKpC,CACR,CA2ID,SAAS+H,EAAsBjG,EAAQkG,EAAKrC,EAAYZ,EAAUkD,GAEhE,GAAsB,IAAlBnG,EAAOrB,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfkF,GACTZ,EAAWY,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZU,EADJV,GAAcA,KAGZA,EAAasC,EAAM,EAAKnG,EAAOrB,OAAS,GAItCkF,EAAa,IAAGA,EAAa7D,EAAOrB,OAASkF,GAC7CA,GAAc7D,EAAOrB,OAAQ,CAC/B,GAAIwH,EAAK,OAAQ,EACZtC,EAAa7D,EAAOrB,OAAS,CACtC,MAAS,GAAIkF,EAAa,EAAG,CACzB,IAAIsC,EACC,OAAQ,EADJtC,EAAa,CAEvB,CAQD,GALmB,iBAARqC,IACTA,EAAMlE,EAAOe,KAAKmD,EAAKjD,IAIrBjB,EAAOoC,SAAS8B,GAElB,OAAmB,IAAfA,EAAIvH,QACE,EAEHyH,EAAapG,EAAQkG,EAAKrC,EAAYZ,EAAUkD,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjC9G,WAAWsD,UAAUlD,QAC1B2G,EACK/G,WAAWsD,UAAUlD,QAAQ6G,KAAKrG,EAAQkG,EAAKrC,GAE/CzE,WAAWsD,UAAU4D,YAAYD,KAAKrG,EAAQkG,EAAKrC,GAGvDuC,EAAapG,EAAQ,CAACkG,GAAMrC,EAAYZ,EAAUkD,GAG3D,MAAM,IAAItD,UAAU,uCACrB,CAED,SAASuD,EAAcjI,EAAK+H,EAAKrC,EAAYZ,EAAUkD,GACrD,IA0BIjI,EA1BAqI,EAAY,EACZC,EAAYrI,EAAIQ,OAChB8H,EAAYP,EAAIvH,OAEpB,QAAiB2F,IAAbrB,IAEe,UADjBA,EAAWyD,OAAOzD,GAAUqC,gBACY,UAAbrC,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAI9E,EAAIQ,OAAS,GAAKuH,EAAIvH,OAAS,EACjC,OAAQ,EAEV4H,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5C,GAAc,CACf,CAGH,SAAS9D,EAAMwC,EAAKrE,GAClB,OAAkB,IAAdqI,EACKhE,EAAIrE,GAEJqE,EAAIoE,aAAazI,EAAIqI,EAE/B,CAGD,GAAIJ,EAAK,CACP,IAAIS,GAAc,EAClB,IAAK1I,EAAI2F,EAAY3F,EAAIsI,EAAWtI,IAClC,GAAI6B,EAAK5B,EAAKD,KAAO6B,EAAKmG,GAAqB,IAAhBU,EAAoB,EAAI1I,EAAI0I,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa1I,GAChCA,EAAI0I,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmB1I,GAAKA,EAAI0I,GAChCA,GAAc,CAGtB,MAEI,IADI/C,EAAa4C,EAAYD,IAAW3C,EAAa2C,EAAYC,GAC5DvI,EAAI2F,EAAY3F,GAAK,EAAGA,IAAK,CAChC,IAAI2I,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWK,IAC7B,GAAI/G,EAAK5B,EAAKD,EAAI4I,KAAO/G,EAAKmG,EAAKY,GAAI,CACrCD,GAAQ,EACR,KACD,CAEH,GAAIA,EAAO,OAAO3I,CACnB,CAGH,OAAQ,CACT,CAcD,SAAS6I,EAAUxE,EAAKS,EAAQ/C,EAAQtB,GACtCsB,EAAS+G,OAAO/G,IAAW,EAC3B,MAAMgH,EAAY1E,EAAI5D,OAASsB,EAC1BtB,GAGHA,EAASqI,OAAOrI,IACHsI,IACXtI,EAASsI,GAJXtI,EAASsI,EAQX,MAAMC,EAASlE,EAAOrE,OAKtB,IAAIT,EACJ,IAJIS,EAASuI,EAAS,IACpBvI,EAASuI,EAAS,GAGfhJ,EAAI,EAAGA,EAAIS,IAAUT,EAAG,CAC3B,MAAMiJ,EAASC,SAASpE,EAAOqE,OAAW,EAAJnJ,EAAO,GAAI,IACjD,GAAIqG,EAAY4C,GAAS,OAAOjJ,EAChCqE,EAAItC,EAAS/B,GAAKiJ,CACnB,CACD,OAAOjJ,CACR,CAED,SAASoJ,EAAW/E,EAAKS,EAAQ/C,EAAQtB,GACvC,OAAO4I,EAAWnC,EAAYpC,EAAQT,EAAI5D,OAASsB,GAASsC,EAAKtC,EAAQtB,EAC1E,CAED,SAAS6I,EAAYjF,EAAKS,EAAQ/C,EAAQtB,GACxC,OAAO4I,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAIxJ,EAAI,EAAGA,EAAIuJ,EAAI9I,SAAUT,EAEhCwJ,EAAU1I,KAAyB,IAApByI,EAAIhJ,WAAWP,IAEhC,OAAOwJ,CACR,CAhqCmBC,CAAa3E,GAAST,EAAKtC,EAAQtB,EACtD,CAED,SAASiJ,EAAarF,EAAKS,EAAQ/C,EAAQtB,GACzC,OAAO4I,EAAWlC,EAAcrC,GAAST,EAAKtC,EAAQtB,EACvD,CAED,SAASkJ,EAAWtF,EAAKS,EAAQ/C,EAAQtB,GACvC,OAAO4I,EA0pCT,SAAyBE,EAAKK,GAC5B,IAAI3G,EAAG4G,EAAIC,EACX,MAAMN,EAAY,GAClB,IAAK,IAAIxJ,EAAI,EAAGA,EAAIuJ,EAAI9I,WACjBmJ,GAAS,GAAK,KADa5J,EAGhCiD,EAAIsG,EAAIhJ,WAAWP,GACnB6J,EAAK5G,GAAK,EACV6G,EAAK7G,EAAI,IACTuG,EAAU1I,KAAKgJ,GACfN,EAAU1I,KAAK+I,GAGjB,OAAOL,CACR,CAxqCmBO,CAAejF,EAAQT,EAAI5D,OAASsB,GAASsC,EAAKtC,EAAQtB,EAC7E,CA8ED,SAASkH,EAAatD,EAAK9C,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQ6C,EAAI5D,OACtB+C,EAAOwG,cAAc3F,GAErBb,EAAOwG,cAAc3F,EAAIc,MAAM5D,EAAOC,GAEhD,CAED,SAASgG,EAAWnD,EAAK9C,EAAOC,GAC9BA,EAAMqB,KAAKoH,IAAI5F,EAAI5D,OAAQe,GAC3B,MAAM0I,EAAM,GAEZ,IAAIlK,EAAIuB,EACR,KAAOvB,EAAIwB,GAAK,CACd,MAAM2I,EAAY9F,EAAIrE,GACtB,IAAIoK,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAInK,EAAIqK,GAAoB7I,EAAK,CAC/B,IAAI8I,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAajG,EAAIrE,EAAI,GACO,MAAV,IAAbsK,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAajG,EAAIrE,EAAI,GACrBuK,EAAYlG,EAAIrE,EAAI,GACQ,MAAV,IAAbsK,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAajG,EAAIrE,EAAI,GACrBuK,EAAYlG,EAAIrE,EAAI,GACpBwK,EAAanG,EAAIrE,EAAI,GACO,MAAV,IAAbsK,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAIrB,CAEiB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAIpJ,KAAKsJ,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAIpJ,KAAKsJ,GACTpK,GAAKqK,CACN,CAED,OAQF,SAAgCK,GAC9B,MAAMrK,EAAMqK,EAAWjK,OACvB,GAAIJ,GAAOsK,EACT,OAAOnC,OAAOoC,aAAaC,MAAMrC,OAAQkC,GAI3C,IAAIR,EAAM,GACNlK,EAAI,EACR,KAAOA,EAAIK,GACT6J,GAAO1B,OAAOoC,aAAaC,MACzBrC,OACAkC,EAAWvF,MAAMnF,EAAGA,GAAK2K,IAG7B,OAAOT,CACR,CAxBQY,CAAsBZ,EAC9B,CA3+BDrG,EAAAkH,WAAqB7G,EAgBrBJ,EAAOkH,oBAUP,WAEE,IACE,MAAM/K,EAAM,IAAIiB,WAAW,GACrB+J,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAE,GAG5C,OAFA5G,OAAOC,eAAe0G,EAAO/J,WAAWsD,WACxCF,OAAOC,eAAetE,EAAKgL,GACN,KAAdhL,EAAIiL,KAGZ,CAFC,MAAO/I,GACP,OAAO,CACR,CACF,CArB4BgJ,GAExBrH,EAAOkH,qBAA0C,oBAAZI,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJ/G,OAAOgH,eAAexH,EAAOU,UAAW,SAAU,CAChD+G,YAAY,EACZC,IAAK,WACH,GAAK1H,EAAOoC,SAASoB,MACrB,OAAOA,KAAKxF,MACb,IAGHwC,OAAOgH,eAAexH,EAAOU,UAAW,SAAU,CAChD+G,YAAY,EACZC,IAAK,WACH,GAAK1H,EAAOoC,SAASoB,MACrB,OAAOA,KAAK3B,UACb,IAoCH7B,EAAO2H,SAAW,KA8DlB3H,EAAOe,KAAO,SAAU7B,EAAO0B,EAAkBjE,GAC/C,OAAOoE,EAAK7B,EAAO0B,EAAkBjE,EACtC,EAID6D,OAAOC,eAAeT,EAAOU,UAAWtD,WAAWsD,WACnDF,OAAOC,eAAeT,EAAQ5C,YA8B9B4C,EAAOE,MAAQ,SAAU4C,EAAM8E,EAAM3G,GACnC,OArBF,SAAgB6B,EAAM8E,EAAM3G,GAE1B,OADA4B,EAAWC,GACPA,GAAQ,EACHzC,EAAayC,QAETR,IAATsF,EAIyB,iBAAb3G,EACVZ,EAAayC,GAAM8E,KAAKA,EAAM3G,GAC9BZ,EAAayC,GAAM8E,KAAKA,GAEvBvH,EAAayC,EACrB,CAOQ5C,CAAM4C,EAAM8E,EAAM3G,EAC1B,EAUDjB,EAAOc,YAAc,SAAUgC,GAC7B,OAAOhC,EAAYgC,EACpB,EAID9C,EAAO6H,gBAAkB,SAAU/E,GACjC,OAAOhC,EAAYgC,EACpB,EA6GD9C,EAAOoC,SAAW,SAAmBF,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAE4F,WACpB5F,IAAMlC,EAAOU,SAChB,EAEDV,EAAO+H,QAAU,SAAkBC,EAAG9F,GAGpC,GAFIR,EAAWsG,EAAG5K,cAAa4K,EAAIhI,EAAOe,KAAKiH,EAAGA,EAAE/J,OAAQ+J,EAAE7G,aAC1DO,EAAWQ,EAAG9E,cAAa8E,EAAIlC,EAAOe,KAAKmB,EAAGA,EAAEjE,OAAQiE,EAAEf,cACzDnB,EAAOoC,SAAS4F,KAAOhI,EAAOoC,SAASF,GAC1C,MAAM,IAAIrB,UACR,yEAIJ,GAAImH,IAAM9F,EAAG,OAAO,EAEpB,IAAI+F,EAAID,EAAErL,OACNuL,EAAIhG,EAAEvF,OAEV,IAAK,IAAIT,EAAI,EAAGK,EAAMwC,KAAKoH,IAAI8B,EAAGC,GAAIhM,EAAIK,IAAOL,EAC/C,GAAI8L,EAAE9L,KAAOgG,EAAEhG,GAAI,CACjB+L,EAAID,EAAE9L,GACNgM,EAAIhG,EAAEhG,GACN,KACD,CAGH,OAAI+L,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACR,EAEDjI,EAAOkB,WAAa,SAAqBD,GACvC,OAAQyD,OAAOzD,GAAUqC,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEZ,EAEDtD,EAAOmI,OAAS,SAAiBC,EAAMzL,GACrC,IAAKU,MAAMoF,QAAQ2F,GACjB,MAAM,IAAIvH,UAAU,+CAGtB,GAAoB,IAAhBuH,EAAKzL,OACP,OAAOqD,EAAOE,MAAM,GAGtB,IAAIhE,EACJ,QAAeoG,IAAX3F,EAEF,IADAA,EAAS,EACJT,EAAI,EAAGA,EAAIkM,EAAKzL,SAAUT,EAC7BS,GAAUyL,EAAKlM,GAAGS,OAItB,MAAMqB,EAASgC,EAAOc,YAAYnE,GAClC,IAAI0L,EAAM,EACV,IAAKnM,EAAI,EAAGA,EAAIkM,EAAKzL,SAAUT,EAAG,CAChC,IAAIqE,EAAM6H,EAAKlM,GACf,GAAIwF,EAAWnB,EAAKnD,YACdiL,EAAM9H,EAAI5D,OAASqB,EAAOrB,QACvBqD,EAAOoC,SAAS7B,KAAMA,EAAMP,EAAOe,KAAKR,IAC7CA,EAAIoB,KAAK3D,EAAQqK,IAEjBjL,WAAWsD,UAAU4H,IAAIjE,KACvBrG,EACAuC,EACA8H,OAGC,KAAKrI,EAAOoC,SAAS7B,GAC1B,MAAM,IAAIM,UAAU,+CAEpBN,EAAIoB,KAAK3D,EAAQqK,EAClB,CACDA,GAAO9H,EAAI5D,MACZ,CACD,OAAOqB,CACR,EAiDDgC,EAAOmB,WAAaA,EA8EpBnB,EAAOU,UAAUoH,WAAY,EAQ7B9H,EAAOU,UAAU6H,OAAS,WACxB,MAAMhM,EAAMiH,KAAK7G,OACjB,GAAIJ,EAAM,GAAM,EACd,MAAM,IAAI+D,WAAW,6CAEvB,IAAK,IAAIpE,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B6H,EAAKP,KAAMtH,EAAGA,EAAI,GAEpB,OAAOsH,IACR,EAEDxD,EAAOU,UAAU8H,OAAS,WACxB,MAAMjM,EAAMiH,KAAK7G,OACjB,GAAIJ,EAAM,GAAM,EACd,MAAM,IAAI+D,WAAW,6CAEvB,IAAK,IAAIpE,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B6H,EAAKP,KAAMtH,EAAGA,EAAI,GAClB6H,EAAKP,KAAMtH,EAAI,EAAGA,EAAI,GAExB,OAAOsH,IACR,EAEDxD,EAAOU,UAAU+H,OAAS,WACxB,MAAMlM,EAAMiH,KAAK7G,OACjB,GAAIJ,EAAM,GAAM,EACd,MAAM,IAAI+D,WAAW,6CAEvB,IAAK,IAAIpE,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B6H,EAAKP,KAAMtH,EAAGA,EAAI,GAClB6H,EAAKP,KAAMtH,EAAI,EAAGA,EAAI,GACtB6H,EAAKP,KAAMtH,EAAI,EAAGA,EAAI,GACtB6H,EAAKP,KAAMtH,EAAI,EAAGA,EAAI,GAExB,OAAOsH,IACR,EAEDxD,EAAOU,UAAUsC,SAAW,WAC1B,MAAMrG,EAAS6G,KAAK7G,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBuG,UAAUvG,OAAqB+G,EAAUF,KAAM,EAAG7G,GAC/C4G,EAAawD,MAAMvD,KAAMN,UACjC,EAEDlD,EAAOU,UAAUgI,eAAiB1I,EAAOU,UAAUsC,SAEnDhD,EAAOU,UAAUiI,OAAS,SAAiBzG,GACzC,IAAKlC,EAAOoC,SAASF,GAAI,MAAM,IAAIrB,UAAU,6BAC7C,OAAI2C,OAAStB,GACsB,IAA5BlC,EAAO+H,QAAQvE,KAAMtB,EAC7B,EAEDlC,EAAOU,UAAUkI,QAAU,WACzB,IAAInD,EAAM,GACV,MAAMoD,EAAM9I,EAAQI,kBAGpB,OAFAsF,EAAMjC,KAAKR,SAAS,MAAO,EAAG6F,GAAKC,QAAQ,UAAW,OAAOC,OACzDvF,KAAK7G,OAASkM,IAAKpD,GAAO,SACvB,WAAaA,EAAM,GAC3B,EACG5F,IACFG,EAAOU,UAAUb,GAAuBG,EAAOU,UAAUkI,SAG3D5I,EAAOU,UAAUqH,QAAU,SAAkBiB,EAAQvL,EAAOC,EAAKuL,EAAWC,GAI1E,GAHIxH,EAAWsH,EAAQ5L,cACrB4L,EAAShJ,EAAOe,KAAKiI,EAAQA,EAAO/K,OAAQ+K,EAAO7H,cAEhDnB,EAAOoC,SAAS4G,GACnB,MAAM,IAAInI,UACR,wFAC2BmI,GAiB/B,QAbc1G,IAAV7E,IACFA,EAAQ,QAEE6E,IAAR5E,IACFA,EAAMsL,EAASA,EAAOrM,OAAS,QAEf2F,IAAd2G,IACFA,EAAY,QAEE3G,IAAZ4G,IACFA,EAAU1F,KAAK7G,QAGbc,EAAQ,GAAKC,EAAMsL,EAAOrM,QAAUsM,EAAY,GAAKC,EAAU1F,KAAK7G,OACtE,MAAM,IAAI2D,WAAW,sBAGvB,GAAI2I,GAAaC,GAAWzL,GAASC,EACnC,OAAO,EAET,GAAIuL,GAAaC,EACf,OAAQ,EAEV,GAAIzL,GAASC,EACX,OAAO,EAQT,GAAI8F,OAASwF,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJxK,KAAS,IADTD,KAAW,GASX,MAAMlB,EAAMwC,KAAKoH,IAAI8B,EAAGC,GAElBiB,EAAW3F,KAAKnC,MAAM4H,EAAWC,GACjCE,EAAaJ,EAAO3H,MAAM5D,EAAOC,GAEvC,IAAK,IAAIxB,EAAI,EAAGA,EAAIK,IAAOL,EACzB,GAAIiN,EAASjN,KAAOkN,EAAWlN,GAAI,CACjC+L,EAAIkB,EAASjN,GACbgM,EAAIkB,EAAWlN,GACf,KACD,CAGH,OAAI+L,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACR,EA2HDjI,EAAOU,UAAU2I,SAAW,SAAmBnF,EAAKrC,EAAYZ,GAC9D,OAAoD,IAA7CuC,KAAKhG,QAAQ0G,EAAKrC,EAAYZ,EACtC,EAEDjB,EAAOU,UAAUlD,QAAU,SAAkB0G,EAAKrC,EAAYZ,GAC5D,OAAOgD,EAAqBT,KAAMU,EAAKrC,EAAYZ,GAAU,EAC9D,EAEDjB,EAAOU,UAAU4D,YAAc,SAAsBJ,EAAKrC,EAAYZ,GACpE,OAAOgD,EAAqBT,KAAMU,EAAKrC,EAAYZ,GAAU,EAC9D,EA4CDjB,EAAOU,UAAUzB,MAAQ,SAAgB+B,EAAQ/C,EAAQtB,EAAQsE,GAE/D,QAAeqB,IAAXrE,EACFgD,EAAW,OACXtE,EAAS6G,KAAK7G,OACdsB,EAAS,OAEJ,QAAeqE,IAAX3F,GAA0C,iBAAXsB,EACxCgD,EAAWhD,EACXtB,EAAS6G,KAAK7G,OACdsB,EAAS,MAEJ,KAAIqL,SAASrL,GAUlB,MAAM,IAAIV,MACR,2EAVFU,KAAoB,EAChBqL,SAAS3M,IACXA,KAAoB,OACH2F,IAAbrB,IAAwBA,EAAW,UAEvCA,EAAWtE,EACXA,OAAS2F,EAMZ,CAED,MAAM2C,EAAYzB,KAAK7G,OAASsB,EAGhC,SAFeqE,IAAX3F,GAAwBA,EAASsI,KAAWtI,EAASsI,GAEpDjE,EAAOrE,OAAS,IAAMA,EAAS,GAAKsB,EAAS,IAAOA,EAASuF,KAAK7G,OACrE,MAAM,IAAI2D,WAAW,0CAGlBW,IAAUA,EAAW,QAE1B,IAAIkC,GAAc,EAClB,OACE,OAAQlC,GACN,IAAK,MACH,OAAO8D,EAASvB,KAAMxC,EAAQ/C,EAAQtB,GAExC,IAAK,OACL,IAAK,QACH,OAAO2I,EAAU9B,KAAMxC,EAAQ/C,EAAQtB,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO6I,EAAWhC,KAAMxC,EAAQ/C,EAAQtB,GAE1C,IAAK,SAEH,OAAOiJ,EAAYpC,KAAMxC,EAAQ/C,EAAQtB,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOkJ,EAAUrC,KAAMxC,EAAQ/C,EAAQtB,GAEzC,QACE,GAAIwG,EAAa,MAAM,IAAItC,UAAU,qBAAuBI,GAC5DA,GAAY,GAAKA,GAAUqC,cAC3BH,GAAc,EAGrB,EAEDnD,EAAOU,UAAU6I,OAAS,WACxB,MAAO,CACL/G,KAAM,SACNE,KAAMrF,MAAMqD,UAAUW,MAAMgD,KAAKb,KAAKgG,MAAQhG,KAAM,GAEvD,EAyFD,MAAMqD,EAAuB,KAoB7B,SAASlD,EAAYpD,EAAK9C,EAAOC,GAC/B,IAAI+L,EAAM,GACV/L,EAAMqB,KAAKoH,IAAI5F,EAAI5D,OAAQe,GAE3B,IAAK,IAAIxB,EAAIuB,EAAOvB,EAAIwB,IAAOxB,EAC7BuN,GAAO/E,OAAOoC,aAAsB,IAATvG,EAAIrE,IAEjC,OAAOuN,CACR,CAED,SAAS7F,EAAarD,EAAK9C,EAAOC,GAChC,IAAI+L,EAAM,GACV/L,EAAMqB,KAAKoH,IAAI5F,EAAI5D,OAAQe,GAE3B,IAAK,IAAIxB,EAAIuB,EAAOvB,EAAIwB,IAAOxB,EAC7BuN,GAAO/E,OAAOoC,aAAavG,EAAIrE,IAEjC,OAAOuN,CACR,CAED,SAAShG,EAAUlD,EAAK9C,EAAOC,GAC7B,MAAMnB,EAAMgE,EAAI5D,SAEXc,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMnB,KAAKmB,EAAMnB,GAExC,IAAImN,EAAM,GACV,IAAK,IAAIxN,EAAIuB,EAAOvB,EAAIwB,IAAOxB,EAC7BwN,GAAOC,EAAoBpJ,EAAIrE,IAEjC,OAAOwN,CACR,CAED,SAAS5F,EAAcvD,EAAK9C,EAAOC,GACjC,MAAMkM,EAAQrJ,EAAIc,MAAM5D,EAAOC,GAC/B,IAAI0I,EAAM,GAEV,IAAK,IAAIlK,EAAI,EAAGA,EAAI0N,EAAMjN,OAAS,EAAGT,GAAK,EACzCkK,GAAO1B,OAAOoC,aAAa8C,EAAM1N,GAAqB,IAAf0N,EAAM1N,EAAI,IAEnD,OAAOkK,CACR,CAiCD,SAASyD,EAAa5L,EAAQ6L,EAAKnN,GACjC,GAAKsB,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIqC,WAAW,sBAC3D,GAAIrC,EAAS6L,EAAMnN,EAAQ,MAAM,IAAI2D,WAAW,wCACjD,CAyQD,SAASyJ,EAAUxJ,EAAKrB,EAAOjB,EAAQ6L,EAAKjB,EAAK1C,GAC/C,IAAKnG,EAAOoC,SAAS7B,GAAM,MAAM,IAAIM,UAAU,+CAC/C,GAAI3B,EAAQ2J,GAAO3J,EAAQiH,EAAK,MAAM,IAAI7F,WAAW,qCACrD,GAAIrC,EAAS6L,EAAMvJ,EAAI5D,OAAQ,MAAM,IAAI2D,WAAW,qBACrD,CA+FD,SAAS0J,EAAgBzJ,EAAKrB,EAAOjB,EAAQkI,EAAK0C,GAChDoB,EAAW/K,EAAOiH,EAAK0C,EAAKtI,EAAKtC,EAAQ,GAEzC,IAAI+H,EAAKhB,OAAO9F,EAAQgL,OAAO,aAC/B3J,EAAItC,KAAY+H,EAChBA,IAAW,EACXzF,EAAItC,KAAY+H,EAChBA,IAAW,EACXzF,EAAItC,KAAY+H,EAChBA,IAAW,EACXzF,EAAItC,KAAY+H,EAChB,IAAID,EAAKf,OAAO9F,GAASgL,OAAO,IAAMA,OAAO,aAQ7C,OAPA3J,EAAItC,KAAY8H,EAChBA,IAAW,EACXxF,EAAItC,KAAY8H,EAChBA,IAAW,EACXxF,EAAItC,KAAY8H,EAChBA,IAAW,EACXxF,EAAItC,KAAY8H,EACT9H,CACR,CAED,SAASkM,EAAgB5J,EAAKrB,EAAOjB,EAAQkI,EAAK0C,GAChDoB,EAAW/K,EAAOiH,EAAK0C,EAAKtI,EAAKtC,EAAQ,GAEzC,IAAI+H,EAAKhB,OAAO9F,EAAQgL,OAAO,aAC/B3J,EAAItC,EAAS,GAAK+H,EAClBA,IAAW,EACXzF,EAAItC,EAAS,GAAK+H,EAClBA,IAAW,EACXzF,EAAItC,EAAS,GAAK+H,EAClBA,IAAW,EACXzF,EAAItC,EAAS,GAAK+H,EAClB,IAAID,EAAKf,OAAO9F,GAASgL,OAAO,IAAMA,OAAO,aAQ7C,OAPA3J,EAAItC,EAAS,GAAK8H,EAClBA,IAAW,EACXxF,EAAItC,EAAS,GAAK8H,EAClBA,IAAW,EACXxF,EAAItC,EAAS,GAAK8H,EAClBA,IAAW,EACXxF,EAAItC,GAAU8H,EACP9H,EAAS,CACjB,CAkHD,SAASmM,EAAc7J,EAAKrB,EAAOjB,EAAQ6L,EAAKjB,EAAK1C,GACnD,GAAIlI,EAAS6L,EAAMvJ,EAAI5D,OAAQ,MAAM,IAAI2D,WAAW,sBACpD,GAAIrC,EAAS,EAAG,MAAM,IAAIqC,WAAW,qBACtC,CAED,SAAS+J,EAAY9J,EAAKrB,EAAOjB,EAAQqM,EAAcC,GAOrD,OANArL,GAASA,EACTjB,KAAoB,EACfsM,GACHH,EAAa7J,EAAKrB,EAAOjB,EAAQ,GAEnCH,EAAQmB,MAAMsB,EAAKrB,EAAOjB,EAAQqM,EAAc,GAAI,GAC7CrM,EAAS,CACjB,CAUD,SAASuM,EAAajK,EAAKrB,EAAOjB,EAAQqM,EAAcC,GAOtD,OANArL,GAASA,EACTjB,KAAoB,EACfsM,GACHH,EAAa7J,EAAKrB,EAAOjB,EAAQ,GAEnCH,EAAQmB,MAAMsB,EAAKrB,EAAOjB,EAAQqM,EAAc,GAAI,GAC7CrM,EAAS,CACjB,CAzkBD+B,EAAOU,UAAUW,MAAQ,SAAgB5D,EAAOC,GAC9C,MAAMnB,EAAMiH,KAAK7G,QACjBc,IAAUA,GAGE,GACVA,GAASlB,GACG,IAAGkB,EAAQ,GACdA,EAAQlB,IACjBkB,EAAQlB,IANVmB,OAAc4E,IAAR5E,EAAoBnB,IAAQmB,GASxB,GACRA,GAAOnB,GACG,IAAGmB,EAAM,GACVA,EAAMnB,IACfmB,EAAMnB,GAGJmB,EAAMD,IAAOC,EAAMD,GAEvB,MAAMgN,EAASjH,KAAKkH,SAASjN,EAAOC,GAIpC,OAFA8C,OAAOC,eAAegK,EAAQzK,EAAOU,WAE9B+J,CACR,EAUDzK,EAAOU,UAAUiK,WACjB3K,EAAOU,UAAUkK,WAAa,SAAqB3M,EAAQkD,EAAYoJ,GACrEtM,KAAoB,EACpBkD,KAA4B,EACvBoJ,GAAUV,EAAY5L,EAAQkD,EAAYqC,KAAK7G,QAEpD,IAAIuH,EAAMV,KAAKvF,GACX4M,EAAM,EACN3O,EAAI,EACR,OAASA,EAAIiF,IAAe0J,GAAO,MACjC3G,GAAOV,KAAKvF,EAAS/B,GAAK2O,EAG5B,OAAO3G,CACR,EAEDlE,EAAOU,UAAUoK,WACjB9K,EAAOU,UAAUqK,WAAa,SAAqB9M,EAAQkD,EAAYoJ,GACrEtM,KAAoB,EACpBkD,KAA4B,EACvBoJ,GACHV,EAAY5L,EAAQkD,EAAYqC,KAAK7G,QAGvC,IAAIuH,EAAMV,KAAKvF,IAAWkD,GACtB0J,EAAM,EACV,KAAO1J,EAAa,IAAM0J,GAAO,MAC/B3G,GAAOV,KAAKvF,IAAWkD,GAAc0J,EAGvC,OAAO3G,CACR,EAEDlE,EAAOU,UAAUsK,UACjBhL,EAAOU,UAAUuK,UAAY,SAAoBhN,EAAQsM,GAGvD,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACpC6G,KAAKvF,EACb,EAED+B,EAAOU,UAAUwK,aACjBlL,EAAOU,UAAUyK,aAAe,SAAuBlN,EAAQsM,GAG7D,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACpC6G,KAAKvF,GAAWuF,KAAKvF,EAAS,IAAM,CAC5C,EAED+B,EAAOU,UAAU0K,aACjBpL,EAAOU,UAAUiE,aAAe,SAAuB1G,EAAQsM,GAG7D,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACnC6G,KAAKvF,IAAW,EAAKuF,KAAKvF,EAAS,EAC5C,EAED+B,EAAOU,UAAU2K,aACjBrL,EAAOU,UAAU4K,aAAe,SAAuBrN,EAAQsM,GAI7D,OAHAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,SAElC6G,KAAKvF,GACTuF,KAAKvF,EAAS,IAAM,EACpBuF,KAAKvF,EAAS,IAAM,IACD,SAAnBuF,KAAKvF,EAAS,EACpB,EAED+B,EAAOU,UAAU6K,aACjBvL,EAAOU,UAAU8K,aAAe,SAAuBvN,EAAQsM,GAI7D,OAHAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QAEpB,SAAf6G,KAAKvF,IACTuF,KAAKvF,EAAS,IAAM,GACrBuF,KAAKvF,EAAS,IAAM,EACrBuF,KAAKvF,EAAS,GACjB,EAED+B,EAAOU,UAAU+K,gBAAkBC,GAAmB,SAA0BzN,GAE9E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQpI,KAAKvF,GACb4N,EAAOrI,KAAKvF,EAAS,QACbqE,IAAVsJ,QAAgCtJ,IAATuJ,GACzBC,EAAY7N,EAAQuF,KAAK7G,OAAS,GAGpC,MAAMqJ,EAAK4F,EACQ,IAAjBpI,OAAOvF,GACU,MAAjBuF,OAAOvF,GACPuF,OAAOvF,GAAU,GAAK,GAElB8H,EAAKvC,OAAOvF,GACC,IAAjBuF,OAAOvF,GACU,MAAjBuF,OAAOvF,GACP4N,EAAO,GAAK,GAEd,OAAO3B,OAAOlE,IAAOkE,OAAOnE,IAAOmE,OAAO,IAC5C,IAEAlK,EAAOU,UAAUqL,gBAAkBL,GAAmB,SAA0BzN,GAE9E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQpI,KAAKvF,GACb4N,EAAOrI,KAAKvF,EAAS,QACbqE,IAAVsJ,QAAgCtJ,IAATuJ,GACzBC,EAAY7N,EAAQuF,KAAK7G,OAAS,GAGpC,MAAMoJ,EAAK6F,EAAQ,GAAK,GACL,MAAjBpI,OAAOvF,GACU,IAAjBuF,OAAOvF,GACPuF,OAAOvF,GAEH+H,EAAKxC,OAAOvF,GAAU,GAAK,GACd,MAAjBuF,OAAOvF,GACU,IAAjBuF,OAAOvF,GACP4N,EAEF,OAAQ3B,OAAOnE,IAAOmE,OAAO,KAAOA,OAAOlE,EAC7C,IAEAhG,EAAOU,UAAUsL,UAAY,SAAoB/N,EAAQkD,EAAYoJ,GACnEtM,KAAoB,EACpBkD,KAA4B,EACvBoJ,GAAUV,EAAY5L,EAAQkD,EAAYqC,KAAK7G,QAEpD,IAAIuH,EAAMV,KAAKvF,GACX4M,EAAM,EACN3O,EAAI,EACR,OAASA,EAAIiF,IAAe0J,GAAO,MACjC3G,GAAOV,KAAKvF,EAAS/B,GAAK2O,EAM5B,OAJAA,GAAO,IAEH3G,GAAO2G,IAAK3G,GAAOnF,KAAKC,IAAI,EAAG,EAAImC,IAEhC+C,CACR,EAEDlE,EAAOU,UAAUuL,UAAY,SAAoBhO,EAAQkD,EAAYoJ,GACnEtM,KAAoB,EACpBkD,KAA4B,EACvBoJ,GAAUV,EAAY5L,EAAQkD,EAAYqC,KAAK7G,QAEpD,IAAIT,EAAIiF,EACJ0J,EAAM,EACN3G,EAAMV,KAAKvF,IAAW/B,GAC1B,KAAOA,EAAI,IAAM2O,GAAO,MACtB3G,GAAOV,KAAKvF,IAAW/B,GAAK2O,EAM9B,OAJAA,GAAO,IAEH3G,GAAO2G,IAAK3G,GAAOnF,KAAKC,IAAI,EAAG,EAAImC,IAEhC+C,CACR,EAEDlE,EAAOU,UAAUwL,SAAW,SAAmBjO,EAAQsM,GAGrD,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACtB,IAAf6G,KAAKvF,IAC0B,GAA5B,IAAOuF,KAAKvF,GAAU,GADKuF,KAAKvF,EAE1C,EAED+B,EAAOU,UAAUyL,YAAc,SAAsBlO,EAAQsM,GAC3DtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QAC3C,MAAMuH,EAAMV,KAAKvF,GAAWuF,KAAKvF,EAAS,IAAM,EAChD,OAAc,MAANiG,EAAsB,WAANA,EAAmBA,CAC5C,EAEDlE,EAAOU,UAAU0L,YAAc,SAAsBnO,EAAQsM,GAC3DtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QAC3C,MAAMuH,EAAMV,KAAKvF,EAAS,GAAMuF,KAAKvF,IAAW,EAChD,OAAc,MAANiG,EAAsB,WAANA,EAAmBA,CAC5C,EAEDlE,EAAOU,UAAU2L,YAAc,SAAsBpO,EAAQsM,GAI3D,OAHAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QAEnC6G,KAAKvF,GACVuF,KAAKvF,EAAS,IAAM,EACpBuF,KAAKvF,EAAS,IAAM,GACpBuF,KAAKvF,EAAS,IAAM,EACxB,EAED+B,EAAOU,UAAU4L,YAAc,SAAsBrO,EAAQsM,GAI3D,OAHAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QAEnC6G,KAAKvF,IAAW,GACrBuF,KAAKvF,EAAS,IAAM,GACpBuF,KAAKvF,EAAS,IAAM,EACpBuF,KAAKvF,EAAS,EAClB,EAED+B,EAAOU,UAAU6L,eAAiBb,GAAmB,SAAyBzN,GAE5E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQpI,KAAKvF,GACb4N,EAAOrI,KAAKvF,EAAS,QACbqE,IAAVsJ,QAAgCtJ,IAATuJ,GACzBC,EAAY7N,EAAQuF,KAAK7G,OAAS,GAGpC,MAAMuH,EAAMV,KAAKvF,EAAS,GACL,IAAnBuF,KAAKvF,EAAS,GACK,MAAnBuF,KAAKvF,EAAS,IACb4N,GAAQ,IAEX,OAAQ3B,OAAOhG,IAAQgG,OAAO,KAC5BA,OAAO0B,EACU,IAAjBpI,OAAOvF,GACU,MAAjBuF,OAAOvF,GACPuF,OAAOvF,GAAU,GAAK,GAC1B,IAEA+B,EAAOU,UAAU8L,eAAiBd,GAAmB,SAAyBzN,GAE5E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQpI,KAAKvF,GACb4N,EAAOrI,KAAKvF,EAAS,QACbqE,IAAVsJ,QAAgCtJ,IAATuJ,GACzBC,EAAY7N,EAAQuF,KAAK7G,OAAS,GAGpC,MAAMuH,GAAO0H,GAAS,IACH,MAAjBpI,OAAOvF,GACU,IAAjBuF,OAAOvF,GACPuF,OAAOvF,GAET,OAAQiM,OAAOhG,IAAQgG,OAAO,KAC5BA,OAAO1G,OAAOvF,GAAU,GAAK,GACZ,MAAjBuF,OAAOvF,GACU,IAAjBuF,OAAOvF,GACP4N,EACJ,IAEA7L,EAAOU,UAAU+L,YAAc,SAAsBxO,EAAQsM,GAG3D,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACpCmB,EAAQC,KAAKyF,KAAMvF,GAAQ,EAAM,GAAI,EAC7C,EAED+B,EAAOU,UAAUgM,YAAc,SAAsBzO,EAAQsM,GAG3D,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACpCmB,EAAQC,KAAKyF,KAAMvF,GAAQ,EAAO,GAAI,EAC9C,EAED+B,EAAOU,UAAUiM,aAAe,SAAuB1O,EAAQsM,GAG7D,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACpCmB,EAAQC,KAAKyF,KAAMvF,GAAQ,EAAM,GAAI,EAC7C,EAED+B,EAAOU,UAAUkM,aAAe,SAAuB3O,EAAQsM,GAG7D,OAFAtM,KAAoB,EACfsM,GAAUV,EAAY5L,EAAQ,EAAGuF,KAAK7G,QACpCmB,EAAQC,KAAKyF,KAAMvF,GAAQ,EAAO,GAAI,EAC9C,EAQD+B,EAAOU,UAAUmM,YACjB7M,EAAOU,UAAUoM,YAAc,SAAsB5N,EAAOjB,EAAQkD,EAAYoJ,GAI9E,GAHArL,GAASA,EACTjB,KAAoB,EACpBkD,KAA4B,GACvBoJ,EAAU,CAEbR,EAASvG,KAAMtE,EAAOjB,EAAQkD,EADbpC,KAAKC,IAAI,EAAG,EAAImC,GAAc,EACK,EACrD,CAED,IAAI0J,EAAM,EACN3O,EAAI,EAER,IADAsH,KAAKvF,GAAkB,IAARiB,IACNhD,EAAIiF,IAAe0J,GAAO,MACjCrH,KAAKvF,EAAS/B,GAAMgD,EAAQ2L,EAAO,IAGrC,OAAO5M,EAASkD,CACjB,EAEDnB,EAAOU,UAAUqM,YACjB/M,EAAOU,UAAUsM,YAAc,SAAsB9N,EAAOjB,EAAQkD,EAAYoJ,GAI9E,GAHArL,GAASA,EACTjB,KAAoB,EACpBkD,KAA4B,GACvBoJ,EAAU,CAEbR,EAASvG,KAAMtE,EAAOjB,EAAQkD,EADbpC,KAAKC,IAAI,EAAG,EAAImC,GAAc,EACK,EACrD,CAED,IAAIjF,EAAIiF,EAAa,EACjB0J,EAAM,EAEV,IADArH,KAAKvF,EAAS/B,GAAa,IAARgD,IACVhD,GAAK,IAAM2O,GAAO,MACzBrH,KAAKvF,EAAS/B,GAAMgD,EAAQ2L,EAAO,IAGrC,OAAO5M,EAASkD,CACjB,EAEDnB,EAAOU,UAAUuM,WACjBjN,EAAOU,UAAUwM,WAAa,SAAqBhO,EAAOjB,EAAQsM,GAKhE,OAJArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,IAAM,GACtDuF,KAAKvF,GAAmB,IAARiB,EACTjB,EAAS,CACjB,EAED+B,EAAOU,UAAUyM,cACjBnN,EAAOU,UAAU0M,cAAgB,SAAwBlO,EAAOjB,EAAQsM,GAMtE,OALArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,MAAQ,GACxDuF,KAAKvF,GAAmB,IAARiB,EAChBsE,KAAKvF,EAAS,GAAMiB,IAAU,EACvBjB,EAAS,CACjB,EAED+B,EAAOU,UAAU2M,cACjBrN,EAAOU,UAAU4M,cAAgB,SAAwBpO,EAAOjB,EAAQsM,GAMtE,OALArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,MAAQ,GACxDuF,KAAKvF,GAAWiB,IAAU,EAC1BsE,KAAKvF,EAAS,GAAc,IAARiB,EACbjB,EAAS,CACjB,EAED+B,EAAOU,UAAU6M,cACjBvN,EAAOU,UAAU8M,cAAgB,SAAwBtO,EAAOjB,EAAQsM,GAQtE,OAPArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,WAAY,GAC5DuF,KAAKvF,EAAS,GAAMiB,IAAU,GAC9BsE,KAAKvF,EAAS,GAAMiB,IAAU,GAC9BsE,KAAKvF,EAAS,GAAMiB,IAAU,EAC9BsE,KAAKvF,GAAmB,IAARiB,EACTjB,EAAS,CACjB,EAED+B,EAAOU,UAAU+M,cACjBzN,EAAOU,UAAUgN,cAAgB,SAAwBxO,EAAOjB,EAAQsM,GAQtE,OAPArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,WAAY,GAC5DuF,KAAKvF,GAAWiB,IAAU,GAC1BsE,KAAKvF,EAAS,GAAMiB,IAAU,GAC9BsE,KAAKvF,EAAS,GAAMiB,IAAU,EAC9BsE,KAAKvF,EAAS,GAAc,IAARiB,EACbjB,EAAS,CACjB,EA8CD+B,EAAOU,UAAUiN,iBAAmBjC,GAAmB,SAA2BxM,EAAOjB,EAAS,GAChG,OAAO+L,EAAexG,KAAMtE,EAAOjB,EAAQiM,OAAO,GAAIA,OAAO,sBAC/D,IAEAlK,EAAOU,UAAUkN,iBAAmBlC,GAAmB,SAA2BxM,EAAOjB,EAAS,GAChG,OAAOkM,EAAe3G,KAAMtE,EAAOjB,EAAQiM,OAAO,GAAIA,OAAO,sBAC/D,IAEAlK,EAAOU,UAAUmN,WAAa,SAAqB3O,EAAOjB,EAAQkD,EAAYoJ,GAG5E,GAFArL,GAASA,EACTjB,KAAoB,GACfsM,EAAU,CACb,MAAMuD,EAAQ/O,KAAKC,IAAI,EAAI,EAAImC,EAAc,GAE7C4I,EAASvG,KAAMtE,EAAOjB,EAAQkD,EAAY2M,EAAQ,GAAIA,EACvD,CAED,IAAI5R,EAAI,EACJ2O,EAAM,EACNkD,EAAM,EAEV,IADAvK,KAAKvF,GAAkB,IAARiB,IACNhD,EAAIiF,IAAe0J,GAAO,MAC7B3L,EAAQ,GAAa,IAAR6O,GAAsC,IAAzBvK,KAAKvF,EAAS/B,EAAI,KAC9C6R,EAAM,GAERvK,KAAKvF,EAAS/B,IAAOgD,EAAQ2L,GAAQ,GAAKkD,EAAM,IAGlD,OAAO9P,EAASkD,CACjB,EAEDnB,EAAOU,UAAUsN,WAAa,SAAqB9O,EAAOjB,EAAQkD,EAAYoJ,GAG5E,GAFArL,GAASA,EACTjB,KAAoB,GACfsM,EAAU,CACb,MAAMuD,EAAQ/O,KAAKC,IAAI,EAAI,EAAImC,EAAc,GAE7C4I,EAASvG,KAAMtE,EAAOjB,EAAQkD,EAAY2M,EAAQ,GAAIA,EACvD,CAED,IAAI5R,EAAIiF,EAAa,EACjB0J,EAAM,EACNkD,EAAM,EAEV,IADAvK,KAAKvF,EAAS/B,GAAa,IAARgD,IACVhD,GAAK,IAAM2O,GAAO,MACrB3L,EAAQ,GAAa,IAAR6O,GAAsC,IAAzBvK,KAAKvF,EAAS/B,EAAI,KAC9C6R,EAAM,GAERvK,KAAKvF,EAAS/B,IAAOgD,EAAQ2L,GAAQ,GAAKkD,EAAM,IAGlD,OAAO9P,EAASkD,CACjB,EAEDnB,EAAOU,UAAUuN,UAAY,SAAoB/O,EAAOjB,EAAQsM,GAM9D,OALArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,KAAO,KACnDiB,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCsE,KAAKvF,GAAmB,IAARiB,EACTjB,EAAS,CACjB,EAED+B,EAAOU,UAAUwN,aAAe,SAAuBhP,EAAOjB,EAAQsM,GAMpE,OALArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,OAAS,OACzDuF,KAAKvF,GAAmB,IAARiB,EAChBsE,KAAKvF,EAAS,GAAMiB,IAAU,EACvBjB,EAAS,CACjB,EAED+B,EAAOU,UAAUyN,aAAe,SAAuBjP,EAAOjB,EAAQsM,GAMpE,OALArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,OAAS,OACzDuF,KAAKvF,GAAWiB,IAAU,EAC1BsE,KAAKvF,EAAS,GAAc,IAARiB,EACbjB,EAAS,CACjB,EAED+B,EAAOU,UAAU0N,aAAe,SAAuBlP,EAAOjB,EAAQsM,GAQpE,OAPArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,YAAa,YAC7DuF,KAAKvF,GAAmB,IAARiB,EAChBsE,KAAKvF,EAAS,GAAMiB,IAAU,EAC9BsE,KAAKvF,EAAS,GAAMiB,IAAU,GAC9BsE,KAAKvF,EAAS,GAAMiB,IAAU,GACvBjB,EAAS,CACjB,EAED+B,EAAOU,UAAU2N,aAAe,SAAuBnP,EAAOjB,EAAQsM,GASpE,OARArL,GAASA,EACTjB,KAAoB,EACfsM,GAAUR,EAASvG,KAAMtE,EAAOjB,EAAQ,EAAG,YAAa,YACzDiB,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CsE,KAAKvF,GAAWiB,IAAU,GAC1BsE,KAAKvF,EAAS,GAAMiB,IAAU,GAC9BsE,KAAKvF,EAAS,GAAMiB,IAAU,EAC9BsE,KAAKvF,EAAS,GAAc,IAARiB,EACbjB,EAAS,CACjB,EAED+B,EAAOU,UAAU4N,gBAAkB5C,GAAmB,SAA0BxM,EAAOjB,EAAS,GAC9F,OAAO+L,EAAexG,KAAMtE,EAAOjB,GAASiM,OAAO,sBAAuBA,OAAO,sBACnF,IAEAlK,EAAOU,UAAU6N,gBAAkB7C,GAAmB,SAA0BxM,EAAOjB,EAAS,GAC9F,OAAOkM,EAAe3G,KAAMtE,EAAOjB,GAASiM,OAAO,sBAAuBA,OAAO,sBACnF,IAiBAlK,EAAOU,UAAU8N,aAAe,SAAuBtP,EAAOjB,EAAQsM,GACpE,OAAOF,EAAW7G,KAAMtE,EAAOjB,GAAQ,EAAMsM,EAC9C,EAEDvK,EAAOU,UAAU+N,aAAe,SAAuBvP,EAAOjB,EAAQsM,GACpE,OAAOF,EAAW7G,KAAMtE,EAAOjB,GAAQ,EAAOsM,EAC/C,EAYDvK,EAAOU,UAAUgO,cAAgB,SAAwBxP,EAAOjB,EAAQsM,GACtE,OAAOC,EAAYhH,KAAMtE,EAAOjB,GAAQ,EAAMsM,EAC/C,EAEDvK,EAAOU,UAAUiO,cAAgB,SAAwBzP,EAAOjB,EAAQsM,GACtE,OAAOC,EAAYhH,KAAMtE,EAAOjB,GAAQ,EAAOsM,EAChD,EAGDvK,EAAOU,UAAUiB,KAAO,SAAeqH,EAAQ4F,EAAanR,EAAOC,GACjE,IAAKsC,EAAOoC,SAAS4G,GAAS,MAAM,IAAInI,UAAU,+BAQlD,GAPKpD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAM8F,KAAK7G,QAC9BiS,GAAe5F,EAAOrM,SAAQiS,EAAc5F,EAAOrM,QAClDiS,IAAaA,EAAc,GAC5BlR,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBuL,EAAOrM,QAAgC,IAAhB6G,KAAK7G,OAAc,OAAO,EAGrD,GAAIiS,EAAc,EAChB,MAAM,IAAItO,WAAW,6BAEvB,GAAI7C,EAAQ,GAAKA,GAAS+F,KAAK7G,OAAQ,MAAM,IAAI2D,WAAW,sBAC5D,GAAI5C,EAAM,EAAG,MAAM,IAAI4C,WAAW,2BAG9B5C,EAAM8F,KAAK7G,SAAQe,EAAM8F,KAAK7G,QAC9BqM,EAAOrM,OAASiS,EAAclR,EAAMD,IACtCC,EAAMsL,EAAOrM,OAASiS,EAAcnR,GAGtC,MAAMlB,EAAMmB,EAAMD,EAalB,OAXI+F,OAASwF,GAAqD,mBAApC5L,WAAWsD,UAAUmO,WAEjDrL,KAAKqL,WAAWD,EAAanR,EAAOC,GAEpCN,WAAWsD,UAAU4H,IAAIjE,KACvB2E,EACAxF,KAAKkH,SAASjN,EAAOC,GACrBkR,GAIGrS,CACR,EAMDyD,EAAOU,UAAUkH,KAAO,SAAe1D,EAAKzG,EAAOC,EAAKuD,GAEtD,GAAmB,iBAARiD,EAAkB,CAS3B,GARqB,iBAAVzG,GACTwD,EAAWxD,EACXA,EAAQ,EACRC,EAAM8F,KAAK7G,QACa,iBAARe,IAChBuD,EAAWvD,EACXA,EAAM8F,KAAK7G,aAEI2F,IAAbrB,GAA8C,iBAAbA,EACnC,MAAM,IAAIJ,UAAU,6BAEtB,GAAwB,iBAAbI,IAA0BjB,EAAOkB,WAAWD,GACrD,MAAM,IAAIJ,UAAU,qBAAuBI,GAE7C,GAAmB,IAAfiD,EAAIvH,OAAc,CACpB,MAAMW,EAAO4G,EAAIzH,WAAW,IACV,SAAbwE,GAAuB3D,EAAO,KAClB,WAAb2D,KAEFiD,EAAM5G,EAET,CACL,KAA4B,iBAAR4G,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMc,OAAOd,IAIf,GAAIzG,EAAQ,GAAK+F,KAAK7G,OAASc,GAAS+F,KAAK7G,OAASe,EACpD,MAAM,IAAI4C,WAAW,sBAGvB,GAAI5C,GAAOD,EACT,OAAO+F,KAQT,IAAItH,EACJ,GANAuB,KAAkB,EAClBC,OAAc4E,IAAR5E,EAAoB8F,KAAK7G,OAASe,IAAQ,EAE3CwG,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKhI,EAAIuB,EAAOvB,EAAIwB,IAAOxB,EACzBsH,KAAKtH,GAAKgI,MAEP,CACL,MAAM0F,EAAQ5J,EAAOoC,SAAS8B,GAC1BA,EACAlE,EAAOe,KAAKmD,EAAKjD,GACf1E,EAAMqN,EAAMjN,OAClB,GAAY,IAARJ,EACF,MAAM,IAAIsE,UAAU,cAAgBqD,EAClC,qCAEJ,IAAKhI,EAAI,EAAGA,EAAIwB,EAAMD,IAASvB,EAC7BsH,KAAKtH,EAAIuB,GAASmM,EAAM1N,EAAIK,EAE/B,CAED,OAAOiH,IACR,EAMD,MAAMsL,EAAS,CAAE,EACjB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpCC,cACEC,QAEA5O,OAAOgH,eAAehE,KAAM,UAAW,CACrCtE,MAAO+P,EAAWlI,MAAMvD,KAAMN,WAC9BmM,UAAU,EACVC,cAAc,IAIhB9L,KAAK+L,KAAO,GAAG/L,KAAK+L,SAASP,KAG7BxL,KAAKgM,aAEEhM,KAAK+L,IACb,CAEGjS,WACF,OAAO0R,CACR,CAEG1R,SAAM4B,GACRsB,OAAOgH,eAAehE,KAAM,OAAQ,CAClC8L,cAAc,EACd7H,YAAY,EACZvI,QACAmQ,UAAU,GAEb,CAEDrM,WACE,MAAO,GAAGQ,KAAK+L,SAASP,OAASxL,KAAKiM,SACvC,EAEJ,CA+BD,SAASC,EAAuBxL,GAC9B,IAAIkC,EAAM,GACNlK,EAAIgI,EAAIvH,OACZ,MAAMc,EAAmB,MAAXyG,EAAI,GAAa,EAAI,EACnC,KAAOhI,GAAKuB,EAAQ,EAAGvB,GAAK,EAC1BkK,EAAM,IAAIlC,EAAI7C,MAAMnF,EAAI,EAAGA,KAAKkK,IAElC,MAAO,GAAGlC,EAAI7C,MAAM,EAAGnF,KAAKkK,GAC7B,CAYD,SAAS6D,EAAY/K,EAAOiH,EAAK0C,EAAKtI,EAAKtC,EAAQkD,GACjD,GAAIjC,EAAQ2J,GAAO3J,EAAQiH,EAAK,CAC9B,MAAMnC,EAAmB,iBAARmC,EAAmB,IAAM,GAC1C,IAAIwJ,EAWJ,MARIA,EAFAxO,EAAa,EACH,IAARgF,GAAaA,IAAQ+D,OAAO,GACtB,OAAOlG,YAAYA,QAA2B,GAAlB7C,EAAa,KAAS6C,IAElD,SAASA,QAA2B,GAAlB7C,EAAa,GAAS,IAAI6C,iBACtB,GAAlB7C,EAAa,GAAS,IAAI6C,IAGhC,MAAMmC,IAAMnC,YAAY6E,IAAM7E,IAElC,IAAI8K,EAAOc,iBAAiB,QAASD,EAAOzQ,EACnD,EAtBH,SAAsBqB,EAAKtC,EAAQkD,GACjCwK,EAAe1N,EAAQ,eACHqE,IAAhB/B,EAAItC,SAAsDqE,IAA7B/B,EAAItC,EAASkD,IAC5C2K,EAAY7N,EAAQsC,EAAI5D,QAAUwE,EAAa,GAElD,CAkBC0O,CAAYtP,EAAKtC,EAAQkD,EAC1B,CAED,SAASwK,EAAgBzM,EAAOqQ,GAC9B,GAAqB,iBAAVrQ,EACT,MAAM,IAAI4P,EAAOgB,qBAAqBP,EAAM,SAAUrQ,EAEzD,CAED,SAAS4M,EAAa5M,EAAOvC,EAAQ6F,GACnC,GAAIzD,KAAKQ,MAAML,KAAWA,EAExB,MADAyM,EAAezM,EAAOsD,GAChB,IAAIsM,EAAOc,iBAAiBpN,GAAQ,SAAU,aAActD,GAGpE,GAAIvC,EAAS,EACX,MAAM,IAAImS,EAAOiB,yBAGnB,MAAM,IAAIjB,EAAOc,iBAAiBpN,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAY7F,IAC7BuC,EACnC,CAvFD6P,EAAE,4BACA,SAAUQ,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACR,GAAEjP,YACLyO,EAAE,wBACA,SAAUQ,EAAMnO,GACd,MAAO,QAAQmO,4DAA+DnO,GAC/E,GAAEP,WACLkO,EAAE,oBACA,SAAUtJ,EAAKkK,EAAOK,GACpB,IAAIC,EAAM,iBAAiBxK,sBACvByK,EAAWF,EAWf,OAVIhL,OAAOmL,UAAUH,IAAUjR,KAAKM,IAAI2Q,GAAS,GAAK,GACpDE,EAAWR,EAAsBhL,OAAOsL,IACd,iBAAVA,IAChBE,EAAWxL,OAAOsL,IACdA,EAAQ9F,OAAO,IAAMA,OAAO,KAAO8F,IAAU9F,OAAO,IAAMA,OAAO,QACnEgG,EAAWR,EAAsBQ,IAEnCA,GAAY,KAEdD,GAAO,eAAeN,eAAmBO,IAClCD,CACR,GAAE3P,YAiEL,MAAM8P,EAAoB,oBAgB1B,SAAShN,EAAapC,EAAQ8E,GAE5B,IAAIQ,EADJR,EAAQA,GAAShH,IAEjB,MAAMnC,EAASqE,EAAOrE,OACtB,IAAI0T,EAAgB,KACpB,MAAMzG,EAAQ,GAEd,IAAK,IAAI1N,EAAI,EAAGA,EAAIS,IAAUT,EAAG,CAI/B,GAHAoK,EAAYtF,EAAOvE,WAAWP,GAG1BoK,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAK+J,EAAe,CAElB,GAAI/J,EAAY,MAAQ,EAEjBR,GAAS,IAAM,GAAG8D,EAAM5M,KAAK,IAAM,IAAM,KAC9C,QACV,CAAe,GAAId,EAAI,IAAMS,EAAQ,EAEtBmJ,GAAS,IAAM,GAAG8D,EAAM5M,KAAK,IAAM,IAAM,KAC9C,QACD,CAGDqT,EAAgB/J,EAEhB,QACD,CAGD,GAAIA,EAAY,MAAQ,EACjBR,GAAS,IAAM,GAAG8D,EAAM5M,KAAK,IAAM,IAAM,KAC9CqT,EAAgB/J,EAChB,QACD,CAGDA,EAAkE,OAArD+J,EAAgB,OAAU,GAAK/J,EAAY,MACzD,MAAU+J,IAEJvK,GAAS,IAAM,GAAG8D,EAAM5M,KAAK,IAAM,IAAM,KAMhD,GAHAqT,EAAgB,KAGZ/J,EAAY,IAAM,CACpB,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAM5M,KAAKsJ,EACjB,MAAW,GAAIA,EAAY,KAAO,CAC5B,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAM5M,KACJsJ,GAAa,EAAM,IACP,GAAZA,EAAmB,IAE3B,MAAW,GAAIA,EAAY,MAAS,CAC9B,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAM5M,KACJsJ,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAE3B,KAAW,MAAIA,EAAY,SASrB,MAAM,IAAI/I,MAAM,sBARhB,IAAKuI,GAAS,GAAK,EAAG,MACtB8D,EAAM5M,KACJsJ,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAItB,CACF,CAED,OAAOsD,CACR,CA2BD,SAASvG,EAAeoC,GACtB,OAAO/F,EAAO4Q,YAxHhB,SAAsB7K,GAMpB,IAFAA,GAFAA,EAAMA,EAAI8K,MAAM,KAAK,IAEXxH,OAAOD,QAAQsH,EAAmB,KAEpCzT,OAAS,EAAG,MAAO,GAE3B,KAAO8I,EAAI9I,OAAS,GAAM,GACxB8I,GAAY,IAEd,OAAOA,CACR,CA4G2B+K,CAAY/K,GACvC,CAED,SAASF,EAAYkL,EAAKC,EAAKzS,EAAQtB,GACrC,IAAIT,EACJ,IAAKA,EAAI,EAAGA,EAAIS,KACTT,EAAI+B,GAAUyS,EAAI/T,QAAYT,GAAKuU,EAAI9T,UADpBT,EAExBwU,EAAIxU,EAAI+B,GAAUwS,EAAIvU,GAExB,OAAOA,CACR,CAKD,SAASwF,EAAYS,EAAKK,GACxB,OAAOL,aAAeK,GACZ,MAAPL,GAAkC,MAAnBA,EAAIgN,aAA+C,MAAxBhN,EAAIgN,YAAYI,MACzDpN,EAAIgN,YAAYI,OAAS/M,EAAK+M,IACnC,CACD,SAAShN,EAAaJ,GAEpB,OAAOA,GAAQA,CAChB,CAID,MAAMwH,EAAsB,WAC1B,MAAMgH,EAAW,mBACXC,EAAQ,IAAIvT,MAAM,KACxB,IAAK,IAAInB,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAM2U,EAAU,GAAJ3U,EACZ,IAAK,IAAI4I,EAAI,EAAGA,EAAI,KAAMA,EACxB8L,EAAMC,EAAM/L,GAAK6L,EAASzU,GAAKyU,EAAS7L,EAE3C,CACD,OAAO8L,CACR,CAV2B,GAa5B,SAASlF,EAAoBoF,GAC3B,MAAyB,oBAAX5G,OAAyB6G,EAAyBD,CACjE,CAED,SAASC,IACP,MAAM,IAAIxT,MAAM,uBAClB,MFvjEA,SAAWM,GACPA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAoC,kBAAI,GAAK,oBAC9DA,EAAiBA,EAAqC,mBAAI,GAAK,qBAC/DA,EAAiBA,EAA2B,SAAI,GAAK,WACrDA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA+B,aAAI,GAAK,eACzDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAA+B,aAAI,GAAK,eACzDA,EAAiBA,EAAgC,cAAI,IAAM,gBAC3DA,EAAiBA,EAA8B,YAAI,IAAM,cACzDA,EAAiBA,EAAkC,gBAAI,IAAM,kBAC7DA,EAAiBA,EAAiC,eAAI,IAAM,iBAC5DA,EAAiBA,EAAgC,cAAI,IAAM,gBAC3DA,EAAiBA,EAA8B,YAAI,IAAM,cACzDA,EAAiBA,EAAqC,mBAAI,IAAM,qBAChEA,EAAiBA,EAA6B,WAAI,IAAM,aACxDA,EAAiBA,EAAqC,mBAAI,IAAM,qBAChEA,EAAiBA,EAAsC,oBAAI,IAAM,sBACjEA,EAAiBA,EAAkC,gBAAI,IAAM,iBAChE,CAtBD,CAsBGA,IAAqBA,EAAmB,CAAA,aG2G3C2C,OAAOgH,eAAewJ,EAAS,aAAc,CAAE9R,OAAO,IAC3C8R,EAAAC,SAAgBD,EAAAE,OAA8BF,EAAAG,MAAgBH,EAAAI,MAAgBJ,EAAAK,cAAmBL,EAAAM,MAA4BN,EAAAO,WAAiBP,EAAAQ,IAAcR,EAAAS,IAAcT,EAAAU,IAAyBV,EAAAW,IAAGC,QAAaZ,EAAA/S,OAA+B+S,EAAAa,OAAmBb,EAAAc,SAAed,EAAAe,eAAqBf,EAAAgB,KAA8BhB,EAAAiB,mBAAsBjB,EAAAkB,aAAuBlB,EAAAmB,cAAwBnB,EAAAoB,MAAgDpB,EAAAqB,8CAAgCrB,EAAAsB,UAAoCtB,EAAAuB,SAAmBvB,EAAAwB,SAAiBxB,EAAAyB,iBAAqBzB,EAAA0B,MAAmC1B,EAAA2B,wBAAuB3B,EAAA4B,aAAuB5B,EAAA6B,WAAqB7B,EAAA8B,MAA2B9B,EAAA+B,aAAoB/B,EAAAgC,KAAmChC,EAAAiC,aAAsBjC,EAAAkC,YAAyBlC,EAAAmC,uCAAmCnC,EAAAoC,iBAA2BpC,EAAAqC,OAAiBrC,EAAAsC,mBAAoDtC,EAAAuC,qBAAG,EACj6BvC,EAAAwC,gBAAkBxC,EAAAyC,KAAeC,GAAY1C,EAAA0C,KAAmC1C,EAAA2C,yBAAgB3C,EAAA4C,YAAiB5C,EAAA6C,KAAeC,GAAc9C,EAAA8C,eAAmB9C,EAAA+C,IAAc/C,EAAAgD,MAAgBhD,EAAAiD,IAA4BjD,EAAAkD,eAAmBlD,EAAAmD,MAA6BnD,EAAAoD,MAAgBpD,EAAAqD,MAAgBrD,EAAAsD,aAAkBtD,EAAAuD,IAAcvD,EAAAwD,IAAcxD,EAAAyD,IAAyBzD,EAAA0D,SAAG,EACrY,MAAMC,EAAWhV,EAIjB,SAAS4T,EAAgBrR,GACrB,KAAMA,aAAa9E,YACf,MAAM,IAAIyD,UAAU,yBAE5B,CAKA,SAASyS,EAAmBpR,GAExB,OADAqR,EAAgBrR,GACTyS,EAAS3U,OAAOe,KAAKmB,EAAElE,OAAQkE,EAAEL,WAAYK,EAAEvF,OAC1D,CAPuBqU,EAAAuC,gBAAGA,EAQAvC,EAAAsC,mBAAGA,EAiB7B,MAAMD,EACFlE,YAAYyF,EAAMC,GACd,IAAK7P,OAAOmL,UAAUyE,GAClB,MAAM,IAAI/T,UAAU,2BAWxB2C,KAAKoR,KAAOA,EASZpR,KAAKqR,SAAWA,CACnB,CAgBDC,wBACI,MAAO,EACV,CAiBDC,QAAQ7S,EAAGjE,GACP,GAAI,EAAIuF,KAAKoR,KACT,MAAM,IAAItU,WAAW,sBAEzB,OAAOkD,KAAKoR,IACf,CAiBDI,UAAUH,GACN,MAAMI,EAAKzU,OAAO0U,OAAO1R,KAAK2L,YAAYzO,WAG1C,OAFAF,OAAO2U,OAAOF,EAAIzR,MAClByR,EAAGJ,SAAWA,EACPI,CACV,CAqBDG,UAAUC,GAET,EAQL,SAASjC,EAAiB7D,EAAMvJ,GAC5B,OAAIA,EAAG6O,SACItF,EAAO,IAAMvJ,EAAG6O,SAAW,IAE/BtF,CACX,CAXcyB,EAAAqC,OAAGA,EAYOrC,EAAAoC,iBAAGA,EA2DEpC,EAAAsE,sBA7B7B,SAA+BC,EAAOC,GAClC,GAAI,mBAAsBD,EACtB,MAAM,IAAI1U,UAAU,6BAExB,GAAIL,OAAOE,UAAU+U,eAAepR,KAAKkR,EAAO,WAC5C,MAAM,IAAIhY,MAAM,sCAEpB,KAAMiY,GAAWA,aAAkBnC,GAC/B,MAAM,IAAIxS,UAAU,2BAExB,GAAIL,OAAOE,UAAU+U,eAAepR,KAAKmR,EAAQ,qBAC7C,MAAM,IAAIjY,MAAM,4CAEpBgY,EAAMG,QAAUF,EAChBA,EAAOG,kBAAoBJ,EAC3BC,EAAOV,sBAAqB,IAAU,IAAIS,EAC1C/U,OAAOgH,eAAe+N,EAAM7U,UAAW,SAAU,CAC7CxB,MAAMgD,EAAGjE,GACL,OAAOuX,EAAOI,OAAOpS,KAAMtB,EAAGjE,EACjC,EACDoR,UAAU,IAEd7O,OAAOgH,eAAe+N,EAAO,SAAU,CACnCrW,MAAK,CAACgD,EAAGjE,IACEuX,EAAOK,OAAO3T,EAAGjE,GAE5BoR,UAAU,GAElB,EAuBA,MAAM8D,UAAuBE,EAYzByC,UACI,MAAM,IAAIvY,MAAM,6BACnB,EAEiByT,EAAAmC,eAAGA,EAgBzB,MAAMD,UAAoBC,EACtBhE,YAAY4G,EAAc,EAAGlB,GACzB,IAAM7P,OAAOmL,UAAU4F,IAAkB,GAAKA,EAC1C,MAAM,IAAIlV,UAAU,4CAExBuO,OAAO,EAAGyF,GAIVrR,KAAKuS,YAAcA,CACtB,CAEDD,UACI,OAAO,CACV,CAEDD,OAAO3T,EAAGjE,EAAS,GACfsV,EAAgBrR,GAChB,MAAM8T,EAAM9T,EAAEvF,OAASsB,EACvB,OAAOc,KAAKQ,MAAMyW,EAAMxS,KAAKuS,YAChC,CAEDH,OAAOnF,EAAKvO,EAAGjE,GACX,OAAO,CACV,EAEc+S,EAAAkC,YAAGA,EAqBtB,MAAMD,UAAqBE,EACvBhE,YAAYqG,EAAQvX,EAAS,EAAG4W,GAC5B,KAAMW,aAAkBnC,GACpB,MAAM,IAAIxS,UAAU,2BAExB,IAAKmE,OAAOmL,UAAUlS,GAClB,MAAM,IAAI4C,UAAU,uCAExBuO,MAAMoG,EAAOZ,KAAMC,GAAYW,EAAOX,UAEtCrR,KAAKgS,OAASA,EAOdhS,KAAKvF,OAASA,CACjB,CAED6X,UACI,OAAStS,KAAKgS,kBAAkBxC,GACxBxP,KAAKgS,kBAAkBS,CAClC,CAEDJ,OAAO3T,EAAGjE,EAAS,GACf,OAAOuF,KAAKgS,OAAOK,OAAO3T,EAAGjE,EAASuF,KAAKvF,OAC9C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,OAAOuF,KAAKgS,OAAOI,OAAOnF,EAAKvO,EAAGjE,EAASuF,KAAKvF,OACnD,EAEe+S,EAAAiC,aAAGA,EAiBvB,MAAMD,UAAaK,EACflE,YAAYyF,EAAMC,GAEd,GADAzF,MAAMwF,EAAMC,GACR,EAAIrR,KAAKoR,KACT,MAAM,IAAItU,WAAW,+BAE5B,CAEDuV,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAG0I,WAAW3M,EAAQuF,KAAKoR,KACxD,CAEDgB,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAG4K,YAAY2D,EAAKxS,EAAQuF,KAAKoR,MAC7CpR,KAAKoR,IACf,EAEO5D,EAAAgC,KAAGA,EAiBf,MAAMiD,UAAe5C,EACjBlE,YAAYyF,EAAMC,GAEd,GADAzF,MAAMwF,EAAMC,GACR,EAAIrR,KAAKoR,KACT,MAAM,IAAItU,WAAW,+BAE5B,CAEDuV,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAG6I,WAAW9M,EAAQuF,KAAKoR,KACxD,CAEDgB,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAG8K,YAAYyD,EAAKxS,EAAQuF,KAAKoR,MAC7CpR,KAAKoR,IACf,EAES5D,EAAAiF,OAAGA,EAiBjB,MAAMlD,UAAYM,EACdlE,YAAYyF,EAAMC,GAEd,GADAzF,MAAMwF,EAAMC,GACR,EAAIrR,KAAKoR,KACT,MAAM,IAAItU,WAAW,+BAE5B,CAEDuV,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAG8J,UAAU/N,EAAQuF,KAAKoR,KACvD,CAEDgB,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAG2L,WAAW4C,EAAKxS,EAAQuF,KAAKoR,MAC5CpR,KAAKoR,IACf,EAEM5D,EAAA+B,IAAGA,EAiBd,MAAMD,UAAcO,EAChBlE,YAAYyF,EAAMC,GAEd,GADAzF,MAAMwF,EAAMC,GACR,EAAIrR,KAAKoR,KACT,MAAM,IAAItU,WAAW,+BAE5B,CAEDuV,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAG+J,UAAUhO,EAAQuF,KAAKoR,KACvD,CAEDgB,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAG8L,WAAWyC,EAAKxS,EAAQuF,KAAKoR,MAC5CpR,KAAKoR,IACf,EAEQ5D,EAAA8B,MAAGA,EAChB,MAAMoD,EAAQnX,KAAKC,IAAI,EAAG,IAG1B,SAASmX,EAAY1F,GACjB,MAAM2F,EAAOrX,KAAKQ,MAAMkR,EAAMyF,GAE9B,MAAO,CAAEE,OAAMC,KADF5F,EAAO2F,EAAOF,EAE/B,CAEA,SAASI,EAAaF,EAAMC,GACxB,OAAOD,EAAOF,EAAQG,CAC1B,CAYA,MAAMxD,UAAmBQ,EACrBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,MAAMD,EAASsV,EAAmBpR,GAC5BmU,EAAOrY,EAAOsN,aAAarN,GAEjC,OAAOqY,EADMtY,EAAOsN,aAAarN,EAAS,GAChBoY,EAC7B,CAEDT,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMsS,EAAQ4F,EAAY1F,GACpBzS,EAASsV,EAAmBpR,GAGlC,OAFAlE,EAAOwP,cAAc+C,EAAM8F,KAAMpY,GACjCD,EAAOwP,cAAc+C,EAAM6F,KAAMnY,EAAS,GACnC,CACV,EAEa+S,EAAA6B,WAAGA,EAYrB,MAAMD,UAAqBS,EACvBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,MAAMD,EAASsV,EAAmBpR,GAGlC,OAAOoU,EAFMtY,EAAOwN,aAAavN,GACpBD,EAAOwN,aAAavN,EAAS,GAE7C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMsS,EAAQ4F,EAAY1F,GACpBzS,EAASsV,EAAmBpR,GAGlC,OAFAlE,EAAO0P,cAAc6C,EAAM6F,KAAMnY,GACjCD,EAAO0P,cAAc6C,EAAM8F,KAAMpY,EAAS,GACnC,CACV,EAEe+S,EAAA4B,aAAGA,EAYvB,MAAM2D,UAAkBlD,EACpBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,MAAMD,EAASsV,EAAmBpR,GAC5BmU,EAAOrY,EAAOsN,aAAarN,GAEjC,OAAOqY,EADMtY,EAAOqO,YAAYpO,EAAS,GACfoY,EAC7B,CAEDT,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMsS,EAAQ4F,EAAY1F,GACpBzS,EAASsV,EAAmBpR,GAGlC,OAFAlE,EAAOwP,cAAc+C,EAAM8F,KAAMpY,GACjCD,EAAOoQ,aAAamC,EAAM6F,KAAMnY,EAAS,GAClC,CACV,EAEY+S,EAAAuF,UAAGA,EAYpB,MAAM5D,UAAoBU,EACtBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,MAAMD,EAASsV,EAAmBpR,GAGlC,OAAOoU,EAFMtY,EAAOsO,YAAYrO,GACnBD,EAAOwN,aAAavN,EAAS,GAE7C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMsS,EAAQ4F,EAAY1F,GACpBzS,EAASsV,EAAmBpR,GAGlC,OAFAlE,EAAOqQ,aAAakC,EAAM6F,KAAMnY,GAChCD,EAAO0P,cAAc6C,EAAM8F,KAAMpY,EAAS,GACnC,CACV,EAEc+S,EAAA2B,YAAGA,EAWtB,MAAMD,UAAcW,EAChBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAGuK,YAAYxO,EAC5C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAGsM,aAAaiC,EAAKxS,GACjC,CACV,EAEQ+S,EAAA0B,MAAGA,EAWhB,MAAM8D,UAAgBnD,EAClBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAGwK,YAAYzO,EAC5C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAGuM,aAAagC,EAAKxS,GACjC,CACV,EAEU+S,EAAAwF,QAAGA,EAWlB,MAAM/D,UAAeY,EACjBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAGyK,aAAa1O,EAC7C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAGwM,cAAc+B,EAAKxS,GAClC,CACV,EAES+S,EAAAyB,OAAGA,EAWjB,MAAMD,UAAiBa,EACnBlE,YAAY0F,GACRzF,MAAM,EAAGyF,EACZ,CAEDgB,OAAO3T,EAAGjE,EAAS,GACf,OAAOqV,EAAmBpR,GAAG0K,aAAa3O,EAC7C,CAED2X,OAAOnF,EAAKvO,EAAGjE,EAAS,GAEpB,OADAqV,EAAmBpR,GAAGyM,cAAc8B,EAAKxS,GAClC,CACV,EAEW+S,EAAAwB,SAAGA,EAkBnB,MAAMD,UAAiBc,EACnBlE,YAAYsH,EAAeC,EAAO7B,GAC9B,KAAM4B,aAAyBpD,GAC3B,MAAM,IAAIxS,UAAU,kCAExB,KAAQ6V,aAAiBvD,GAAmBuD,EAAMZ,WAC1C9Q,OAAOmL,UAAUuG,IAAW,GAAKA,GACrC,MAAM,IAAI7V,UAAU,4EAGxB,IAAI+T,GAAQ,IACL8B,aAAiBvD,IAChB,EAAIsD,EAAc7B,OACtBA,EAAO8B,EAAQD,EAAc7B,MAEjCxF,MAAMwF,EAAMC,GAEZrR,KAAKiT,cAAgBA,EAMrBjT,KAAKkT,MAAQA,CAChB,CAED3B,QAAQ7S,EAAGjE,EAAS,GAChB,GAAI,GAAKuF,KAAKoR,KACV,OAAOpR,KAAKoR,KAEhB,IAAIA,EAAO,EACP8B,EAAQlT,KAAKkT,MAIjB,GAHIA,aAAiBvD,IACjBuD,EAAQA,EAAMb,OAAO3T,EAAGjE,IAExB,EAAIuF,KAAKiT,cAAc7B,KACvBA,EAAO8B,EAAQlT,KAAKiT,cAAc7B,SAEjC,CACD,IAAI+B,EAAM,EACV,KAAOA,EAAMD,GACT9B,GAAQpR,KAAKiT,cAAc1B,QAAQ7S,EAAGjE,EAAS2W,KAC7C+B,CAET,CACD,OAAO/B,CACV,CAEDiB,OAAO3T,EAAGjE,EAAS,GACf,MAAMgX,EAAK,GACX,IAAI/Y,EAAI,EACJwa,EAAQlT,KAAKkT,MAIjB,IAHIA,aAAiBvD,IACjBuD,EAAQA,EAAMb,OAAO3T,EAAGjE,IAErB/B,EAAIwa,GACPzB,EAAGjY,KAAKwG,KAAKiT,cAAcZ,OAAO3T,EAAGjE,IACrCA,GAAUuF,KAAKiT,cAAc1B,QAAQ7S,EAAGjE,GACxC/B,GAAK,EAET,OAAO+Y,CACV,CAWDW,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAM2Y,EAAMpT,KAAKiT,cACX7B,EAAOnE,EAAIoG,QAAO,CAACjC,EAAMkC,IACpBlC,EAAOgC,EAAIhB,OAAOkB,EAAG5U,EAAGjE,EAAS2W,IACzC,GAIH,OAHIpR,KAAKkT,iBAAiBvD,GACtB3P,KAAKkT,MAAMd,OAAOnF,EAAI9T,OAAQuF,EAAGjE,GAE9B2W,CACV,EAEW5D,EAAAuB,SAAGA,EAiCnB,MAAMD,UAAkBe,EACpBlE,YAAY4H,EAAQlC,EAAUmC,GAC1B,IAAM3Z,MAAMoF,QAAQsU,KACbA,EAAOF,QAAO,CAACI,EAAKH,IAAMG,GAAQH,aAAazD,IAAS,GAC3D,MAAM,IAAIxS,UAAU,4CAEnB,kBAAqBgU,QAClBvS,IAAc0U,IAClBA,EAAiBnC,EACjBA,OAAWvS,GAGf,IAAK,MAAM4U,KAAMH,EACb,GAAK,EAAIG,EAAGtC,WACJtS,IAAc4U,EAAGrC,SACrB,MAAM,IAAItX,MAAM,wDAGxB,IAAIqX,GAAQ,EACZ,IACIA,EAAOmC,EAAOF,QAAO,CAACjC,EAAMsC,IAAOtC,EAAOsC,EAAGnC,WAAW,EAI3D,CAFD,MAAO1W,GAEN,CACD+Q,MAAMwF,EAAMC,GAWZrR,KAAKuT,OAASA,EAUdvT,KAAKwT,iBAAmBA,CAC3B,CAEDjC,QAAQ7S,EAAGjE,EAAS,GAChB,GAAI,GAAKuF,KAAKoR,KACV,OAAOpR,KAAKoR,KAEhB,IAAIA,EAAO,EACX,IACIA,EAAOpR,KAAKuT,OAAOF,QAAO,CAACjC,EAAMsC,KAC7B,MAAMC,EAAMD,EAAGnC,QAAQ7S,EAAGjE,GAE1B,OADAA,GAAUkZ,EACHvC,EAAOuC,CAAG,GAClB,EAIN,CAFD,MAAO9Y,GACH,MAAM,IAAIiC,WAAW,qBACxB,CACD,OAAOsU,CACV,CAEDiB,OAAO3T,EAAGjE,EAAS,GACfsV,EAAgBrR,GAChB,MAAMkV,EAAO5T,KAAKsR,wBAClB,IAAK,MAAMoC,KAAM1T,KAAKuT,OAKlB,QAJIzU,IAAc4U,EAAGrC,WACjBuC,EAAKF,EAAGrC,UAAYqC,EAAGrB,OAAO3T,EAAGjE,IAErCA,GAAUiZ,EAAGnC,QAAQ7S,EAAGjE,GACpBuF,KAAKwT,gBACD9U,EAAEvF,SAAWsB,EACjB,MAGR,OAAOmZ,CACV,CAMDxB,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMoZ,EAAcpZ,EACpB,IAAIqZ,EAAa,EACbC,EAAY,EAChB,IAAK,MAAML,KAAM1T,KAAKuT,OAAQ,CAC1B,IAAInC,EAAOsC,EAAGtC,KAEd,GADA2C,EAAa,EAAI3C,EAAQA,EAAO,OAC5BtS,IAAc4U,EAAGrC,SAAU,CAC3B,MAAM2C,EAAK/G,EAAIyG,EAAGrC,eACdvS,IAAckV,IACdD,EAAYL,EAAGtB,OAAO4B,EAAItV,EAAGjE,GACzB,EAAI2W,IAGJA,EAAOsC,EAAGnC,QAAQ7S,EAAGjE,IAGhC,CACDqZ,EAAarZ,EACbA,GAAU2W,CACb,CAKD,OAAQ0C,EAAaC,EAAaF,CACrC,CAEDjC,UAAUC,GACN,MAAM+B,EAAO5T,KAAKsR,wBAClB,IAAK,MAAMoC,KAAM1T,KAAKuT,YACbzU,IAAc4U,EAAGrC,UACd,EAAIQ,EAAO1Y,SACfya,EAAKF,EAAGrC,UAAYQ,EAAOoC,SAGnC,OAAOL,CACV,CASDM,UAAU7C,GACN,GAAI,iBAAoBA,EACpB,MAAM,IAAIhU,UAAU,2BAExB,IAAK,MAAMqW,KAAM1T,KAAKuT,OAClB,GAAIG,EAAGrC,WAAaA,EAChB,OAAOqC,CAIlB,CAYDS,SAAS9C,GACL,GAAI,iBAAoBA,EACpB,MAAM,IAAIhU,UAAU,2BAExB,IAAI5C,EAAS,EACb,IAAK,MAAMiZ,KAAM1T,KAAKuT,OAAQ,CAC1B,GAAIG,EAAGrC,WAAaA,EAChB,OAAO5W,EAEP,EAAIiZ,EAAGtC,KACP3W,GAAU,EAEL,GAAKA,IACVA,GAAUiZ,EAAGtC,KAEpB,CAEJ,EAEY5D,EAAAsB,UAAGA,EAepB,MAAMsF,EACFzI,YAAY0F,GAKRrR,KAAKqR,SAAWA,CACnB,CAKDgB,OAAO3T,EAAGjE,GACN,MAAM,IAAIV,MAAM,iCACnB,CAKDqY,OAAOnF,EAAKvO,EAAGjE,GACX,MAAM,IAAIV,MAAM,iCACnB,EAEqByT,EAAA4G,mBAAGA,EAkB7B,MAAMvF,UAAiCuF,EACnCzI,YAAYqG,EAAQX,GAChB,KAAOW,aAAkBrC,GAClBqC,EAAOM,WACV,MAAM,IAAIjV,UAAU,qDAExBuO,MAAMyF,GAAYW,EAAOX,UAAY,WAGrCrR,KAAKgS,OAASA,CACjB,CAEDK,OAAO3T,EAAGjE,GACN,OAAOuF,KAAKgS,OAAOK,OAAO3T,EAAGjE,EAChC,CAED2X,OAAOnF,EAAKvO,EAAGjE,GACX,OAAOuF,KAAKgS,OAAOI,OAAOnF,EAAKvO,EAAGjE,EACrC,EAE2B+S,EAAAqB,yBAAGA,EA4DnC,MAAMD,UAAciB,EAChBlE,YAAY0I,EAAOC,EAAejD,GAC9B,IAAIkD,EACJ,GAAKF,aAAiB7E,GACd6E,aAAiB5B,EACrB8B,EAAgB,IAAI1F,EAAyB,IAAIY,EAAa4E,SAE7D,GAAKA,aAAiB1E,GACpB0E,EAAM/B,UACTiC,EAAgB,IAAI1F,EAAyBwF,OAE5C,MAAMA,aAAiBD,GACxB,MAAM,IAAI/W,UAAU,oEAIpBkX,EAAgBF,CACnB,CAID,QAHIvV,IAAcwV,IACdA,EAAgB,QAEb,OAASA,GACRA,aAAyBzE,GAC7B,MAAM,IAAIxS,UAAU,0CAExB,GAAI,OAASiX,EAAe,CACxB,GAAI,EAAIA,EAAclD,KAClB,MAAM,IAAIrX,MAAM,8CAEhB+E,IAAcwV,EAAcjD,WAC5BiD,EAAgBA,EAAc9C,UAAU,WAE/C,CAKD,IAAIJ,GAAQ,EACRkD,IACAlD,EAAOkD,EAAclD,KAChB,GAAKA,IAAWiD,aAAiB7E,GAC9B6E,aAAiB5B,KACrBrB,GAAQmD,EAAcvC,OAAOZ,OAGrCxF,MAAMwF,EAAMC,GASZrR,KAAKuU,cAAgBA,EAMrBvU,KAAKwU,wBAA2BH,aAAiB7E,GACzC6E,aAAiB5B,EAQzBzS,KAAKsU,cAAgBA,EAWrBtU,KAAKyU,SAAW,GAEhB,IAAIC,EAAwB1U,KAAK2U,wBAAwBC,KAAK5U,MAc9DA,KAAK6U,iBAAmB,SAAU5H,GAC9B,OAAOyH,EAAsBzH,EACzC,EAcQjN,KAAK8U,uBAAyB,SAAUC,GACpCL,EAAwBK,EAAIH,KAAK5U,KAC7C,CACK,CAEDuR,QAAQ7S,EAAGjE,EAAS,GAChB,GAAI,GAAKuF,KAAKoR,KACV,OAAOpR,KAAKoR,KAKhB,MAAM4D,EAAMhV,KAAKiV,WAAWvW,EAAGjE,GAC/B,IAAKua,EACD,MAAM,IAAIjb,MAAM,qDAEpB,OAAOib,EAAIzD,QAAQ7S,EAAGjE,EACzB,CA8BDka,wBAAwB1H,GACpB,GAAIjQ,OAAOE,UAAU+U,eAAepR,KAAKoM,EAAKjN,KAAKuU,cAAclD,UAAW,CACxE,GAAIrR,KAAKsU,eAAiBtU,KAAKsU,cAAcjD,UACtCrU,OAAOE,UAAU+U,eAAepR,KAAKoM,EAAKjN,KAAKsU,cAAcjD,UAChE,OAEJ,MAAM2D,EAAMhV,KAAKyU,SAASxH,EAAIjN,KAAKuU,cAAclD,WACjD,GAAI2D,KACMA,EAAIhD,QACFgD,EAAI3D,UAAYrU,OAAOE,UAAU+U,eAAepR,KAAKoM,EAAK+H,EAAI3D,WACtE,OAAO2D,CAEd,MAEG,IAAK,MAAME,KAAOlV,KAAKyU,SAAU,CAC7B,MAAMO,EAAMhV,KAAKyU,SAASS,GAC1B,GAAIF,EAAI3D,UAAYrU,OAAOE,UAAU+U,eAAepR,KAAKoM,EAAK+H,EAAI3D,UAC9D,OAAO2D,CAEd,CAEL,MAAM,IAAIjb,MAAM,8BACnB,CAODsY,OAAO3T,EAAGjE,EAAS,GACf,IAAImZ,EACJ,MAAMuB,EAAMnV,KAAKuU,cACXF,EAAQc,EAAI9C,OAAO3T,EAAGjE,GACtB2a,EAAMpV,KAAKyU,SAASJ,GAC1B,QAAIvV,IAAcsW,EAAK,CACnB,MAAMd,EAAgBtU,KAAKsU,cAC3B,IAAIe,EAAgB,EAChBrV,KAAKwU,0BACLa,EAAgBF,EAAInD,OAAOZ,MAE/BwC,EAAO5T,KAAKsR,wBACZsC,EAAKuB,EAAI9D,UAAYgD,EAGrBT,EAAKU,EAAcjD,UAAYiD,EAAcjC,OAAO3T,EAAGjE,EAAS4a,EACnE,MAEGzB,EAAOwB,EAAI/C,OAAO3T,EAAGjE,GAEzB,OAAOmZ,CACV,CAODxB,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMua,EAAMhV,KAAK6U,iBAAiB5H,GAClC,QAAInO,IAAckW,EAAK,CACnB,MAAMG,EAAMnV,KAAKuU,cAGXa,EAAMpV,KAAKsU,cACjB,IAAIe,EAAgB,EAOpB,OANIrV,KAAKwU,0BACLa,EAAgBF,EAAInD,OAAOZ,MAE/B+D,EAAI/C,OAAOnF,EAAIkI,EAAI9D,UAAW3S,EAAGjE,GAG1B4a,EAAgBD,EAAIhD,OAAOnF,EAAImI,EAAI/D,UAAW3S,EAAGjE,EAAS4a,EACpE,CACD,OAAOL,EAAI5C,OAAOnF,EAAKvO,EAAGjE,EAC7B,CAcD6a,WAAWC,EAASvD,EAAQX,GACxB,MAAMI,EAAK,IAAI9C,EAAc3O,KAAMuV,EAASvD,EAAQX,GAEpD,OADArR,KAAKyU,SAASc,GAAW9D,EAClBA,CACV,CAeDwD,WAAWO,EAAI/a,EAAS,GACpB,IAAI8a,EAOJ,OALIA,EADAC,aAAc5b,WACJoG,KAAKuU,cAAclC,OAAOmD,EAAI/a,GAG9B+a,EAEPxV,KAAKyU,SAASc,EACxB,EAEQ/H,EAAAoB,MAAGA,EA8BhB,MAAMD,UAAsBkB,EACxBlE,YAAYyE,EAAOmF,EAASvD,EAAQX,GAChC,KAAMjB,aAAiBxB,GACnB,MAAM,IAAIvR,UAAU,yBAExB,IAAMmE,OAAOmL,UAAU4I,IAAc,EAAIA,EACrC,MAAM,IAAIlY,UAAU,4CAOxB,GALK,iBAAoB2U,QACjBlT,IAAcuS,IAClBA,EAAWW,EACXA,EAAS,MAETA,EAAQ,CACR,KAAMA,aAAkBnC,GACpB,MAAM,IAAIxS,UAAU,2BAExB,GAAK,OAAS+S,EAAMkE,eACZ,GAAKtC,EAAOZ,MACZY,EAAOZ,KAAOhB,EAAMkE,cAAclD,KACtC,MAAM,IAAIrX,MAAM,iDAEpB,GAAI,iBAAoBsX,EACpB,MAAM,IAAIhU,UAAU,sCAE3B,CACD,IAAI+T,EAAOhB,EAAMgB,KACb,EAAIhB,EAAMgB,OACVA,EAAOY,EAASA,EAAOZ,KAAO,EACzB,GAAKA,GAAShB,EAAMoE,0BACrBpD,GAAQhB,EAAMmE,cAAcvC,OAAOZ,OAG3CxF,MAAMwF,EAAMC,GAEZrR,KAAKoQ,MAAQA,EAIbpQ,KAAKuV,QAAUA,EAKfvV,KAAKgS,OAASA,GAAU,IAC3B,CAEDT,QAAQ7S,EAAGjE,EAAS,GAChB,GAAI,GAAKuF,KAAKoR,KAGV,OAAOpR,KAAKoR,KAEhB,IAAIiE,EAAgB,EAChBrV,KAAKoQ,MAAMoE,0BACXa,EAAgBrV,KAAKoQ,MAAMmE,cAAcvC,OAAOZ,MAGpD,IAAIA,EAAO,EAIX,OAHIpR,KAAKgS,SACLZ,EAAOpR,KAAKgS,OAAOT,QAAQ7S,EAAGjE,EAAS4a,IAEpCA,EAAgBjE,CAC1B,CAEDiB,OAAO3T,EAAGjE,EAAS,GACf,MAAMmZ,EAAO5T,KAAKsR,wBAClB,GAAItR,OAASA,KAAKoQ,MAAM6E,WAAWvW,EAAGjE,GAClC,MAAM,IAAIV,MAAM,oBAEpB,IAAIsb,EAAgB,EAapB,OAZIrV,KAAKoQ,MAAMoE,0BACXa,EAAgBrV,KAAKoQ,MAAMmE,cAAcvC,OAAOZ,MAEhDpR,KAAKgS,OACL4B,EAAK5T,KAAKqR,UAAYrR,KAAKgS,OAAOK,OAAO3T,EAAGjE,EAAS4a,GAEhDrV,KAAKqR,SACVuC,EAAK5T,KAAKqR,WAAY,EAEjBrR,KAAKoQ,MAAMoE,0BAChBZ,EAAK5T,KAAKoQ,MAAMmE,cAAclD,UAAYrR,KAAKuV,SAE5C3B,CACV,CAEDxB,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,IAAI4a,EAAgB,EAIpB,GAHIrV,KAAKoQ,MAAMoE,0BACXa,EAAgBrV,KAAKoQ,MAAMmE,cAAcvC,OAAOZ,MAEhDpR,KAAKgS,SACAhV,OAAOE,UAAU+U,eAAepR,KAAKoM,EAAKjN,KAAKqR,UACpD,MAAM,IAAIhU,UAAU,0BAA4B2C,KAAKqR,UAEzDrR,KAAKoQ,MAAMmE,cAAcnC,OAAOpS,KAAKuV,QAAS7W,EAAGjE,GACjD,IAAI2W,EAAOiE,EACX,GAAIrV,KAAKgS,SACLhS,KAAKgS,OAAOI,OAAOnF,EAAIjN,KAAKqR,UAAW3S,EAAGjE,EAAS4a,GACnDjE,GAAQpR,KAAKgS,OAAOT,QAAQ7S,EAAGjE,EAAS4a,GACnC,GAAKrV,KAAKoQ,MAAMgB,MACbA,EAAOpR,KAAKoQ,MAAMgB,MACtB,MAAM,IAAIrX,MAAM,6CAGxB,OAAOqX,CACV,CAGDQ,UAAUC,GACN,GAAI7R,KAAKgS,OACL,OAAOhS,KAAKgS,OAAOJ,UAAUC,EAGpC,EASL,SAAS4D,EAAiBnC,GAItB,OAHI,EAAIA,IACJA,GAAK,YAEFA,CACX,CAZqB9F,EAAAmB,cAAGA,EA4CxB,MAAMD,UAAqBmB,EACvBlE,YAAY+J,EAAMC,EAAKtE,GACnB,KAAOqE,aAAgBlG,GACfkG,aAAgBjD,GACpB,MAAM,IAAIpV,UAAU,wCAOxB,GALK,iBAAoBsY,QACjB7W,IAAcuS,IAClBA,EAAWsE,EACXA,GAAM,GAEN,EAAID,EAAKtE,KACT,MAAM,IAAItU,WAAW,8BAEzB8O,MAAM8J,EAAKtE,KAAMC,GAIjBrR,KAAK0V,KAAOA,EAQZ1V,KAAK2V,MAAQA,EAOb3V,KAAKuT,OAAS,GAId,IAAI7X,EAAQ,EACZsE,KAAK4V,gBAAkB,SAAUtC,GAE7B,OADA5X,EAAQ+Z,EAAiBnC,GAClBtT,IACnB,EACQA,KAAK6V,gBAAkB,WACnB,OAAOna,CACnB,CACK,CAED2W,OAAO3T,EAAGjE,EAAS,GACf,MAAMmZ,EAAO5T,KAAKsR,wBACZ5V,EAAQsE,KAAK0V,KAAKrD,OAAO3T,EAAGjE,GAClCuF,KAAK4V,gBAAgBla,GACrB,IAAK,MAAMgY,KAAM1T,KAAKuT,YACdzU,IAAc4U,EAAGrC,WACjBuC,EAAKF,EAAGrC,UAAYqC,EAAGrB,OAAO3T,IAGtC,OAAOkV,CACV,CAMDxB,OAAOnF,EAAKvO,EAAGjE,EAAS,GACpB,MAAMiB,EAAQsE,KAAK0V,KAAKrD,OAAO3T,EAAGjE,GAClCuF,KAAK4V,gBAAgBla,GACrB,IAAK,MAAMgY,KAAM1T,KAAKuT,OAClB,QAAIzU,IAAc4U,EAAGrC,SAAU,CAC3B,MAAM2C,EAAK/G,EAAIyG,EAAGrC,eACdvS,IAAckV,GACdN,EAAGtB,OAAO4B,EAEjB,CAEL,OAAOhU,KAAK0V,KAAKtD,OAAOpS,KAAK6V,kBAAmBnX,EAAGjE,EACtD,CAUDqb,SAASzF,EAAMgB,GACX,MAAM0E,EAAK,IAAIC,EAAShW,KAAMqQ,EAAMgB,GAEpC,OADArR,KAAKuT,OAAO/Z,KAAKuc,GACVA,CACV,CAUDE,WAAW5E,GAEP,MAAM0E,EAAK,IAAItH,EAAQzO,KAAMqR,GAE7B,OADArR,KAAKuT,OAAO/Z,KAAKuc,GACVA,CACV,CASDG,SAAS7E,GACL,GAAI,iBAAoBA,EACpB,MAAM,IAAIhU,UAAU,2BAExB,IAAK,MAAMqW,KAAM1T,KAAKuT,OAClB,GAAIG,EAAGrC,WAAaA,EAChB,OAAOqC,CAIlB,EAEelG,EAAAkB,aAAGA,EAqBvB,MAAMsH,EACFrK,YAAYwK,EAAW9F,EAAMgB,GACzB,KAAM8E,aAAqBzH,GACvB,MAAM,IAAIrR,UAAU,oCAExB,IAAMmE,OAAOmL,UAAU0D,IAAW,GAAKA,EACnC,MAAM,IAAIhT,UAAU,iCAExB,MAAM+Y,EAAY,EAAID,EAAU/E,KAC1BiF,EAAWF,EAAU5C,OAAOF,QAAO,CAACiD,EAAK5C,IAAO4C,EAAM5C,EAAGrD,MAAM,GACrE,GAAKA,EAAOgG,EAAYD,EACpB,MAAM,IAAIrc,MAAM,sCACTqc,EAAYC,GAAY,OACzBD,EAAY,YAItBpW,KAAKmW,UAAYA,EAEjBnW,KAAKqQ,KAAOA,EAMZrQ,KAAKuW,WAAa,GAAKlG,GAAQ,EAC3B,KAAOA,IACPrQ,KAAKuW,UAAY,YAKrBvW,KAAK/F,MAAQoc,EACTrW,KAAKmW,UAAUR,MACf3V,KAAK/F,MAAQmc,EAAYC,EAAWhG,GAIxCrQ,KAAKwW,SAAWf,EAAiBzV,KAAKuW,WAAavW,KAAK/F,OAWxD+F,KAAKqR,SAAWA,CACnB,CAGDgB,OAAO3T,EAAGjE,GAIN,OAFkBgb,EADLzV,KAAKmW,UAAUN,kBACc7V,KAAKwW,YACnBxW,KAAK/F,KAEpC,CAMDmY,OAAO1W,GACH,GAAI,iBAAoBA,IAChB8F,OAAOmL,UAAUjR,IACjBA,IAAU+Z,EAAiB/Z,EAAQsE,KAAKuW,WAC5C,MAAM,IAAIlZ,UAAUuS,EAAiB,kBAAmB5P,MAClD,wCAA0CA,KAAKuW,WAEzD,MAAMb,EAAO1V,KAAKmW,UAAUN,kBACtBY,EAAYhB,EAAiB/Z,GAASsE,KAAK/F,OACjD+F,KAAKmW,UAAUP,gBAAgBH,EAAiBC,GAAQ1V,KAAKwW,UACvDC,EACT,EAEWjJ,EAAAwI,SAAGA,EAkBnB,MAAMvH,UAAgBuH,EAClBrK,YAAYwK,EAAW9E,GACnBzF,MAAMuK,EAAW,EAAG9E,EACvB,CAIDgB,OAAO3T,EAAGjE,GACN,QAASmR,MAAMyG,OAAO3T,EAAGjE,EAC5B,CAED2X,OAAO1W,GACC,kBAAqBA,IAErBA,GAASA,GAEbkQ,MAAMwG,OAAO1W,EAChB,EAEU8R,EAAAiB,QAAGA,EAgBlB,MAAMD,WAAaqB,EACflE,YAAYxS,EAAQkY,GAChB,KAAQlY,aAAkBwW,GAAmBxW,EAAOmZ,WAC5C9Q,OAAOmL,UAAUxT,IAAY,GAAKA,GACtC,MAAM,IAAIkE,UAAU,yEAGxB,IAAI+T,GAAQ,EACNjY,aAAkBwW,IACpByB,EAAOjY,GAEXyS,MAAMwF,EAAMC,GAMZrR,KAAK7G,OAASA,CACjB,CAEDoY,QAAQ7S,EAAGjE,GACP,IAAI2W,EAAOpR,KAAKoR,KAIhB,OAHI,EAAIA,IACJA,EAAOpR,KAAK7G,OAAOkZ,OAAO3T,EAAGjE,IAE1B2W,CACV,CAEDiB,OAAO3T,EAAGjE,EAAS,GACf,IAAI2W,EAAOpR,KAAKoR,KAIhB,OAHI,EAAIA,IACJA,EAAOpR,KAAK7G,OAAOkZ,OAAO3T,EAAGjE,IAE1BqV,EAAmBpR,GAAGb,MAAMpD,EAAQA,EAAS2W,EACvD,CAMDgB,OAAOnF,EAAKvO,EAAGjE,GACX,IAAI2W,EAAOpR,KAAK7G,OAIhB,GAHI6G,KAAK7G,kBAAkBwW,IACvByB,EAAOnE,EAAI9T,UAET8T,aAAerT,YAAcwX,IAASnE,EAAI9T,QAC5C,MAAM,IAAIkE,UAAUuS,EAAiB,cAAe5P,MAC9C,qBAAuBoR,EAAO,uBAExC,GAAK3W,EAAS2W,EAAQ1S,EAAEvF,OACpB,MAAM,IAAI2D,WAAW,gCAEzB,MAAM4Z,EAAY5G,EAAmB7C,GAKrC,OAJA6C,EAAmBpR,GAAGjD,MAAMib,EAAUlX,SAAS,OAAQ/E,EAAQ2W,EAAM,OACjEpR,KAAK7G,kBAAkBwW,GACvB3P,KAAK7G,OAAOiZ,OAAOhB,EAAM1S,EAAGjE,GAEzB2W,CACV,EAEO5D,EAAAgB,KAAGA,GAcf,MAAMmI,WAAgB9G,EAClBlE,YAAY0F,GACRzF,OAAO,EAAGyF,EACb,CAEDE,QAAQ7S,EAAGjE,EAAS,GAChBsV,EAAgBrR,GAChB,IAAIyU,EAAM1Y,EACV,KAAQ0Y,EAAMzU,EAAEvF,QAAY,IAAMuF,EAAEyU,IAChCA,GAAO,EAEX,OAAO,EAAIA,EAAM1Y,CACpB,CAED4X,OAAO3T,EAAGjE,EAAS,GACf,MAAM2W,EAAOpR,KAAKuR,QAAQ7S,EAAGjE,GAC7B,OAAOqV,EAAmBpR,GAAGb,MAAMpD,EAAQA,EAAS2W,EAAO,GAAG5R,SAAS,QAC1E,CAED4S,OAAOnF,EAAKvO,EAAGjE,EAAS,GAIhB,iBAAoBwS,IACpBA,EAAM/L,OAAO+L,IAEjB,MAAM2J,EAAOzF,EAAS3U,OAAOe,KAAK0P,EAAK,QACjCmE,EAAOwF,EAAKzd,OAClB,GAAKsB,EAAS2W,EAAQ1S,EAAEvF,OACpB,MAAM,IAAI2D,WAAW,4BAEzB,MAAMtC,EAASsV,EAAmBpR,GAGlC,OAFAkY,EAAKzY,KAAK3D,EAAQC,GAClBD,EAAOC,EAAS2W,GAAQ,EACjBA,EAAO,CACjB,EAEU5D,EAAAmJ,QAAGA,GAoBlB,MAAMpI,WAAasB,EACflE,YAAYkL,EAASxF,GAKjB,GAJK,iBAAoBwF,QAAa/X,IAAcuS,IAChDA,EAAWwF,EACXA,OAAU/X,QAEVA,IAAc+X,EACdA,GAAW,OAEV,IAAKrV,OAAOmL,UAAUkK,GACvB,MAAM,IAAIxZ,UAAU,8BAExBuO,OAAO,EAAGyF,GASVrR,KAAK6W,QAAUA,CAClB,CAEDtF,QAAQ7S,EAAGjE,EAAS,GAEhB,OADAsV,EAAgBrR,GACTA,EAAEvF,OAASsB,CACrB,CAED4X,OAAO3T,EAAGjE,EAAS,GACf,MAAM2W,EAAOpR,KAAKuR,QAAQ7S,EAAGjE,GAC7B,GAAK,GAAKuF,KAAK6W,SACP7W,KAAK6W,QAAUzF,EACnB,MAAM,IAAItU,WAAW,+BAEzB,OAAOgT,EAAmBpR,GAAGb,MAAMpD,EAAQA,EAAS2W,GAAM5R,SAAS,QACtE,CAED4S,OAAOnF,EAAKvO,EAAGjE,EAAS,GAIhB,iBAAoBwS,IACpBA,EAAM/L,OAAO+L,IAEjB,MAAM2J,EAAOzF,EAAS3U,OAAOe,KAAK0P,EAAK,QACjCmE,EAAOwF,EAAKzd,OAClB,GAAK,GAAK6G,KAAK6W,SACP7W,KAAK6W,QAAUzF,EACnB,MAAM,IAAItU,WAAW,+BAEzB,GAAKrC,EAAS2W,EAAQ1S,EAAEvF,OACpB,MAAM,IAAI2D,WAAW,4BAGzB,OADA8Z,EAAKzY,KAAK2R,EAAmBpR,GAAIjE,GAC1B2W,CACV,EAEO5D,EAAAe,KAAGA,GAoBf,MAAMD,WAAiBuB,EACnBlE,YAAYjQ,EAAO2V,GACfzF,MAAM,EAAGyF,GAUTrR,KAAKtE,MAAQA,CAChB,CAED2W,OAAO3T,EAAGjE,GACN,OAAOuF,KAAKtE,KACf,CAED0W,OAAOnF,EAAKvO,EAAGjE,GAEX,OAAO,CACV,EAEW+S,EAAAc,SAAGA,GAEnBd,EAAAa,OAAkB,CAACkE,EAAalB,IAAa,IAAI3B,EAAY6C,EAAalB,GAE1E7D,EAAA/S,OAAc,CAAKuX,EAAQvX,EAAQ4W,IAAa,IAAI5B,EAAauC,EAAQvX,EAAQ4W,GAGjF,IAAAjD,GAAAZ,EAAAY,GAAeiD,GAAa,IAAI7B,EAAK,EAAG6B,GAGxC7D,EAAAW,IAAgBkD,GAAa,IAAI7B,EAAK,EAAG6B,GAGzC7D,EAAAU,IAAgBmD,GAAa,IAAI7B,EAAK,EAAG6B,GAGzC7D,EAAAS,IAAgBoD,GAAa,IAAI7B,EAAK,EAAG6B,GAGzC7D,EAAAQ,IAAgBqD,GAAa,IAAI7B,EAAK,EAAG6B,GAGzC7D,EAAAsJ,IAAgBzF,GAAa,IAAI7B,EAAK,EAAG6B,GAG7B7D,EAAAO,KAAKsD,GAAa,IAAIhC,EAAWgC,GAG7C7D,EAAAM,MAAkBuD,GAAa,IAAIoB,EAAO,EAAGpB,GAG7C7D,EAAAuJ,MAAkB1F,GAAa,IAAIoB,EAAO,EAAGpB,GAG7C7D,EAAAK,MAAkBwD,GAAa,IAAIoB,EAAO,EAAGpB,GAG7C7D,EAAAI,MAAkByD,GAAa,IAAIoB,EAAO,EAAGpB,GAG7C7D,EAAAG,MAAkB0D,GAAa,IAAIoB,EAAO,EAAGpB,GAG/B7D,EAAAE,OAAK2D,GAAa,IAAIjC,EAAaiC,GAGjD7D,EAAAwJ,GAAe3F,GAAa,IAAI9B,EAAI,EAAG8B,GAGvC7D,EAAAC,IAAgB4D,GAAa,IAAI9B,EAAI,EAAG8B,GAGxC7D,EAAA0D,IAAgBG,GAAa,IAAI9B,EAAI,EAAG8B,GAGxC7D,EAAAyD,IAAgBI,GAAa,IAAI9B,EAAI,EAAG8B,GAGxC7D,EAAAwD,IAAgBK,GAAa,IAAI9B,EAAI,EAAG8B,GAGxC7D,EAAAuD,IAAgBM,GAAa,IAAI9B,EAAI,EAAG8B,GAG5B7D,EAAAyJ,KAAK5F,GAAa,IAAI0B,EAAU1B,GAG5C7D,EAAAsD,MAAkBO,GAAa,IAAI/B,EAAM,EAAG+B,GAG5C7D,EAAAqD,MAAkBQ,GAAa,IAAI/B,EAAM,EAAG+B,GAG5C7D,EAAAoD,MAAkBS,GAAa,IAAI/B,EAAM,EAAG+B,GAG5C7D,EAAAmD,MAAkBU,GAAa,IAAI/B,EAAM,EAAG+B,GAG5C7D,EAAA0J,MAAkB7F,GAAa,IAAI/B,EAAM,EAAG+B,GAG9B7D,EAAAkD,OAAKW,GAAa,IAAIlC,EAAYkC,GAErC7D,EAAAiD,IAAKY,GAAa,IAAInC,EAAMmC,GAE1B7D,EAAAgD,MAAKa,GAAa,IAAI2B,EAAQ3B,GAEhC7D,EAAA+C,IAAKc,GAAa,IAAIpC,EAAOoC,GAE3B7D,EAAA2J,MAAK9F,GAAa,IAAIrC,EAASqC,GAE5C,IAAAf,GAAA9C,EAAA8C,OAAkB,CAACiD,EAAQlC,EAAUmC,IAAmB,IAAI1E,EAAUyE,EAAQlC,EAAUmC,GAExFhG,EAAA6C,KAAY,CAAKqF,EAAMC,EAAKtE,IAAa,IAAI3C,EAAagH,EAAMC,EAAKtE,GAErE7D,EAAA4J,IAAW,CAAKnE,EAAeC,EAAO7B,IAAa,IAAItC,EAASkE,EAAeC,EAAO7B,GAEtF7D,EAAA4C,MAAa,CAAKiE,EAAOC,EAAejD,IAAa,IAAIzC,EAAMyF,EAAOC,EAAejD,GAErF7D,EAAA2C,yBAAoC,CAAC6B,EAAQX,IAAa,IAAIxC,EAAyBmD,EAAQX,GAE/F,IAAAnB,GAAA1C,EAAA0C,KAAY,CAAK/W,EAAQkY,IAAa,IAAI7C,GAAKrV,EAAQkY,GAE3C7D,EAAAyC,KAAKoB,GAAa,IAAIsF,GAAQtF,GAE1C7D,EAAA6J,KAAgB,CAACR,EAASxF,IAAa,IAAI9C,GAAKsI,EAASxF,GAEzD7D,EAAAwC,SAAoB,CAACtU,EAAO2V,IAAa,IAAI/C,GAAS5S,EAAO2V,GCp1EtD,MAAMiG,GAAgBtF,IAGlB,CAAEK,OAFML,EAAOK,OAAOuC,KAAK5C,GAEjBI,OADFJ,EAAOI,OAAOwC,KAAK5C,eCAtChV,OAAOgH,eAAeuT,GAAS,aAAc,CAAE7b,OAAO,IAmBtD,IAAkB8b,GAAAD,GAAAE,WAZlB,SAAoB1a,GAChB,CACI,MAAM2a,EAAWlb,OAAOe,KAAKR,GAC7B2a,EAASC,UACT,MAAMC,EAAMF,EAASlY,SAAS,OAC9B,OAAmB,IAAfoY,EAAIze,OACGuN,OAAO,GAEXA,OAAO,KAAKkR,IACtB,CAEL,EAiBkBL,GAAAM,WAVlB,SAAoB9a,GAChB,CACI,MAAM6a,EAAM7a,EAAIyC,SAAS,OACzB,OAAmB,IAAfoY,EAAIze,OACGuN,OAAO,GAEXA,OAAO,KAAKkR,IACtB,CAEL,EAkBA,IAAkBE,GAAAP,GAAAQ,WAVlB,SAAoB5d,EAAK6d,GACrB,CACI,MAAMJ,EAAMzd,EAAIqF,SAAS,IACnBhF,EAASgC,OAAOe,KAAKqa,EAAIK,SAAiB,EAARD,EAAW,KAAKna,MAAM,EAAW,EAARma,GAAY,OAE7E,OADAxd,EAAOmd,UACAnd,CACV,CAGL,EAeA+c,GAAAW,WAPA,SAAoB/d,EAAK6d,GACrB,CACI,MAAMJ,EAAMzd,EAAIqF,SAAS,IACzB,OAAOhD,OAAOe,KAAKqa,EAAIK,SAAiB,EAARD,EAAW,KAAKna,MAAM,EAAW,EAARma,GAAY,MACxE,CAEL,EChEO,MA4BMG,IA5BUhf,GA4BG,EA5BSkY,IAC/B,MAAMW,EAAS9B,GAAK/W,GAAQkY,IACtBe,OAAEA,EAAMC,OAAEA,GAAWiF,GAAatF,GAClCoG,EAAepG,EASrB,OARAoG,EAAa/F,OAAS,CAAC7X,EAAQC,KAC3B,MAAMwS,EAAMoF,EAAO7X,EAAQC,GAC3B,OAAOgd,GAAWjb,OAAOe,KAAK0P,GAAK,EAEvCmL,EAAahG,OAAS,CAACiG,EAAQ7d,EAAQC,KACnC,MAAMwS,EAAM8K,GAAWM,EAAQlf,IAC/B,OAAOiZ,EAAOnF,EAAKzS,EAAQC,EAAO,EAE/B2d,CAAY,GAZD,IAACjf,GCAhB,MAAMmf,GAAajH,IACtB,MAAMW,EAAS9B,GAAK,GAAImB,IAClBe,OAAEA,EAAMC,OAAEA,GAAWiF,GAAatF,GAClCuG,EAAkBvG,EASxB,OARAuG,EAAgBlG,OAAS,CAAC7X,EAAQC,KAC9B,MAAMwS,EAAMoF,EAAO7X,EAAQC,GAC3B,OAAO,IAAI+d,EAAUvL,EAAI,EAE7BsL,EAAgBnG,OAAS,CAACkG,EAAW9d,EAAQC,KACzC,MAAMwS,EAAMqL,EAAUG,WACtB,OAAOrG,EAAOnF,EAAKzS,EAAQC,EAAO,EAE/B8d,CAAe,ECbbG,GAAmB,IAAIF,EAAU,+CAEjCG,GAA8B,IAAIH,EAAU,gDAE9B,IAAIA,EAAU,+CCLlC,MAAMI,WAAmB7e,MAC5B4R,YAAYM,GACRL,MAAMK,EACT,EA6CE,MAAM4M,WAA4CD,GACrDjN,cACIC,SAASlM,WACTM,KAAK+L,KAAO,qCACf,EAGE,MAAM+M,WAAyCF,GAClDjN,cACIC,SAASlM,WACTM,KAAK+L,KAAO,kCACf,EAGE,MAAMgN,WAAyCH,GAClDjN,cACIC,SAASlM,WACTM,KAAK+L,KAAO,kCACf,EAGE,MAAMiN,WAAyCJ,GAClDjN,cACIC,SAASlM,WACTM,KAAK+L,KAAO,kCACf,ECnEE,MAAMkN,GAAgC3I,GAAO,CAChDlC,GAAG,eACHA,GAAG,YACHkK,GAAU,iBACVlK,GAAG,yBACHkK,GAAU,qBA+DP,SAASY,IAAyCC,UAAEA,EAAWC,MAAOC,EAAMC,GAAKpa,KAAEA,IACtF,MAAMqa,YAAEA,EAAWC,SAAEA,EAAQC,cAAEA,EAAaC,sBAAEA,EAAqBC,gBAAEA,GAAoBV,GAA8B5G,OAAOnT,GAC9H,MAAO,CACHia,YACAC,KAAM,CACFC,OACAC,QAEJpa,KAAM,CACFqa,cACAC,WACAC,gBACAE,gBAAiBD,EAAwBC,EAAkB,MAGvE,CCpFO,MAAMC,GAAmCtJ,GAAO,CAAClC,GAAG,iBA8BpD,SAASyL,GAAmCN,EAAaJ,EAAYT,IACxE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWygB,GAAiCxI,KAC7D,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOT,KAAEA,EAAIU,MAAEA,EAAKT,KAAEA,GAAMpa,KAAEA,GAwB3C,UAAqDia,UAAEA,EAAWC,MAAOU,EAAST,EAAMU,EAAOT,GAAKpa,KAAEA,IACzG,MAAO,CACHia,YACAC,KAAM,CACFU,UACAT,OACAU,QACAT,QAEJpa,KAAM0a,GAAiCvH,OAAOnT,GAEtD,CAnC4D8a,CAA4CT,GACpG,GAAIra,EAAKqa,cAAgBlf,EAAiB4f,kBACtC,MAAM,IAAIjB,GACd,KAAKc,GAAYT,GAASU,GAAUT,GAChC,MAAM,IAAIR,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAT,OACAU,QACAT,QAEJpa,OAER,CCnDO,MAAMgb,GAAoC5J,GAAO,CACpDlC,GAAG,eACHA,GAAG,OAmCA,SAAS+L,GAAoCZ,EAAaJ,EAAYT,IACzE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW+gB,GAAkC9I,KAC9D,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOR,KAAEA,EAAIc,QAAEA,GAASlb,KAAEA,GAuBvC,UAAsDia,UAAEA,EAAWC,MAAOU,EAASR,KAASc,GAAQlb,KAAEA,IACzG,MAAO,CACHia,YACAC,KAAM,CACFU,UACAR,OACAc,WAEJlb,KAAMgb,GAAkC7H,OAAOnT,GAEvD,CAjCwDmb,CAA6Cd,GACjG,GAAIra,EAAKqa,cAAgBlf,EAAiBigB,mBACtC,MAAM,IAAItB,GACd,IAAKc,IAAYR,IAASc,EAAQjhB,OAC9B,MAAM,IAAI2f,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAR,OACAc,WAEJlb,OAER,CCvDO,MAAMqb,GAA0BjK,GAAO,CAAClC,GAAG,eAAgB+J,GAAI,YAiC/D,SAASqC,GAA0BjB,EAAaJ,EAAYT,IAC/D,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWohB,GAAwBnJ,KACpD,MAAM,IAAI2H,GACd,MAAQK,MAAMqB,OAAEA,EAAMC,YAAEA,EAAWX,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAwBzD,UAA4Cia,UAAEA,EAAWC,MAAOqB,EAAQC,EAAaX,KAAUY,GAAazb,KAAEA,IACjH,MAAO,CACHia,YACAC,KAAM,CACFqB,SACAC,cACAX,QACAY,gBAEJzb,KAAMqb,GAAwBlI,OAAOnT,GAE7C,CAnC0E0b,CAAmCrB,GACzG,GAAIra,EAAKqa,cAAgBlf,EAAiBwgB,SACtC,MAAM,IAAI7B,GACd,IAAKyB,IAAWC,IAAgBX,EAC5B,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFqB,SACAC,cACAX,QACAY,gBAEJzb,OAER,CCtDO,MAAM4b,GAAyBxK,GAAO,CAAClC,GAAG,eAAgB+J,GAAI,YAiC9D,SAAS4C,GAAyBxB,EAAaJ,EAAYT,IAC9D,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW2hB,GAAuB1J,KACnD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOkB,SAAEA,EAAQjB,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAwBvD,UAA2Cia,UAAEA,EAAWC,MAAOU,EAASkB,EAAUjB,KAAUY,GAAazb,KAAEA,IAC9G,MAAO,CACHia,YACAC,KAAM,CACFU,UACAkB,WACAjB,QACAY,gBAEJzb,KAAM4b,GAAuBzI,OAAOnT,GAE5C,CAnCwE+b,CAAkC1B,GACtG,GAAIra,EAAKqa,cAAgBlf,EAAiB6gB,QACtC,MAAM,IAAIlC,GACd,IAAKc,IAAYkB,IAAajB,EAC1B,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAkB,WACAjB,QACAY,gBAEJzb,OAER,CCvDO,MAAMic,GAAwB7K,GAAO,CAAClC,GAAG,iBAyBzC,SAASgN,GAAwB7B,EAAaJ,EAAYT,IAC7D,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWgiB,GAAsB/J,KAClD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOC,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAuB7C,UAA0Cia,UAAEA,EAAWC,MAAOU,EAASC,KAAUY,GAAazb,KAAEA,IACnG,MAAO,CACHia,YACAC,KAAM,CACFU,UACAC,QACAY,gBAEJzb,KAAMic,GAAsB9I,OAAOnT,GAE3C,CAjC8Dmc,CAAiC9B,GAC3F,GAAIra,EAAKqa,cAAgBlf,EAAiBihB,OACtC,MAAM,IAAItC,GACd,IAAKc,IAAYC,EACb,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAC,QACAY,gBAEJzb,OAER,CC5CO,IAAIqc,IACX,SAAWA,GACPA,EAAcA,EAA0B,WAAI,GAAK,aACjDA,EAAcA,EAA6B,cAAI,GAAK,gBACpDA,EAAcA,EAA4B,aAAI,GAAK,eACnDA,EAAcA,EAA4B,aAAI,GAAK,cACtD,CALD,CAKGA,KAAkBA,GAAgB,CAAE,IAEhC,MAAMC,GAA8BlL,GAAO,CAC9ClC,GAAG,eACHA,GAAG,iBACHA,GAAG,sBACHkK,GAAU,kBAiCP,SAASmD,GAA8BlC,EAAaJ,EAAYT,IACnE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWqiB,GAA4BpK,KACxD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAO4B,iBAAEA,EAAgBf,aAAEA,GAAczb,KAAEA,GAuBxD,UAAgDia,UAAEA,EAAWC,MAAOU,EAAS4B,KAAqBf,GAAazb,KAAEA,IACpH,MAAMqa,YAAEA,EAAWoC,cAAEA,EAAaC,mBAAEA,EAAkBC,aAAEA,GAAiBL,GAA4BnJ,OAAOnT,GAC5G,MAAO,CACHia,YACAC,KAAM,CACFU,UACA4B,mBACAf,gBAEJzb,KAAM,CACFqa,cACAoC,gBACAE,aAAcD,EAAqBC,EAAe,MAG9D,CAtCyEC,CAAuCvC,GAC5G,GAAIra,EAAKqa,cAAgBlf,EAAiB0hB,aACtC,MAAM,IAAI/C,GACd,IAAKc,IAAY4B,EACb,MAAM,IAAI5C,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACA4B,mBACAf,gBAEJzb,OAER,CCjEO,MAAM8c,GAAwB1L,GAAO,CAAClC,GAAG,eAAgB+J,GAAI,YAiC7D,SAAS8D,GAAwB1C,EAAaJ,EAAYT,IAC7D,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW6iB,GAAsB5K,KAClD,MAAM,IAAI2H,GACd,MAAQK,MAAMC,KAAEA,EAAIqB,YAAEA,EAAWwB,UAAEA,EAASvB,aAAEA,GAAczb,KAAEA,GAwB3D,UAA0Cia,UAAEA,EAAWC,MAAOC,EAAMqB,EAAawB,KAAcvB,GAAazb,KAAEA,IACjH,MAAO,CACHia,YACAC,KAAM,CACFC,OACAqB,cACAwB,YACAvB,gBAEJzb,KAAM8c,GAAsB3J,OAAOnT,GAE3C,CAnC4Eid,CAAiC5C,GACzG,GAAIra,EAAKqa,cAAgBlf,EAAiB+hB,OACtC,MAAM,IAAIpD,GACd,IAAKK,IAASqB,IAAgBwB,EAC1B,MAAM,IAAIpD,GAEd,MAAO,CACHK,YACAC,KAAM,CACFC,OACAqB,cACAwB,YACAvB,gBAEJzb,OAER,CCtDO,MAAMmd,GAAsB/L,GAAO,CAAClC,GAAG,eAAgB+J,GAAI,YAiC3D,SAASmE,GAAsB/C,EAAaJ,EAAYT,IAC3D,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWkjB,GAAoBjL,KAChD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOT,KAAEA,EAAIU,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAwBnD,UAAwCia,UAAEA,EAAWC,MAAOU,EAAST,EAAMU,KAAUY,GAAazb,KAAEA,IACvG,MAAO,CACHia,YACAC,KAAM,CACFU,UACAT,OACAU,QACAY,gBAEJzb,KAAMmd,GAAoBhK,OAAOnT,GAEzC,CAnCoEqd,CAA+BhD,GAC/F,GAAIra,EAAKqa,cAAgBlf,EAAiBmiB,KACtC,MAAM,IAAIxD,GACd,IAAKc,IAAYT,IAASU,EACtB,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAT,OACAU,QACAY,gBAEJzb,OAER,CCvDO,MAAMud,GAA8BnM,GAAO,CAAClC,GAAG,iBA6B/C,SAASsO,GAA8BnD,EAAaJ,EAAYT,IACnE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWsjB,GAA4BrL,KACxD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOY,YAAEA,EAAWwB,UAAEA,EAASvB,aAAEA,GAAczb,KAAEA,GAwB9D,UAAgDia,UAAEA,EAAWC,MAAOU,EAASY,EAAawB,KAAcvB,GAAazb,KAAEA,IAC1H,MAAO,CACHia,YACAC,KAAM,CACFU,UACAY,cACAwB,YACAvB,gBAEJzb,KAAMud,GAA4BpK,OAAOnT,GAEjD,CAnC+Eyd,CAAuCpD,GAClH,GAAIra,EAAKqa,cAAgBlf,EAAiBuiB,aACtC,MAAM,IAAI5D,GACd,IAAKc,IAAYY,IAAgBwB,EAC7B,MAAM,IAAIpD,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAY,cACAwB,YACAvB,gBAEJzb,OAER,CClDO,MAAM2d,GAA+BvM,GAAO,CAAClC,GAAG,iBA6BhD,SAAS0O,GAA+BvD,EAAaJ,EAAYT,IACpE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW0jB,GAA6BzL,KACzD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOT,KAAEA,EAAI6C,UAAEA,EAASvB,aAAEA,GAAczb,KAAEA,GAwBvD,UAAiDia,UAAEA,EAAWC,MAAOU,EAAST,EAAM6C,KAAcvB,GAAazb,KAAEA,IACpH,MAAO,CACHia,YACAC,KAAM,CACFU,UACAT,OACA6C,YACAvB,gBAEJzb,KAAM2d,GAA6BxK,OAAOnT,GAElD,CAnCwE6d,CAAwCxD,GAC5G,GAAIra,EAAKqa,cAAgBlf,EAAiB2iB,cACtC,MAAM,IAAIhE,GACd,IAAKc,IAAYT,IAAS6C,EACtB,MAAM,IAAIpD,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAT,OACA6C,YACAvB,gBAEJzb,OAER,CClDO,MAAM+d,GAA6B3M,GAAO,CAAClC,GAAG,iBA6B9C,SAAS8O,GAA6B3D,EAAaJ,EAAYT,IAClE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW8jB,GAA2B7L,KACvD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOT,KAAEA,EAAI6C,UAAEA,EAASvB,aAAEA,GAAczb,KAAEA,GAwBvD,UAA+Cia,UAAEA,EAAWC,MAAOU,EAAST,EAAM6C,KAAcvB,GAAazb,KAAEA,IAClH,MAAO,CACHia,YACAC,KAAM,CACFU,UACAT,OACA6C,YACAvB,gBAEJzb,KAAM+d,GAA2B5K,OAAOnT,GAEhD,CAnCwEie,CAAsC5D,GAC1G,GAAIra,EAAKqa,cAAgBlf,EAAiB+iB,YACtC,MAAM,IAAIpE,GACd,IAAKc,IAAYT,IAAS6C,EACtB,MAAM,IAAIpD,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAT,OACA6C,YACAvB,gBAEJzb,OAER,CCjDO,MAAMme,GAAiC/M,GAAO,CACjDlC,GAAG,eACH+J,GAAI,UACJ/J,GAAG,cAsCA,SAASkP,GAAiC/D,EAAaJ,EAAYT,IACtE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWkkB,GAA+BjM,KAC3D,MAAM,IAAI2H,GACd,MAAQK,MAAMqB,OAAEA,EAAMpB,KAAEA,EAAIqB,YAAEA,EAAWX,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAyB/D,UAAmDia,UAAEA,EAAWC,MAAOqB,EAAQpB,EAAMqB,EAAaX,KAAUY,GAAazb,KAAEA,IAC9H,MAAO,CACHia,YACAC,KAAM,CACFqB,SACApB,OACAqB,cACAX,QACAY,gBAEJzb,KAAMme,GAA+BhL,OAAOnT,GAEpD,CArCgFqe,CAA0ChE,GACtH,GAAIra,EAAKqa,cAAgBlf,EAAiBmjB,gBACtC,MAAM,IAAIxE,GACd,KAAKyB,GAAWpB,GAASqB,GAAgBX,GACrC,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFqB,SACApB,OACAqB,cACAX,QACAY,gBAEJzb,OAER,CC/DO,MAAMue,GAAgCnN,GAAO,CAChDlC,GAAG,eACH+J,GAAI,UACJ/J,GAAG,cAsCA,SAASsP,GAAgCnE,EAAaJ,EAAYT,IACrE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAWskB,GAA8BrM,KAC1D,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOT,KAAEA,EAAI2B,SAAEA,EAAQjB,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAyB7D,UAAkDia,UAAEA,EAAWC,MAAOU,EAAST,EAAM2B,EAAUjB,KAAUY,GAAazb,KAAEA,IAC3H,MAAO,CACHia,YACAC,KAAM,CACFU,UACAT,OACA2B,WACAjB,QACAY,gBAEJzb,KAAMue,GAA8BpL,OAAOnT,GAEnD,CArC8Eye,CAAyCpE,GACnH,GAAIra,EAAKqa,cAAgBlf,EAAiBujB,eACtC,MAAM,IAAI5E,GACd,KAAKc,GAAYT,GAAS2B,GAAajB,GACnC,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAT,OACA2B,WACAjB,QACAY,gBAEJzb,OAER,CC/DO,MAAM2e,GAA+BvN,GAAO,CAC/ClC,GAAG,eACH+J,GAAI,UACJ/J,GAAG,cAoCA,SAAS0P,GAA+BvE,EAAaJ,EAAYT,IACpE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW0kB,GAA6BzM,KACzD,MAAM,IAAI2H,GACd,MAAQK,MAAMC,KAAEA,EAAIqB,YAAEA,EAAWwB,UAAEA,EAASvB,aAAEA,GAAczb,KAAEA,GAwB3D,UAAiDia,UAAEA,EAAWC,MAAOC,EAAMqB,EAAawB,KAAcvB,GAAazb,KAAEA,IACxH,MAAO,CACHia,YACAC,KAAM,CACFC,OACAqB,cACAwB,YACAvB,gBAEJzb,KAAM2e,GAA6BxL,OAAOnT,GAElD,CAnC4E6e,CAAwCxE,GAChH,GAAIra,EAAKqa,cAAgBlf,EAAiB2jB,cACtC,MAAM,IAAIhF,GACd,IAAKK,IAASqB,IAAgBwB,EAC1B,MAAM,IAAIpD,GAEd,MAAO,CACHK,YACAC,KAAM,CACFC,OACAqB,cACAwB,YACAvB,gBAEJzb,OAER,CC5DO,MAAM+e,GAA6B3N,GAAO,CAC7ClC,GAAG,eACH+J,GAAI,UACJ/J,GAAG,cAoCA,SAAS8P,GAA6B3E,EAAaJ,EAAYT,IAClE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW8kB,GAA2B7M,KACvD,MAAM,IAAI2H,GACd,MAAQK,MAAMU,QAAEA,EAAOT,KAAEA,EAAIU,MAAEA,EAAKY,aAAEA,GAAczb,KAAEA,GAwBnD,UAA+Cia,UAAEA,EAAWC,MAAOU,EAAST,EAAMU,KAAUY,GAAazb,KAAEA,IAC9G,MAAO,CACHia,YACAC,KAAM,CACFU,UACAT,OACAU,QACAY,gBAEJzb,KAAM+e,GAA2B5L,OAAOnT,GAEhD,CAnCoEif,CAAsC5E,GACtG,GAAIra,EAAKqa,cAAgBlf,EAAiB+jB,YACtC,MAAM,IAAIpF,GACd,IAAKc,IAAYT,IAASU,EACtB,MAAM,IAAIjB,GAEd,MAAO,CACHK,YACAC,KAAM,CACFU,UACAT,OACAU,QACAY,gBAEJzb,OAER,CCtDM,SAAUmf,GAAYnf,GAC3B,MAAMof,EAASpf,EAAKqf,WAAW,MAAQrf,EAAKrB,MAAM,GAAKqB,EAEvD,OAAO1C,OAAOe,KAAK+gB,EACpB,CAOM,SAAUE,GAAyBvS,GACxC,MAAMwS,EAAWxS,EAAQyS,YACnBC,EAA8B1S,EAAQ2S,OAAOC,0BAC7CC,EAAgC7S,EAAQ2S,OAAOG,4BAC/CC,EAAkC/S,EAAQ2S,OAAOK,sBACjDC,EAAgBT,EAAStlB,OAc/B,OAbsCslB,EAASU,KAAI,CAACrF,EAAS3G,KAMrD,CACNiM,SANgBjM,EAAM6L,EAOtBK,WALAlM,EAAM6L,EAAkCL,GACvCxL,GAAO6L,GAAmC7L,EAAM+L,EAAgBJ,EAKjEQ,OAAQ,IAAI9G,EAAUsB,MAKzB,CAQgB,SAAAyF,GAAiCC,EAA0CC,GAC1F,OAAO,IAAIC,EAAuB,CACjCxgB,KAAMygB,EAAMvZ,MAAMwZ,KAAKvN,OAAOmN,EAAoBtgB,MAClDia,UAAWsG,EAAeD,EAAoBK,gBAAgBP,OAC9DlG,KAAMoG,EAAoBf,SAASU,KAAKW,GAAeL,EAAeK,MAExE,CAEA,SAASC,GAAqBtB,EAAuBuB,GACpD,MAAMC,EAAOD,EAAYb,KAAKrkB,IAAC,CAAQolB,GAAIplB,EAAEwkB,OAAO9f,cAAe1E,MAEnE,OAAO2jB,EAASU,KAAKrF,IACpB,MAAMqG,EAAUrG,EAAQta,WAClB6B,EAAQ4e,EAAKG,MAAMC,GAASA,EAAKH,KAAOC,IAC9C,IAAK9e,EAAO,MAAM,IAAItH,MAAM,WAAWomB,kCAEvC,OAAO9e,CAAK,GAEd,CAEgB,SAAAif,GAA+BC,EAAgDP,GAC9F,OAAO,IAAIN,EAAuB,CACjCxgB,KAAMygB,EAAMvZ,MAAMwZ,KAAKvN,OAAOkO,EAAkBrhB,MAChDia,UAAWoH,EAAkBpH,UAC7BC,KAAM2G,GAAqBQ,EAAkB9B,SAAUuB,IAEzD,CAOM,SAAUQ,GAA2BC,WAC1C,MAAMC,EAAS,IAAIC,EACnB,GAAIF,QAAmD,OAAOC,EAC9D,MAAME,EAAepC,GAAyBiC,EAAYA,YAAYxU,SAChE4U,IAAiC,UAAnBJ,aAAW,EAAXA,EAAaR,YAAM,IAAAa,OAAA,EAAAA,EAAAC,oBAAqB,IAAIC,MAAK,CAACxc,EAAG9F,IAAM8F,EAAEyc,MAAQviB,EAAEuiB,QACrFC,IACY,UAAhBT,EAAYR,YAAI,IAAAkB,OAAA,EAAAA,EAAEJ,oBAAqB,IAAI1N,QAAO,CAAC+N,EAAaC,IAAQD,EAAcC,EAAIC,aAAanoB,QAAQ,GAChHsnB,EAAYA,YAAYxU,QAAQqV,aAAanoB,OAC9C,IAAIooB,GAAgB,EAChBC,GAAa,EACjB,IAAK,MAAMC,KAAOZ,EAAY,CAE7B,KAAOU,IAAiBE,EAAIR,OAC3BM,GAAgB,EAChBC,GAAa,EACbd,EAAOgB,IAAInC,GAAiCkB,EAAYA,YAAYxU,QAAQqV,aAAaC,GAAeX,IAEzG,IAAK,MAAMe,KAAYF,EAAIH,aAC1BZ,EAAOgB,IAAInC,GAAiCoC,EAAUf,IACtDY,GAAa,CAEd,CACD,KAAOA,EAAYN,EAAa,GAC/BK,GAAgB,EAChBC,GAAa,EACbd,EAAOgB,IAAInC,GAAiCkB,EAAYA,YAAYxU,QAAQqV,aAAaC,GAAeX,IAGzG,OAAOF,CACR,CAKA,SAASkB,GAAczI,EAAmB0I,EAAeC,EAAYC,GACpE,MAAO,CACNC,YAAa,GACbC,SAAU,GACVC,QAAS,GACT5W,OAAQ,GACR6N,YACA0I,QACAC,KACAC,mBAEF,CAWM,SAAUI,GAAUC,GACzB,MAAMC,EACL,uxBACK3B,EAAuB,GAC7B,IAAIoB,GAAM,EACNQ,EAAqB,EACrBC,EAAe,EACnB,MAAMC,EAAY,GACZC,EAAoB,GAC1B,IAAK,MAAMzmB,KAAOomB,EAAM,CACvB,MAAMM,EAAQL,EAASM,KAAK3mB,GAC5B,IAAK0mB,IAAUA,EAAME,OACpB,MAAM,IAAI7oB,MAAM,6BAA6BiC,KAG9C,GAAI0mB,EAAME,OAAOC,aAChBnC,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI2pB,aAAe,qBAC7C,GAAIJ,EAAME,OAAOG,cAAe,CAKtC,GAJAP,EAAUhpB,KAAKkpB,EAAME,OAAOI,iBAC5BlB,GAAM,EACNS,GAAgB,EAChBE,EAAQjpB,KAAKsoB,GACTY,EAAME,OAAOK,OAASV,EAAa/iB,WAAY,MAAM,IAAIzF,MAAM,+BAA+B2oB,EAAME,OAAOK,oBAAoBV,KACnI7B,EAAOlnB,KAAKooB,GAAcY,EAAUA,EAAUrpB,OAAS,GAAIqpB,EAAUrpB,OAAQ2oB,EAAIQ,IACjF5B,EAAOA,EAAOvnB,OAAS,GAAG+oB,QAAQ1oB,KAAKwC,EACvC,MAAM,GAAI0mB,EAAME,OAAOM,qBAAsB,CAC7C,MAAMC,EAAcX,EAAUY,MACxBC,EAAgBZ,EAAQW,MAC9B,QAAsBtkB,IAAlBukB,EAA6B,MAAM,IAAItpB,MAAM,qBACjD,GAAIopB,GAAeT,EAAME,OAAOU,uBAAwB,MAAM,IAAIvpB,MAAM,sCACxE2mB,EAAO2C,GAAenB,QAAQ1oB,KAAKwC,GACnCumB,GAAgB,EACK,IAAjBA,IACHD,GAAsB,EAEvB,MAAM,GAAII,EAAME,OAAOW,oBAAqB,CAE5C,GADoBf,EAAUY,OACXV,EAAME,OAAOY,sBAAuB,MAAM,IAAIzpB,MAAM,sCACvE2mB,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI+oB,QAAQ1oB,KAAKwC,GACjD0kB,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAImS,OAAO9R,KAAKkpB,EAAME,OAAOa,gBAC7D,MAAM,GAAIf,EAAME,OAAOc,4BACvBhD,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI+oB,QAAQ1oB,KAAKwC,GACjD0kB,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAImS,OAAO9R,KAAKkpB,EAAME,OAAOe,0BACvD,GAAIjB,EAAME,OAAOgB,WACvBlD,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI+oB,QAAQ1oB,KAAKwC,GACjD0kB,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI6oB,YAAYxoB,KAAKkpB,EAAME,OAAOiB,iBAC5D,GAAInB,EAAME,OAAOkB,YACvBpD,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI+oB,QAAQ1oB,KAAKwC,GACjD0kB,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI8oB,SAASzoB,KAAKkpB,EAAME,OAAO1jB,WACzD,GAAIwjB,EAAME,OAAOmB,gBACvBrD,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI+oB,QAAQ1oB,KAAKwC,QAC3C,GAAI0mB,EAAME,OAAOoB,cAAe,CACtC,GAAIxB,EAAUA,EAAUrpB,OAAS,IAAMupB,EAAME,OAAOqB,gBAAiB,MAAM,IAAIlqB,MAAM,sCACrF2mB,EAAO+B,EAAQA,EAAQtpB,OAAS,IAAI2pB,aAAeJ,EAAME,OAAOsB,aAChE,CACD,CAED,OAAOxD,CACR,CCrKA,SAASyD,GAAwB5K,GAEhC,IAAI5X,EACJ,OAFeyiB,EAAkBC,sBAAsB9K,IAGtD,IAAK,sBAAuB,CAC3B,MAAM+K,EAAUF,EAAkBG,mBAAmBhL,GACrD5X,EAAS,CACRoK,KAAM,sBACN0S,SAAU,CACT,CAAE1S,KAAM,QAASuT,OAAQgF,EAAQE,YAAapF,UAAU,EAAOC,YAAY,GAC3E,CAAEtT,KAAM,2BAA4BwN,EAAYH,KAAK,IACrD,CAAErN,KAAM,iBAAkBuT,OAAQgF,EAAQG,iBAAkBrF,UAAU,EAAMC,YAAY,IAEzFqF,KAAM,CAAE,GAET,KACA,CACD,IAAK,WAAY,CAChB,MAAMJ,EAAUF,EAAkBO,eAAepL,GACjD5X,EAAS,CACRoK,KAAM,WACN0S,SAAU,CAAC,CAAE1S,KAAM,aAAcuT,OAAQgF,EAAQM,cAAexF,UAAU,EAAMC,YAAY,IAC5FqF,KAAM,CAAEG,MAAO,IAAIC,EAAGR,EAAQO,SAE/B,KACA,CACD,IAAK,mBAAoB,CACxB,MAAMP,EAAUF,EAAkBW,uBAAuBxL,GACzD5X,EAAS,CACRoK,KAAM,mBACN0S,SAAU,CACT,CAAE1S,KAAM,aAAcuT,OAAQgF,EAAQM,cAAexF,UAAU,EAAOC,YAAY,GAClF,CAAEtT,KAAM,OAAQuT,OAAQgF,EAAQU,WAAY5F,UAAU,EAAMC,YAAY,IAEzEqF,KAAM,CACLO,KAAMX,EAAQW,KACdJ,MAAO,IAAIC,EAAGR,EAAQO,OACtB9K,MAAOuK,EAAQnL,UACf+L,KAAMZ,EAAQU,aAGhB,KACA,CACD,IAAK,SAAU,CACd,MAAMV,EAAUF,EAAkBe,aAAa5L,GAC/C5X,EAAS,CACRoK,KAAM,SACN0S,SAAU,CAAC,CAAE1S,KAAM,kBAAmBuT,OAAQgF,EAAQM,cAAexF,UAAU,EAAMC,YAAY,IACjGqF,KAAM,CAAE3K,MAAOuK,EAAQnL,YAExB,KACA,CACD,IAAK,iBAAkB,CACtB,MAAMmL,EAAUF,EAAkBgB,qBAAqB7L,GACvD5X,EAAS,CACRoK,KAAM,iBACN0S,SAAU,CACT,CAAE1S,KAAM,WAAYuT,OAAQgF,EAAQM,cAAexF,UAAU,EAAOC,YAAY,GAChF,CAAEtT,KAAM,OAAQuT,OAAQgF,EAAQU,WAAY5F,UAAU,EAAMC,YAAY,IAEzEqF,KAAM,CACLO,KAAMX,EAAQW,KACdlL,MAAOuK,EAAQnL,UACf+L,KAAMZ,EAAQU,aAGhB,KACA,CACD,IAAK,wBAAyB,CAC7B,MAAMV,EAAUF,EAAkBiB,qBAAqB9L,GACvD5X,EAAS,CACRoK,KAAM,wBACN0S,SAAU,CACT,CAAE1S,KAAM,QAASqT,UAAU,EAAOC,YAAY,EAAMC,OAAQgF,EAAQE,aACpE,CAAEzY,KAAM,iBAAkBqT,UAAU,EAAMC,YAAY,EAAOC,OAAQgF,EAAQG,mBAE9EC,KAAM,CAAEY,WAAYhB,EAAQiB,sBAE7B,KACA,CACD,IAAK,SAAU,CACd,MAAMjB,EAAUF,EAAkBoB,oBAAoBjM,GACtD5X,EAAS,CACRoK,KAAM,gBACN0S,SAAU,CACT,CAAE1S,KAAM,QAASuT,OAAQgF,EAAQmB,WAAYrG,UAAU,EAAMC,YAAY,GACzE,CAAEtT,KAAM,aAAcuT,OAAQgF,EAAQoB,iBAAkBtG,UAAU,EAAMC,YAAY,IAErFqF,KAAM,CAAEiB,SAAU,IAAIb,EAAGR,EAAQqB,UAAW5L,MAAOuK,EAAQnL,UAAW0L,MAAO,IAAIC,EAAGR,EAAQO,SAE7F,KACA,CACD,IAAK,iBAAkB,CACtB,MAAMP,EAAUF,EAAkBwB,qBAAqBrM,GACvD5X,EAAS,CACRoK,KAAM,wBACN0S,SAAU,CACT,CAAE1S,KAAM,QAASuT,OAAQgF,EAAQmB,WAAYrG,UAAU,EAAMC,YAAY,GACzE,CAAEtT,KAAM,UAAWuT,OAAQgF,EAAQoB,iBAAkBtG,UAAU,EAAOC,YAAY,GAClF,CAAEtT,KAAM,OAAQuT,OAAQgF,EAAQU,WAAY5F,UAAU,EAAMC,YAAY,IAEzEqF,KAAM,CACLiB,SAAU,IAAIb,EAAGR,EAAQqB,UACzB5L,MAAOuK,EAAQnL,UACf0L,MAAO,IAAIC,EAAGR,EAAQO,OACtBI,KAAMX,EAAQW,KACdC,KAAMZ,EAAQU,aAGhB,KACA,CACD,IAAK,yBAA0B,CAC9B,MAAMV,EAAUF,EAAkByB,sBAAsBtM,GACxD5X,EAAS,CACRoK,KAAM,yBACN0S,SAAU,CACT,CAAE1S,KAAM,QAASuT,OAAQgF,EAAQE,YAAapF,UAAU,EAAOC,YAAY,GAC3E,CAAEtT,KAAM,2BAA4BwN,EAAYH,KAAK,IACrD,CAAErN,KAAM,gBAAiBwN,EAAYH,KAAK,KAE3CsL,KAAM,CAAEY,WAAYhB,EAAQG,mBAE7B,KACA,CACD,IAAK,WAAY,CAChB,MAAMH,EAAUF,EAAkB0B,eAAevM,GACjD5X,EAAS,CACRoK,KAAM,WACN0S,SAAU,CACT,CAAE1S,KAAM,SAAUuT,OAAQgF,EAAQmB,WAAYrG,UAAU,EAAMC,YAAY,GAC1E,CAAEtT,KAAM,WAAYuT,OAAQgF,EAAQyB,SAAU1G,YAAY,EAAMD,UAAU,IAE3EsF,KAAM,CAAEiB,SAAU,IAAIb,EAAGR,EAAQqB,SAASnmB,cAE3C,KACA,CACD,IAAK,mBAAoB,CACxB,MAAM8kB,EAAUF,EAAkB4B,uBAAuBzM,GACzD5X,EAAS,CACRoK,KAAM,mBACN0S,SAAU,CACT,CAAE1S,KAAM,SAAUuT,OAAQgF,EAAQmB,WAAYrG,UAAU,EAAOC,YAAY,GAC3E,CAAEtT,KAAM,OAAQuT,OAAQgF,EAAQU,WAAY5F,UAAU,EAAMC,YAAY,GACxE,CAAEtT,KAAM,WAAYuT,OAAQgF,EAAQyB,SAAU3G,UAAU,EAAOC,YAAY,IAE5EqF,KAAM,CAAE3K,MAAOuK,EAAQnL,UAAWwM,SAAU,IAAIb,EAAGR,EAAQqB,SAASnmB,YAAaylB,KAAMX,EAAQW,OAEhG,KACA,CACD,IAAK,uBAAwB,CAC5B,MAAMX,EAAUF,EAAkB6B,oBAAoB1M,GACtD5X,EAAS,CACRoK,KAAM,uBACN0S,SAAU,CACT,CAAE1S,KAAM,QAASuT,OAAQgF,EAAQE,YAAapF,UAAU,EAAOC,YAAY,GAC3E,CAAEtT,KAAM,YAAauT,OAAQgF,EAAQyB,SAAU3G,UAAU,EAAOC,YAAY,GAC5E,CAAEtT,KAAM,2BAA4BwN,EAAYH,KAAK,IACrD,CAAErN,KAAM,gBAAiBwN,EAAYH,KAAK,IAC1C,CAAErN,KAAM,iBAAkBuT,OAAQgF,EAAQE,YAAapF,UAAU,EAAMC,YAAY,IAEpFqF,KAAM,CAAEiB,SAAU,IAAIb,EAAGR,EAAQqB,YAElC,KACA,CACD,QACChkB,EAAS,KAIX,OAAOA,EACJ,IACGA,EACHwX,UAAW+M,EAAc/M,WAEzB,CACAA,UAAW+M,EAAc/M,UACzBpN,KAAM,UACN0S,SAAUlF,EAAYH,KACtBsL,KAAM,CAAEyB,QAAS5M,EAAYra,MAEjC,CAEA,SAASknB,GAAuB7M,GAC/B,IAAI5X,EAEJ,OADgByM,KAAKiE,OAAOkH,EAAYra,OAEvC,KAAKmnB,EAAqBC,eAAgB,CACzC,MAAMC,EjB9KF,SAAyChN,EAAaJ,EAAYT,IACrE,IAAKa,EAAYJ,UAAUhU,OAAOgU,GAC9B,MAAM,IAAIN,GACd,GAAIU,EAAYra,KAAK/F,SAAW8f,GAA8B7H,KAC1D,MAAM,IAAI2H,GACd,MAAQK,MAAMC,KAAEA,EAAIC,KAAEA,GAAMpa,KAAEA,GAAUga,GAAyCK,GACjF,GAAIra,EAAKqa,cAAgBlf,EAAiBisB,eACtC,MAAM,IAAItN,GACd,IAAKK,IAASC,EACV,MAAM,IAAIR,GAEd,MAAO,CACHK,YACAC,KAAM,CACFC,OACAC,QAEJpa,OAER,CiB2JqBsnB,CAAoCjN,GACtD5X,EAAS,CACRoK,KAAM,iBACN0S,SAAU,CACT,CAAE1S,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,gBAAiBwa,EAAUnN,KAAKE,OAEzCoL,KAAM,CAAElL,SAAU+M,EAAUrnB,KAAKsa,SAAUC,cAAe8M,EAAUrnB,KAAKua,cAAeE,gBAAiB4M,EAAUrnB,KAAKya,kBAEzH,KACA,CACD,KAAK0M,EAAqBpM,kBAAmB,CAC5C,MAAMsM,EAAYE,GAAuClN,GACzD5X,EAAS,CACRoK,KAAM,oBACN0S,SAAU,CACT,CAAE1S,KAAM,gBAAiBwa,EAAUnN,KAAKU,SACxC,CAAE/N,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,WAAYwa,EAAUnN,KAAKW,OACnC,CAAEhO,KAAM,gBAAiBwa,EAAUnN,KAAKE,OAEzCoL,KAAM,CAAE,GAET,KACA,CACD,KAAK2B,EAAqB/L,mBAAoB,CAC7C,MAAMiM,EAAYG,GAAwCnN,GACpDoN,EAAWJ,EAAUnN,KAAKgB,QAAQ+E,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MACxFte,EAAS,CACRoK,KAAM,qBACN0S,SAAU,CAAC,CAAE1S,KAAM,cAAewa,EAAUnN,KAAKU,SAAW,CAAE/N,KAAM,gBAAiBwa,EAAUnN,KAAKE,SAAWqN,GAC/GjC,KAAM,CAAE5pB,EAAGyrB,EAAUrnB,KAAKpE,IAE3B,KACA,CACD,KAAKurB,EAAqBxL,SAAU,CACnC,MAAM0L,EAAYK,GAA8BrN,GAC1CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,WACN0S,SAAU,CACT,CAAE1S,KAAM,YAAawa,EAAUnN,KAAKqB,QACpC,CAAE1O,KAAM,iBAAkBwa,EAAUnN,KAAKsB,aACzC,CAAE3O,KAAM,WAAYwa,EAAUnN,KAAKW,UAChC4M,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,cAE9C,KACA,CACD,KAAK6mB,EAAqBnL,QAAS,CAClC,MAAMqL,EAAYO,GAA6BvN,GACzCoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,UACN0S,SAAU,CACT,CAAE1S,KAAM,YAAawa,EAAUnN,KAAKU,SACpC,CAAE/N,KAAM,cAAewa,EAAUnN,KAAK4B,UACtC,CAAEjP,KAAM,WAAYwa,EAAUnN,KAAKW,UAChC4M,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,cAE9C,KACA,CACD,KAAK6mB,EAAqB/K,OAAQ,CACjC,MAAMiL,EAAYQ,GAA4BxN,GACxCoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,SACN0S,SAAU,CAAC,CAAE1S,KAAM,YAAawa,EAAUnN,KAAKU,SAAW,CAAE/N,KAAM,WAAYwa,EAAUnN,KAAKW,UAAY4M,GACzGjC,KAAM,CAAE,GAET,KACA,CACD,KAAK2B,EAAqBtK,aAAc,CACvC,MAAMwK,EAAYS,GAAkCzN,GAC9CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,eACN0S,SAAU,CAAC,CAAE1S,KAAM,aAAcwa,EAAUnN,KAAKU,SAAW,CAAE/N,KAAM,sBAAuBwa,EAAUnN,KAAKsC,qBAAuBiL,GAChIjC,KAAM,CAAE/I,cAAe4K,EAAUrnB,KAAKyc,cAAeE,aAAc0K,EAAUrnB,KAAK2c,eAEnF,KACA,CACD,KAAKwK,EAAqBjK,OAAQ,CACjC,MAAMmK,EAAYU,GAA4B1N,GACxCoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,SACN0S,SAAU,CACT,CAAE1S,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,YAAawa,EAAUnN,KAAKsB,aACpC,CAAE3O,KAAM,eAAgBwa,EAAUnN,KAAK8C,cACpCyK,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,cAE9C,KACA,CACD,KAAK6mB,EAAqB7J,KAAM,CAC/B,MAAM+J,EAAYW,GAA0B3N,GACtCoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,OACN0S,SAAU,CACT,CAAE1S,KAAM,cAAewa,EAAUnN,KAAKU,SACtC,CAAE/N,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,WAAYwa,EAAUnN,KAAKW,UAChC4M,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,cAE9C,KACA,CACD,KAAK6mB,EAAqBzJ,aAAc,CACvC,MAAM2J,EAAYY,GAAkC5N,GAC9CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,eACN0S,SAAU,CACT,CAAE1S,KAAM,aAAcwa,EAAUnN,KAAKU,SACrC,CAAE/N,KAAM,iBAAkBwa,EAAUnN,KAAKsB,aACzC,CAAE3O,KAAM,WAAYwa,EAAUnN,KAAK8C,cAChCyK,GAEJjC,KAAM,CAAE,GAET,KACA,CACD,KAAK2B,EAAqBrJ,cAAe,CACxC,MAAMuJ,EAAYa,GAAmC7N,GAC/CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,gBACN0S,SAAU,CACT,CAAE1S,KAAM,aAAcwa,EAAUnN,KAAKU,SACrC,CAAE/N,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,eAAgBwa,EAAUnN,KAAK8C,cACpCyK,GAEJjC,KAAM,CAAE,GAET,KACA,CACD,KAAK2B,EAAqBjJ,YAAa,CACtC,MAAMmJ,EAAYc,GAAiC9N,GAC7CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,cACN0S,SAAU,CACT,CAAE1S,KAAM,aAAcwa,EAAUnN,KAAKU,SACrC,CAAE/N,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,eAAgBwa,EAAUnN,KAAK8C,cACpCyK,GAEJjC,KAAM,CAAE,GAET,KACA,CACD,KAAK2B,EAAqB7I,gBAAiB,CAC1C,MAAM+I,EAAYe,GAAqC/N,GACjDoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,kBACN0S,SAAU,CACT,CAAE1S,KAAM,YAAawa,EAAUnN,KAAKqB,QACpC,CAAE1O,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,iBAAkBwa,EAAUnN,KAAKsB,aACzC,CAAE3O,KAAM,WAAYwa,EAAUnN,KAAKW,UAChC4M,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,YAAaga,SAAU+M,EAAUrnB,KAAKsa,WAEpF,KACA,CACD,KAAK6M,EAAqBzI,eAAgB,CACzC,MAAM2I,EAAYgB,GAAoChO,GAChDoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,iBACN0S,SAAU,CACT,CAAE1S,KAAM,YAAawa,EAAUnN,KAAKU,SACpC,CAAE/N,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,cAAewa,EAAUnN,KAAK4B,UACtC,CAAEjP,KAAM,WAAYwa,EAAUnN,KAAKW,UAChC4M,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,YAAaga,SAAU+M,EAAUrnB,KAAKsa,WAEpF,KACA,CACD,KAAK6M,EAAqBrI,cAAe,CACxC,MAAMuI,EAAYiB,GAAmCjO,GAC/CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,gBACN0S,SAAU,CACT,CAAE1S,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,YAAawa,EAAUnN,KAAKsB,aACpC,CAAE3O,KAAM,eAAgBwa,EAAUnN,KAAK8C,cACpCyK,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,YAAaga,SAAU+M,EAAUrnB,KAAKsa,WAEpF,KACA,CACD,KAAK6M,EAAqBjI,YAAa,CACtC,MAAMmI,EAAYkB,GAAiClO,GAC7CoN,EAAWJ,EAAUnN,KAAKuB,aAAawE,KAAI,CAACc,EAAM9M,KAAS,CAAEpH,KAAM,UAAUoH,OAAU8M,MAC7Fte,EAAS,CACRoK,KAAM,cACN0S,SAAU,CACT,CAAE1S,KAAM,cAAewa,EAAUnN,KAAKU,SACtC,CAAE/N,KAAM,eAAgBwa,EAAUnN,KAAKC,MACvC,CAAEtN,KAAM,WAAYwa,EAAUnN,KAAKW,UAChC4M,GAEJjC,KAAM,CAAEmC,OAAQ,IAAI/B,EAAGyB,EAAUrnB,KAAK2nB,OAAOrnB,YAAaga,SAAU+M,EAAUrnB,KAAKsa,WAEpF,KACA,CACD,KAAK6M,EAAqBqB,mBAAoB,CAM7C,MAEMnB,EAFoCjW,GAA0C,CAAClC,GAAG,eAAgB8B,GAAK,GAAI,WAE7DmC,OAAOkH,EAAYra,MACvEyC,EAAS,CACRoK,KAAM,qBACN0S,SAAU,CACT,CAAE1S,KAAM,gBAAiBwN,EAAYH,KAAK,IAC1C,CAAErN,KAAM,eAAgBwN,EAAYH,KAAK,IACzC,CAAErN,KAAM,gBAAiBwN,EAAYH,KAAK,KAE3CsL,KAAM,CAAExI,UAAW,IAAI1D,EAAU+N,EAAUxM,SAE5C,KACA,CACD,KAAKsM,EAAqBsB,WACzBhmB,EAAS,CACRoK,KAAM,aACN0S,SAAU,CAAC,CAAE1S,KAAM,aAAcwN,EAAYH,KAAK,KAClDsL,KAAM,CAAE,GAET,MAED,KAAK2B,EAAqBuB,mBAAoB,CAM7C,MAEMrB,EAFoCjW,GAA0C,CAAClC,GAAG,eAAgB8B,GAAK,GAAI,WAE7DmC,OAAOkH,EAAYra,MACvEyC,EAAS,CACRoK,KAAM,qBACN0S,SAAU,CACT,CAAE1S,KAAM,gBAAiBwN,EAAYH,KAAK,IAC1C,CAAErN,KAAM,eAAgBwN,EAAYH,KAAK,KAE1CsL,KAAM,CAAExI,UAAW,IAAI1D,EAAU+N,EAAUxM,SAE5C,KACA,CACD,KAAKsM,EAAqBwB,oBAAqB,CAC9C,MAAMlB,EAAWpN,EAAYH,KAAKvb,MAAM,GAAGshB,KAAI,CAACc,EAAM9M,KAAG,CAAQpH,KAAM,UAAUoH,OAAU8M,MAC3Fte,EAAS,CACRoK,KAAM,sBACN0S,SAAU,CAAC,CAAE1S,KAAM,cAAewN,EAAYH,KAAK,OAASuN,GAC5DjC,KAAM,CAAE5pB,EAAGye,EAAYra,KAAK,KAE7B,KACA,CACD,KAAKmnB,EAAqByB,gBAAiB,CAC1C,MAAMvB,EAAYwB,GAA6CxO,GAE/D,IADkBgN,EAAUnN,KAAKC,KACjB,MAAM,IAAItf,MAAM,+CAChC4H,EAAS,CACRoK,KAAM,kBACN0S,SAAU,CAAC,CAAE1S,KAAM,eAAgBwa,EAAUnN,KAAKC,OAClDqL,KAAM,CAAElL,SAAU+M,EAAUrnB,KAAKsa,SAAUC,cAAe8M,EAAUrnB,KAAKua,cAAeE,gBAAiB4M,EAAUrnB,KAAKya,kBAEzH,KACA,CACD,QACChY,EAAS,KAIX,OAAOA,EACJ,IACGA,EACHwX,UAAW6O,IAEX,CACA7O,UAAW6O,GACXjc,KAAM,UACN0S,SAAUlF,EAAYH,KACtBsL,KAAM,CAAEyB,QAAS5M,EAAYra,MAEjC,CAEA,SAAS+oB,GAAiC1O,GACzC,MAAO,CACNxN,KAAM,+BACN0S,SAAU,CACT,CAAE1S,KAAM,oBAAqBwN,EAAYH,KAAK,IAC9C,CAAErN,KAAM,gBAAiBwN,EAAYH,KAAK,IAC1C,CAAErN,KAAM,YAAawN,EAAYH,KAAK,IACtC,CAAErN,KAAM,eAAgBwN,EAAYH,KAAK,IACzC,CAAErN,KAAM,mBAAoBwN,EAAYH,KAAK,IAC7C,CAAErN,KAAM,kBAAmBwN,EAAYH,KAAK,IACxCG,EAAYH,KAAKjgB,OAAS,EAAI,CAAE4S,KAAM,gBAAiBwN,EAAYH,KAAK,SAAOta,GAEpF4lB,KAAM,CAAE,EACRvL,UAAW+O,GAEb,CAEA,SAASC,GAAmB1J,EAA4B2J,GACvD,OAAO3J,EACLU,KAAKrF,IACL,MAAMuO,EAAUvO,EAAQ/N,KACxB,GAAI/O,OAAOE,UAAU+U,eAAepR,KAAKiZ,EAAS,YAAa,CAC9D,MAAMwO,EAAYF,EAAS,GAAGA,OAAYC,IAAYA,EAEtD,OAAOF,GAAiCrO,EAAS2E,SAAU6J,EAC3D,CACA,MAAO,IACUxO,EAChB/N,KAAMqc,EAAS,GAAGA,OAAYC,IAAYA,EAE3C,IAEDE,MACH,OAUaC,GAUZ7c,YAAY8c,EAAiCC,GAC5C,MAAMC,EAA2C,CAChD,CAACzC,EAAc/M,UAAUyP,WAAYzE,IACrC,CAAC6D,GAAqBY,WAAYxC,IAClC,CAAC8B,GAAgCU,WAAYX,KAE9C,IAAIvH,EACJgI,EAAUA,GAAW,GACrB,IAAK,MAAMG,KAAeJ,EACzBC,EAAQlvB,KAAKwG,KAAK8oB,eAAe,IAAItQ,EAAUqQ,EAAY1P,WAAY0P,EAAYE,MAGpF,GAAKL,EAEE,CAENhI,EAAS,IAAIsI,IAAIN,GAEjB,IAAK,MAAMO,KAAcN,EACnBjI,EAAOwI,IAAID,EAAW,KAC1BvI,EAAO5b,OAAOmkB,EAGhB,MAVAvI,EAAS,IAAIsI,IAAIL,GAYlB3oB,KAAKmpB,mBAAqBzI,CAC1B,CAOD0I,UAAUjQ,EAAsBkQ,GAC/BrpB,KAAKmpB,mBAAmBrkB,IAAIqU,EAAUyP,WAAYS,EAClD,CAODC,iBAAiBnQ,EAA+B4P,GAC/C/oB,KAAKmpB,mBAAmBrkB,OAAO9E,KAAK8oB,eAAe,IAAItQ,EAAUW,GAAY4P,GAC7E,CAEOD,eAAe3P,EAAsB4P,GAqC5C,MAAO,CAAC5P,EAAUyP,YApC2DrP,IAC5E,MACMgQ,EADQ,IAAIC,EAAsBT,GACjB1W,OAAOkH,EAAYra,MAC1C,GAAKqqB,EAEE,CACN,MAAME,EAAKV,EAAIzH,aAAalB,MAAMsJ,GAAUA,EAAM3d,OAASwd,EAASxd,OACpE,IAAK0d,EACJ,OAAOzpB,KAAK2pB,8BAA8BpQ,EAAYJ,UAAWI,EAAYH,KAAMG,EAAYra,KAAMqqB,EAASxd,MAE/G,MAAM6d,EAAkBzB,GAAqCsB,EAAGhL,UAC1DA,EAAWlF,EAAYH,KAAK+F,KAAI,CAACc,EAAM9M,IACxCA,EAAMyW,EAAgBzwB,OAClB,CACN4S,KAAM6d,EAAgBzW,GAAKpH,QACxBkU,GAKG,CACNlU,KAAM,cAAaoH,EAAMyW,EAAgBzwB,WACtC8mB,KAKN,MAAO,CACNlU,KAAMwd,EAASxd,KACf0S,WACAtF,UAAWI,EAAYJ,UACvBuL,KAAM6E,EAASrqB,KAEhB,CA7BA,OAAOc,KAAK2pB,8BAA8BpQ,EAAYJ,UAAWI,EAAYH,KAAMG,EAAYra,KA6B/F,GAGsC0V,KAAK5U,MAC7C,CAMD6pB,aAAa1Q,GACZnZ,KAAKmpB,mBAAmBW,OAAO3Q,EAAUyP,WACzC,CAEOe,8BAA8BxQ,EAAsBsF,EAAyBsL,EAAkBhe,GACtG,MAAO,CACNoN,YACAsF,WACAiG,KAAM,CAAEyB,QAAS4D,GACjBhe,KAAMA,GAAQ,UAEf,CAODie,iBAAoEzQ,GACnE,GAAKvZ,KAAKmpB,mBAAmBD,IAAI3P,EAAYJ,UAAUyP,YAEhD,CAGN,OAFe5oB,KAAKmpB,mBAAmBjlB,IAAIqV,EAAYJ,UAAUyP,WAE1DS,CAAO9P,EACd,CALA,OAAOvZ,KAAK2pB,8BAA8BpQ,EAAYJ,UAAWI,EAAYH,KAAMG,EAAYra,KAMhG,CAOD+qB,qBAAqBC,GACpB,MAAMzK,EAAiBjB,GAAyB0L,GAEhD,OAAOA,EAAU5I,aAAanC,KAAK5F,GAAgBvZ,KAAKgqB,iBAAiBzK,GAAiChG,EAAakG,KACvH,CAOD0K,2BAA2BC,GAC1B,MAAM3K,EAAiB2K,EAAgB1L,YAAYS,KAAKkL,IAAc,CACrEjL,SAAUiL,EAASC,OACnBjL,WAAYgL,EAASxe,SACrByT,OAAQ+K,EAAS/K,WAGlB,OAAO8K,EAAgB9I,aAAanC,KAAKoK,GACxCvpB,KAAKgqB,iBAAiB1J,GAA+BiJ,EAAyC9J,KAE/F,CASD8K,uBAAuBC,EAAwBC,EAAcC,GAAmB,GAC/E,MAAMjK,QAAoB+J,EAAWG,eAAeF,EAAM,CAAEG,WAAY,cACxE,IAAKnK,EAAa,OAAO,KACzB,GAAIiK,EAAS,CAGZ,OAFkBlK,GAA2BC,GAE5Ba,aAAanC,KAAKsK,GAAOzpB,KAAKgqB,iBAAiBP,IAChE,CAED,OAAOzpB,KAAKiqB,qBAAqBxJ,EAAYA,YAAYxU,QACzD,CAOD4e,qBAAqBC,GACdA,aAAkBtuB,WAASsuB,EAAStuB,EAAAA,OAAOe,KAAKutB,EAAQ,WAC9D,MACM7e,EADK0U,EAAYpjB,KAAKutB,GACTC,iBAEnB,OAAO/qB,KAAKiqB,qBAAqBhe,EACjC"}